{"mappings":"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","sources":["src/rocketbotweb.ts","src/bim/chart.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/auto/auto.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.animator.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.animation.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.animations.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.datasetController.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.bar.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.bubble.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.doughnut.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.line.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.polarArea.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.pie.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.radar.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/controllers/controller.scatter.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.adapters.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.interaction.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.layouts.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/platform/platform.base.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/platform/platform.basic.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/platform/platform.dom.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/platform/index.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.element.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.scale.autoskip.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.scale.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.typedRegistry.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.registry.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.plugins.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.config.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.controller.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/elements/element.arc.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/elements/element.line.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/elements/element.point.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/elements/element.bar.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.colors.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.decimation.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.filler/index.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.legend.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.title.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.subtitle.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/plugins/plugin.tooltip.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.category.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.linearbase.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.linear.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.logarithmic.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.radialLinear.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.time.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/scales/scale.timeseries.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/index.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.core.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.math.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.collection.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.extras.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.easing.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.color.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.animations.defaults.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.intl.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.ticks.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.defaults.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.layouts.defaults.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/core/core.scale.defaults.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.canvas.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.options.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.config.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.curve.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.dom.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.interpolation.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.rtl.ts",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/src/helpers/helpers.segment.js",".yarn/cache/@kurkle-color-npm-0.3.2-98f2086013-79e97b31f8.zip/node_modules/@kurkle/color/dist/color.esm.js",".yarn/unplugged/@parcel-transformer-js-virtual-fa6d70d1c9/node_modules/@parcel/transformer-js/src/esmodule-helpers.js",".yarn/__virtual__/chartjs-chart-sankey-virtual-15c38d6a41/0/cache/chartjs-chart-sankey-npm-0.12.0-d530afc009-5d8368f989.zip/node_modules/chartjs-chart-sankey/dist/chartjs-chart-sankey.esm.js",".yarn/cache/chart.js-npm-4.2.1-97512b9a29-7319fdfd1e.zip/node_modules/chart.js/helpers/helpers.js"],"sourcesContent":["import { RocketBotWeb } from \"./bim/chart\";\r\n\r\n// \"globals are evil\"\r\ndeclare global {\r\n    interface Window { RocketBotWeb: any; }\r\n}\r\nwindow.RocketBotWeb = RocketBotWeb;\r\n","import { Chart, ChartData, ChartDataset, LineControllerChartOptions } from 'chart.js/auto';\r\nimport { SankeyController, Flow } from 'chartjs-chart-sankey';\r\n\r\nChart.register(SankeyController, Flow);\r\n\r\ninterface ByDayOfWeekData {\r\n    riders: string[];\r\n    riderToWeekdayToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface ByRideCountGroupData {\r\n    riders: string[];\r\n    rideCountGroupNames: string[];\r\n    riderToGroupToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface LatestRiderSankeyData {\r\n    from: string;\r\n    to: string;\r\n    count: number;\r\n}\r\n\r\ntype CompanyToTypeToRiderToCount = {\r\n    [company: string]: {\r\n        [vehicleType: string]: {\r\n            [rider: string]: number\r\n        }\r\n    }\r\n};\r\n\r\ninterface LastRiderPieData {\r\n    companyToTypeToLastRiderToCount: CompanyToTypeToRiderToCount;\r\n    companyToTypeToLastRiderToCountRidden: CompanyToTypeToRiderToCount;\r\n}\r\n\r\ntype FixedCouplingData = {\r\n    [frontVehicleType: string]: {\r\n        [rider: string]: number[]\r\n    }\r\n};\r\n\r\nexport module RocketBotWeb.Bim.Charting {\r\n    function doSetUpByDayOfWeek() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByDayOfWeekData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        const totalWeekdayToCount: number[] = [];\r\n        for (const rider of data.riders) {\r\n            const weekdayToCount = data.riderToWeekdayToCount[rider];\r\n            while (totalWeekdayToCount.length < weekdayToCount.length) {\r\n                totalWeekdayToCount.push(0);\r\n            }\r\n            for (let i = 0; i < weekdayToCount.length; i++) {\r\n                totalWeekdayToCount[i] += weekdayToCount[i];\r\n            }\r\n            datasets.push({\r\n                label: rider,\r\n                data: weekdayToCount,\r\n                yAxisID: \"yRegular\",\r\n            });\r\n        }\r\n        datasets.push({\r\n            label: \"(total)\",\r\n            data: totalWeekdayToCount,\r\n            yAxisID: \"yTotal\",\r\n        });\r\n\r\n        new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    \"yRegular\": {\r\n                        display: true,\r\n                        position: \"left\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (single rider)\",\r\n                        },\r\n                    },\r\n                    \"yTotal\": {\r\n                        display: true,\r\n                        position: \"right\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (total)\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpByRideCountGroup() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByRideCountGroupData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToGroupToCount[rider],\r\n            });\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: data.rideCountGroupNames,\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        const logPlotCheckbox = <HTMLInputElement|null>document.getElementById(\"bim-charting-log-plot-checkbox\");\r\n        if (logPlotCheckbox !== null) {\r\n            logPlotCheckbox.addEventListener(\"change\", () => {\r\n                chart.options.scales!.y!.type = logPlotCheckbox.checked ? \"logarithmic\" : \"linear\";\r\n                chart.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    function doSetUpLatestRiderCount() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"sankey-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"sankey-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LatestRiderSankeyData[] = JSON.parse(dataString);\r\n        let labels = {};\r\n        for (let datum of data) {\r\n            // labels: strip leading Enter and Escape symbols from from and to values\r\n            labels[datum.from] = datum.from.substring(1);\r\n            labels[datum.to] = datum.to.substring(1);\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"sankey\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        data: data,\r\n                        labels: labels,\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpLastRiderPie() {\r\n        const ALL_VALUE: string = \"\\u0018\";\r\n\r\n        // set up controls\r\n        const controls = <HTMLParagraphElement|null>document.getElementById(\"pie-controls\");\r\n        if (controls === null) {\r\n            return;\r\n        }\r\n\r\n        const companyLabel = document.createElement(\"label\");\r\n        companyLabel.appendChild(document.createTextNode(\"Company: \"));\r\n        const companySelect = document.createElement(\"select\");\r\n        companyLabel.appendChild(companySelect);\r\n        controls.appendChild(companyLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const typeLabel = document.createElement(\"label\");\r\n        typeLabel.appendChild(document.createTextNode(\"Type: \"));\r\n        const typeSelect = document.createElement(\"select\");\r\n        typeLabel.appendChild(typeSelect);\r\n        controls.appendChild(typeLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const riddenOnlyLabel = document.createElement(\"label\");\r\n        const riddenOnlyCheckbox = document.createElement(\"input\");\r\n        riddenOnlyCheckbox.type = \"checkbox\";\r\n        riddenOnlyLabel.appendChild(riddenOnlyCheckbox);\r\n        riddenOnlyLabel.appendChild(document.createTextNode(\" ridden only\"));\r\n        controls.appendChild(riddenOnlyLabel);\r\n\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LastRiderPieData = JSON.parse(dataString);\r\n\r\n        const allCompanies: string[] = Object.keys(data.companyToTypeToLastRiderToCount);\r\n        allCompanies.sort();\r\n\r\n        const allTypes: string[] = [];\r\n        for (let company of allCompanies) {\r\n            for (let tp of Object.keys(data.companyToTypeToLastRiderToCount[company])) {\r\n                if (allTypes.indexOf(tp) === -1) {\r\n                    allTypes.push(tp);\r\n                }\r\n            }\r\n        }\r\n        allTypes.sort();\r\n\r\n        // pre-populate options\r\n        const allCompaniesOption = document.createElement(\"option\");\r\n        allCompaniesOption.value = ALL_VALUE;\r\n        allCompaniesOption.textContent = \"(all)\";\r\n        companySelect.appendChild(allCompaniesOption);\r\n        for (let company of allCompanies) {\r\n            const companyOption = document.createElement(\"option\");\r\n            companyOption.value = company;\r\n            companyOption.textContent = company;\r\n            companySelect.appendChild(companyOption);\r\n        }\r\n        companySelect.selectedIndex = 0;\r\n\r\n        const allTypesOption = document.createElement(\"option\");\r\n        allTypesOption.value = ALL_VALUE;\r\n        allTypesOption.textContent = \"(all)\";\r\n        typeSelect.appendChild(allTypesOption);\r\n        for (let tp of allTypes) {\r\n            const typeOption = document.createElement(\"option\");\r\n            typeOption.value = tp;\r\n            typeOption.textContent = tp;\r\n            typeSelect.appendChild(typeOption);\r\n        }\r\n        typeSelect.selectedIndex = 0;\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"pie\",\r\n            data: {\r\n                datasets: [],\r\n            },\r\n        });\r\n\r\n        // define update function\r\n        function updateChart(\r\n            chart: Chart<\"pie\">, data: LastRiderPieData,\r\n            companySelect: HTMLSelectElement, typeSelect: HTMLSelectElement,\r\n            riddenOnlyCheckbox: HTMLInputElement,\r\n            allCompanies: string[], allTypes: string[],\r\n        ) {\r\n            const considerCompanies: string[] = (companySelect.value === ALL_VALUE)\r\n                ? allCompanies\r\n                : [companySelect.value];\r\n            const considerTypes: string[] = (typeSelect.value === ALL_VALUE)\r\n                ? allTypes\r\n                : [typeSelect.value];\r\n            const companyToTypeToLastRiderToCount = riddenOnlyCheckbox.checked\r\n                ? data.companyToTypeToLastRiderToCountRidden\r\n                : data.companyToTypeToLastRiderToCount;\r\n\r\n            // does the selected company even have this type?\r\n            if (considerCompanies.length === 1 && considerTypes.length === 1) {\r\n                const companyTypes = Object.keys(companyToTypeToLastRiderToCount[considerCompanies[0]]);\r\n                if (companyTypes.indexOf(considerTypes[0]) === -1) {\r\n                    // no; switch over to \"all types\"\r\n                    considerTypes.length = 0;\r\n                    considerTypes.push(...allTypes);\r\n                }\r\n            }\r\n\r\n            // reduce types to those of the given company\r\n            while (typeSelect.lastChild !== null) {\r\n                typeSelect.removeChild(typeSelect.lastChild);\r\n            }\r\n            const allTypesOption = document.createElement(\"option\");\r\n            allTypesOption.value = ALL_VALUE;\r\n            allTypesOption.textContent = \"(all)\";\r\n            typeSelect.appendChild(allTypesOption);\r\n\r\n            const consideredTypes: string[] = [];\r\n            for (let companyName of considerCompanies) {\r\n                let companyTypes: string[] = Object.keys(companyToTypeToLastRiderToCount[companyName]);\r\n                for (let tp of companyTypes) {\r\n                    if (consideredTypes.indexOf(tp) === -1) {\r\n                        consideredTypes.push(tp);\r\n                    }\r\n                }\r\n            }\r\n            consideredTypes.sort();\r\n            for (let tp of consideredTypes) {\r\n                const typeOption = document.createElement(\"option\");\r\n                typeOption.value = tp;\r\n                typeOption.textContent = tp;\r\n                typeSelect.appendChild(typeOption);\r\n            }\r\n\r\n            if (considerTypes.length === 1) {\r\n                typeSelect.value = considerTypes[0];\r\n            } else {\r\n                typeSelect.selectedIndex = 0;\r\n            }\r\n\r\n            // collect the counts\r\n            const riderToLastVehicleCount: { [rider: string]: number } = {};\r\n            for (let companyName of considerCompanies) {\r\n                const typeToLastRiderToCount = companyToTypeToLastRiderToCount[companyName];\r\n                for (let tp of considerTypes) {\r\n                    const lastRiderToCount = typeToLastRiderToCount[tp];\r\n                    if (lastRiderToCount === undefined) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let rider of Object.keys(lastRiderToCount)) {\r\n                        if (riderToLastVehicleCount[rider] === undefined) {\r\n                            riderToLastVehicleCount[rider] = 0;\r\n                        }\r\n                        riderToLastVehicleCount[rider] += lastRiderToCount[rider];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // give this data to the chart\r\n            const dataRiders: string[] = Object.keys(riderToLastVehicleCount);\r\n            dataRiders.sort();\r\n            const dataValues: number[] = dataRiders.map(r => riderToLastVehicleCount[r]);\r\n            chart.data = {\r\n                datasets: [\r\n                    {\r\n                        data: dataValues,\r\n                    },\r\n                ],\r\n                labels: dataRiders,\r\n            };\r\n            chart.update();\r\n        }\r\n\r\n        // link up events\r\n        companySelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        typeSelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        riddenOnlyCheckbox.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n\r\n        // perform initial chart update\r\n        updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        );\r\n    }\r\n\r\n    function doSetUpFixedCouplingMemberUsage() {\r\n        const ALL_VALUE: string = \"\\u0018\";\r\n\r\n        // set up controls\r\n        const controls = <HTMLParagraphElement|null>document.getElementById(\"histogram-controls\");\r\n        if (controls === null) {\r\n            return;\r\n        }\r\n\r\n        const typeLabel = document.createElement(\"label\");\r\n        typeLabel.appendChild(document.createTextNode(\"Front type: \"));\r\n        const typeSelect = document.createElement(\"select\");\r\n        typeLabel.appendChild(typeSelect);\r\n        controls.appendChild(typeLabel);\r\n\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const frontVehicleTypeToRiderToCounts: FixedCouplingData = JSON.parse(dataString);\r\n\r\n        const allFrontVehicleTypes: string[] = Object.keys(frontVehicleTypeToRiderToCounts);\r\n        allFrontVehicleTypes.sort();\r\n\r\n        // pre-populate options\r\n        for (let frontVehicleType of allFrontVehicleTypes) {\r\n            const typeOption = document.createElement(\"option\");\r\n            typeOption.value = frontVehicleType;\r\n            typeOption.textContent = frontVehicleType;\r\n            typeSelect.appendChild(typeOption);\r\n        }\r\n        typeSelect.selectedIndex = 0;\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                datasets: [],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    \"yRegular\": {\r\n                        position: \"left\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (single rider)\",\r\n                        },\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            },\r\n                        },\r\n                    },\r\n                    \"yAll\": {\r\n                        position: \"right\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (all riders)\",\r\n                        },\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        // define update function\r\n        function updateChart(\r\n            chart: Chart<\"bar\">, frontVehicleTypeToRiderToCounts: FixedCouplingData,\r\n            typeSelect: HTMLSelectElement,\r\n        ) {\r\n            const riderToNumbers = frontVehicleTypeToRiderToCounts[typeSelect.value];\r\n            const typeRiders = Object.keys(riderToNumbers);\r\n            typeRiders.sort();\r\n\r\n            // collect the counts\r\n            const datasets: object[] = [];\r\n            const labels: string[] = [];\r\n            for (let rider of typeRiders) {\r\n                const riderName = (rider === ALL_VALUE) ? \"(all)\" : rider;\r\n                const numbers = riderToNumbers[rider];\r\n\r\n                while (labels.length < numbers.length) {\r\n                    labels.push(`vehicle ${labels.length + 1}`);\r\n                }\r\n\r\n                datasets.push({\r\n                    label: riderName,\r\n                    data: numbers,\r\n                    yAxisID: (rider === ALL_VALUE) ? \"yAll\" : \"yRegular\",\r\n                });\r\n            }\r\n\r\n            // give this data to the chart\r\n            chart.data = {\r\n                datasets: datasets,\r\n                labels: labels,\r\n            };\r\n            chart.update();\r\n        }\r\n\r\n        // link up events\r\n        typeSelect.addEventListener(\"change\", () => updateChart(\r\n            chart, frontVehicleTypeToRiderToCounts, typeSelect,\r\n        ));\r\n\r\n        // perform initial chart update\r\n        updateChart(\r\n            chart, frontVehicleTypeToRiderToCounts, typeSelect,\r\n        );\r\n    }\r\n\r\n    export function setUpByDayOfWeek() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByDayOfWeek);\r\n    }\r\n\r\n    export function setUpByRideCountGroup() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByRideCountGroup);\r\n    }\r\n\r\n    export function setUpLatestRiderCount() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLatestRiderCount);\r\n    }\r\n\r\n    export function setUpLastRiderPie() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLastRiderPie);\r\n    }\r\n\r\n    export function setUpFixedCouplingMemberUsage() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpFixedCouplingMemberUsage);\r\n    }\r\n}\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*!\n * chartjs-chart-sankey v0.12.0\n * https://github.com/kurkle/chartjs-chart-sankey#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { isArray, isNullOrUndef, valueOrDefault, toFont, getHoverColor, color } from 'chart.js/helpers';\n\n/**\n * @param {string | Array<string>} raw\n * @return {Array<string>}\n */\nfunction toTextLines(raw) {\n  const lines = [];\n  const inputs = isArray(raw) ? raw : isNullOrUndef(raw) ? [] : [raw];\n\n  while (inputs.length) {\n    const input = inputs.pop();\n    if (typeof input === 'string') {\n      lines.unshift.apply(lines, input.split('\\n'));\n    } else if (Array.isArray(input)) {\n      inputs.push.apply(inputs, input);\n    } else if (!isNullOrUndef(inputs)) {\n      lines.unshift('' + input);\n    }\n  }\n\n  return lines;\n}\n\n/**\n* @param {any} size\n* @return {'min' | 'max'}\n*/\nfunction validateSizeValue(size) {\n  if (!size || ['min', 'max'].indexOf(size) === -1) {\n    return 'max';\n  }\n  return size;\n}\n\n/**\n * @param x {any}\n * @return {boolean}\n */\nconst defined = x => x !== undefined;\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @return {number}\n */\nfunction calculateX(nodes, data) {\n  const to = new Set(data.map(dataPoint => dataPoint.to));\n  const from = new Set(data.map(dataPoint => dataPoint.from));\n  const keys = new Set([...nodes.keys()]);\n  let x = 0;\n  while (keys.size) {\n    const column = nextColumn([...keys], to);\n    for (const key of column) {\n      const node = nodes.get(key);\n      if (!defined(node.x)) {\n        node.x = x;\n      }\n      keys.delete(key);\n    }\n    if (keys.size) {\n      to.clear();\n      data.filter(flow => keys.has(flow.from)).forEach(flow => to.add(flow.to));\n      x++;\n    }\n  }\n  [...nodes.keys()]\n    .filter(key => !from.has(key))\n    .forEach(key => {\n      const node = nodes.get(key);\n      // Only move the node to right edge, if it's column is not defined\n      if (!node.column) {\n        node.x = x;\n      }\n    });\n\n  return x;\n}\n\n/**\n * @param {Array<string>} keys\n * @param {Set<string>} to\n * @return {Array<string>}\n */\nfunction nextColumn(keys, to) {\n  const columnsNotInTo = keys.filter(key => !to.has(key));\n  return columnsNotInTo.length ? columnsNotInTo : keys.slice(0, 1);\n}\n\n/**\n * @param {SankeyNode} a\n * @param {SankeyNode} b\n * @return {number}\n */\nconst nodeByXY = (a, b) => a.x !== b.x ? a.x - b.x : a.y - b.y;\n\nlet prevCountId = -1;\nfunction getCountId() {\n  prevCountId = prevCountId < 100 ? prevCountId + 1 : 0;\n  return prevCountId;\n}\n\n/**\n * @param {Array<FromToElement>} list\n * @param {string} prop\n * @return {number}\n */\nfunction nodeCount(list, prop, countId = getCountId()) {\n  let count = 0;\n  for (const elem of list) {\n    if (elem.node._visited === countId) {\n      continue;\n    }\n    elem.node._visited = countId;\n    count += elem.node[prop].length + nodeCount(elem.node[prop], prop, countId);\n  }\n  return count;\n}\n\n/**\n * @param {string} prop\n * @return {function(FromToElement, FromToElement): number}\n */\nconst flowByNodeCount = (prop) => (a, b) => (nodeCount(a.node[prop], prop) - nodeCount(b.node[prop], prop)) || (a.node[prop].length - b.node[prop].length);\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processFrom(node, y) {\n  node.from.sort(flowByNodeCount('from'));\n  for (const flow of node.from) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processFrom(n, y);\n    }\n    y = Math.max(n.y + n.out, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processTo(node, y) {\n  node.to.sort(flowByNodeCount('to'));\n  for (const flow of node.to) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processTo(n, y);\n    }\n    y = Math.max(n.y + n.in, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} value\n * @return {number}\n */\nfunction setOrGetY(node, value) {\n  if (defined(node.y)) {\n    return node.y;\n  }\n  node.y = value;\n  return value;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction processRest(nodeArray, maxX) {\n  const leftNodes = nodeArray.filter(node => node.x === 0);\n  const rightNodes = nodeArray.filter(node => node.x === maxX);\n  const leftToDo = leftNodes.filter(node => !defined(node.y));\n  const rightToDo = rightNodes.filter(node => !defined(node.y));\n  const centerToDo = nodeArray.filter(node => node.x > 0 && node.x < maxX && !defined(node.y));\n\n  let leftY = leftNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.out) || 0), 0);\n  let rightY = rightNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.in) || 0), 0);\n  let centerY = 0;\n\n  if (leftY >= rightY) {\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n  } else {\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n  }\n  centerToDo.forEach(node => {\n    let y = nodeArray.filter(n => n.x === node.x && defined(n.y))\n      .reduce((acc, cur) => Math.max(acc, cur.y + Math.max(cur.in, cur.out)), 0);\n    y = setOrGetY(node, y);\n    y = Math.max(y + node.in, processFrom(node, y));\n    y = Math.max(y + node.out, processTo(node, y));\n    centerY = Math.max(centerY, y);\n  });\n\n  return Math.max(leftY, rightY, centerY);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateY(nodeArray, maxX) {\n  nodeArray.sort((a, b) => Math.max(b.in, b.out) - Math.max(a.in, a.out));\n  const start = nodeArray[0];\n  start.y = 0;\n  const left = processFrom(start, 0);\n  const right = processTo(start, 0);\n  const rest = processRest(nodeArray, maxX);\n  return Math.max(left, right, rest);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateYUsingPriority(nodeArray, maxX) {\n  let maxY = 0;\n  let nextYStart = 0;\n  for (let x = 0; x <= maxX; x++) {\n    let y = nextYStart;\n    const nodes = nodeArray.filter(node => node.x === x).sort((a, b) => a.priority - b.priority);\n    nextYStart = nodes[0].to.filter(to => to.node.x > x + 1).reduce((acc, cur) => acc + cur.flow, 0) || 0;\n    for (const node of nodes) {\n      node.y = y;\n      y += Math.max(node.out, node.in);\n    }\n    maxY = Math.max(y, maxY);\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} padding\n * @return {number}\n */\nfunction addPadding(nodeArray, padding) {\n  let i = 1;\n  let x = 0;\n  let prev = 0;\n  let maxY = 0;\n  const rows = [];\n  nodeArray.sort(nodeByXY);\n  for (const node of nodeArray) {\n    if (node.y) {\n      if (node.x === 0) {\n        rows.push(node.y);\n      } else {\n        if (x !== node.x) {\n          x = node.x;\n          prev = 0;\n        }\n\n        for (i = prev + 1; i < rows.length; i++) {\n          if (rows[i] > node.y) {\n            break;\n          }\n        }\n        prev = i;\n      }\n      node.y += i * padding;\n      i++;\n    }\n    maxY = Math.max(maxY, node.y + Math.max(node.in, node.out));\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {'min' | 'max'} size\n */\nfunction sortFlows(nodeArray, size) {\n  nodeArray.forEach((node) => {\n    const nodeSize = Math[size](node.in || node.out, node.out || node.in);\n    const overlapFrom = nodeSize < node.in;\n    const overlapTo = nodeSize < node.out;\n    let addY = 0;\n    let len = node.from.length;\n    node.from.sort((a, b) => (a.node.y + a.node.out / 2) - (b.node.y + b.node.out / 2)).forEach((flow, idx) => {\n      if (overlapFrom) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n    addY = 0;\n    len = node.to.length;\n    node.to.sort((a, b) => (a.node.y + a.node.in / 2) - (b.node.y + b.node.in / 2)).forEach((flow, idx) => {\n      if (overlapTo) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n  });\n}\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @param {boolean} priority\n * @param {'min' | 'max'} size\n * @return {{maxY: number, maxX: number}}\n */\nfunction layout(nodes, data, priority, size) {\n  const nodeArray = [...nodes.values()];\n  const maxX = calculateX(nodes, data);\n  const maxY = priority ? calculateYUsingPriority(nodeArray, maxX) : calculateY(nodeArray, maxX);\n  const padding = maxY * 0.03; // rows;\n  const maxYWithPadding = addPadding(nodeArray, padding);\n  sortFlows(nodeArray, size);\n  return {maxX, maxY: maxYWithPadding};\n}\n\n/**\n * @param {Array<SankeyDataPoint>} data Array of raw data elements\n * @return {Map<string, SankeyNode>}\n */\nfunction buildNodesFromRawData(data) {\n  const nodes = new Map();\n  for (let i = 0; i < data.length; i++) {\n    const {from, to, flow} = data[i];\n\n    if (!nodes.has(from)) {\n      nodes.set(from, {\n        key: from,\n        in: 0,\n        out: flow,\n        from: [],\n        to: [{key: to, flow: flow, index: i}],\n      });\n    } else {\n      const node = nodes.get(from);\n      node.out += flow;\n      node.to.push({key: to, flow: flow, index: i});\n    }\n    if (!nodes.has(to)) {\n      nodes.set(to, {\n        key: to,\n        in: flow,\n        out: 0,\n        from: [{key: from, flow: flow, index: i}],\n        to: [],\n      });\n    } else {\n      const node = nodes.get(to);\n      node.in += flow;\n      node.from.push({key: from, flow: flow, index: i});\n    }\n  }\n\n  const flowSort = (a, b) => b.flow - a.flow;\n\n  [...nodes.values()].forEach(node => {\n    node.from = node.from.sort(flowSort);\n    node.from.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n\n    node.to = node.to.sort(flowSort);\n    node.to.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n  });\n\n  return nodes;\n}\n\n/**\n * @param {Array<FromToElement>} arr\n * @param {string} key\n * @param {number} index\n * @return {number}\n */\nfunction getAddY(arr, key, index) {\n  for (const item of arr) {\n    if (item.key === key && item.index === index) {\n      return item.addY;\n    }\n  }\n  return 0;\n}\n\nclass SankeyController extends DatasetController {\n  /**\n   * @param {ChartMeta<Flow, Element>} meta\n   * @param {Array<SankeyDataPoint>} data Array of original data elements\n   * @param {number} start\n   * @param {number} count\n   * @return {Array<SankeyParsedData>}\n   */\n  parseObjectData(meta, data, start, count) {\n    const {from: fromKey = 'from', to: toKey = 'to', flow: flowKey = 'flow'} = this.options.parsing;\n    const sankeyData = data.map(({[fromKey]: from, [toKey]: to, [flowKey]: flow}) => ({from, to, flow}));\n    const {xScale, yScale} = meta;\n    const parsed = []; /* Array<SankeyParsedData> */\n    const nodes = this._nodes = buildNodesFromRawData(sankeyData);\n    /* getDataset() => SankeyControllerDatasetOptions */\n    const {column, priority, size} = this.getDataset();\n    if (priority) {\n      for (const node of nodes.values()) {\n        if (node.key in priority) {\n          node.priority = priority[node.key];\n        }\n      }\n    }\n    if (column) {\n      for (const node of nodes.values()) {\n        if (node.key in column) {\n          node.column = true;\n          node.x = column[node.key];\n        }\n      }\n    }\n\n    const {maxX, maxY} = layout(nodes, sankeyData, !!priority, validateSizeValue(size));\n\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    for (let i = 0, ilen = sankeyData.length; i < ilen; ++i) {\n      const dataPoint = sankeyData[i];\n      const from = nodes.get(dataPoint.from);\n      const to = nodes.get(dataPoint.to);\n      const fromY = from.y + getAddY(from.to, dataPoint.to, i);\n      const toY = to.y + getAddY(to.from, dataPoint.from, i);\n      parsed.push({\n        x: xScale.parse(from.x, i),\n        y: yScale.parse(fromY, i),\n        _custom: {\n          from,\n          to,\n          x: xScale.parse(to.x, i),\n          y: yScale.parse(toY, i),\n          height: yScale.parse(dataPoint.flow, i),\n        }\n      });\n    }\n    return parsed.slice(start, start + count);\n  }\n\n  getMinMax(scale) {\n    return {\n      min: 0,\n      max: scale === this._cachedMeta.xScale ? this._maxX : this._maxY\n    };\n  }\n\n  update(mode) {\n    const {data} = this._cachedMeta;\n\n    this.updateElements(data, 0, data.length, mode);\n  }\n\n  /**\n   * @param {Array<Flow>} elems\n   * @param {number} start\n   * @param {number} count\n   * @param {\"resize\" | \"reset\" | \"none\" | \"hide\" | \"show\" | \"normal\" | \"active\"} mode\n   */\n  updateElements(elems, start, count, mode) {\n    const {xScale, yScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(mode, elems[start], firstOpts);\n    const dataset = this.getDataset();\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1) / 2 + 0.5;\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    for (let i = start; i < start + count; i++) {\n      /* getParsed(idx: number) => SankeyParsedData */\n      const parsed = this.getParsed(i);\n      const custom = parsed._custom;\n      const y = yScale.getPixelForValue(parsed.y);\n      this.updateElement(\n        elems[i],\n        i,\n        {\n          x: xScale.getPixelForValue(parsed.x) + nodeWidth + borderWidth,\n          y,\n          x2: xScale.getPixelForValue(custom.x) - borderWidth,\n          y2: yScale.getPixelForValue(custom.y),\n          from: custom.from,\n          to: custom.to,\n          progress: mode === 'reset' ? 0 : 1,\n          height: Math.abs(yScale.getPixelForValue(parsed.y + custom.height) - y),\n          options: this.resolveDataElementOptions(i, mode)\n        },\n        mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode);\n  }\n\n  _drawLabels() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset(); /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n    const labels = dataset.labels;\n    const {xScale, yScale} = this._cachedMeta;\n\n    ctx.save();\n    const chartArea = this.chart.chartArea;\n    for (const node of nodes.values()) {\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      const label = labels && labels[node.key] || node.key;\n      let textX = x;\n      ctx.fillStyle = dataset.color || 'black';\n      ctx.textBaseline = 'middle';\n      if (x < chartArea.width / 2) {\n        ctx.textAlign = 'left';\n        textX += nodeWidth + borderWidth + 4;\n      } else {\n        ctx.textAlign = 'right';\n        textX -= borderWidth + 4;\n      }\n      this._drawLabel(label, y, height, ctx, textX);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {string} label\n   * @param {number} y\n   * @param {number} height\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {number} textX\n   * @private\n   */\n  _drawLabel(label, y, height, ctx, textX) {\n    const font = toFont(this.options.font, this.chart.options.font);\n    const lines = isNullOrUndef(label) ? [] : toTextLines(label);\n    const linesLength = lines.length;\n    const middle = y + height / 2;\n    const textHeight = font.lineHeight;\n    const padding = valueOrDefault(this.options.padding, textHeight / 2);\n\n    ctx.font = font.string;\n\n    if (linesLength > 1) {\n      const top = middle - (textHeight * linesLength / 2) + padding;\n      for (let i = 0; i < linesLength; i++) {\n        ctx.fillText(lines[i], textX, top + (i * textHeight));\n      }\n    } else {\n      ctx.fillText(label, textX, middle);\n    }\n  }\n\n  _drawNodes() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset();  /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const {xScale, yScale} = this._cachedMeta;\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    ctx.save();\n    ctx.strokeStyle = dataset.borderColor || 'black';\n    ctx.lineWidth = borderWidth;\n\n    for (const node of nodes.values()) {\n      ctx.fillStyle = node.color;\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      if (borderWidth) {\n        ctx.strokeRect(x, y, nodeWidth, height);\n      }\n      ctx.fillRect(x, y, nodeWidth, height);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * That's where the drawing process happens\n   */\n  draw() {\n    const ctx = this._ctx;\n    const data = this.getMeta().data || []; /* Array<Flow> */\n\n    // Set node colors\n    const active = [];\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      const flow = data[i]; /* Flow at index i */\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n      if (flow.active) {\n        active.push(flow);\n      }\n    }\n    // Make sure nodes connected to hovered flows are using hover colors.\n    for (const flow of active) {\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n    }\n\n    /* draw SankeyNodes on the canvas */\n    this._drawNodes();\n\n    /* draw Flow elements on the canvas */\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(ctx);\n    }\n\n    /* draw labels (for SankeyNodes) on the canvas */\n    this._drawLabels();\n  }\n}\n\nSankeyController.id = 'sankey';\n\nSankeyController.defaults = {\n  dataElementType: 'flow',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'x2', 'y2', 'height']\n    },\n    progress: {\n      easing: 'linear',\n      duration: (ctx) => ctx.type === 'data' ? (ctx.parsed._custom.x - ctx.parsed.x) * 200 : undefined,\n      delay: (ctx) => ctx.type === 'data' ? ctx.parsed.x * 500 + ctx.dataIndex * 20 : undefined,\n    },\n    colors: {\n      type: 'color',\n      properties: ['colorFrom', 'colorTo'],\n    },\n  },\n  transitions: {\n    hide: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          to: 'transparent'\n        }\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          from: 'transparent'\n        }\n      }\n    }\n  }\n};\n\nSankeyController.overrides = {\n  interaction: {\n    mode: 'nearest',\n    intersect: true\n  },\n  datasets: {\n    clip: false,\n    parsing: true\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          const item = context.dataset.data[context.dataIndex];\n          return item.from + ' -> ' + item.to + ': ' + item.flow;\n        }\n      },\n    },\n    legend: {\n      display: false,\n    },\n  },\n  scales: {\n    x: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      offset: false,\n    },\n    y: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      reverse: true,\n      offset: false,\n    },\n  },\n  layout: {\n    padding: {\n      top: 3,\n      left: 3,\n      right: 13,\n      bottom: 3,\n    },\n  },\n};\n\n/**\n * @typedef {{x: number, y: number}} ControlPoint\n * @typedef {{cp1: ControlPoint, cp2: ControlPoint}} ControlPoints\n *\n * @param {number} x\n * @param {number} y\n * @param {number} x2\n * @param {number} y2\n * @return {ControlPoints}\n */\nconst controlPoints = (x, y, x2, y2) => x < x2\n  ? {\n    cp1: {x: x + (x2 - x) / 3 * 2, y},\n    cp2: {x: x + (x2 - x) / 3, y: y2}\n  }\n  : {\n    cp1: {x: x - (x - x2) / 3, y: 0},\n    cp2: {x: x2 + (x - x2) / 3, y: 0}\n  };\n\n/**\n *\n * @param {ControlPoint} p1\n * @param {ControlPoint} p2\n * @param {number} t\n * @return {ControlPoint}\n */\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Flow} flow\n */\nfunction setStyle(ctx, {x, x2, options}) {\n  let fill;\n\n  if (options.colorMode === 'from') {\n    fill = color(options.colorFrom).alpha(0.5).rgbString();\n  } else if (options.colorMode === 'to') {\n    fill = color(options.colorTo).alpha(0.5).rgbString();\n  } else {\n    fill = ctx.createLinearGradient(x, 0, x2, 0);\n    fill.addColorStop(0, color(options.colorFrom).alpha(0.5).rgbString());\n    fill.addColorStop(1, color(options.colorTo).alpha(0.5).rgbString());\n  }\n\n  ctx.fillStyle = fill;\n  ctx.strokeStyle = fill;\n  ctx.lineWidth = 0.5;\n}\n\nclass Flow extends Element {\n\n  /**\n   * @param {FlowConfig} cfg\n   */\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.x2 = undefined;\n    this.y2 = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  draw(ctx) {\n    const me = this;\n    const {x, x2, y, y2, height, progress} = me;\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n\n    if (progress === 0) {\n      return;\n    }\n    ctx.save();\n    if (progress < 1) {\n      ctx.beginPath();\n      ctx.rect(x, Math.min(y, y2), (x2 - x) * progress + 1, Math.abs(y2 - y) + height + 1);\n      ctx.clip();\n    }\n\n    setStyle(ctx, me);\n\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, x2, y2);\n    ctx.lineTo(x2, y2 + height);\n    ctx.bezierCurveTo(cp2.x, cp2.y + height, cp1.x, cp1.y + height, x, y + height);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    if (mouseX < x || mouseX > x2) {\n      return false;\n    }\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n    const t = (mouseX - x) / (x2 - x);\n    const p1 = {x, y};\n    const p2 = {x: x2, y: y2};\n    const a = pointInLine(p1, cp1, t);\n    const b = pointInLine(cp1, cp2, t);\n    const c = pointInLine(cp2, p2, t);\n    const d = pointInLine(a, b, t);\n    const e = pointInLine(b, c, t);\n    const topY = pointInLine(d, e, t).y;\n    return mouseY >= topY && mouseY <= topY + height;\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inXRange(mouseX, useFinalPosition) {\n    const {x, x2} = this.getProps(['x', 'x2'], useFinalPosition);\n    return mouseX >= x && mouseX <= x2;\n  }\n\n  /**\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inYRange(mouseY, useFinalPosition) {\n    const {y, y2, height} = this.getProps(['y', 'y2', 'height'], useFinalPosition);\n    const minY = Math.min(y, y2);\n    const maxY = Math.max(y, y2) + height;\n    return mouseY >= minY && mouseY <= maxY;\n  }\n\n  /**\n   * @param {boolean} useFinalPosition\n   * @return {{x: number, y:number}}\n   */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    return {\n      x: (x + x2) / 2,\n      y: (y + y2 + height) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  /**\n   * @param {\"x\" | \"y\"} axis\n   * @return {number}\n   */\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n\nFlow.id = 'flow';\nFlow.defaults = {\n  colorFrom: 'red',\n  colorTo: 'green',\n  colorMode: 'gradient',\n  hoverColorFrom: (ctx, options) => getHoverColor(options.colorFrom),\n  hoverColorTo: (ctx, options) => getHoverColor(options.colorTo)\n};\n\nexport { Flow, SankeyController };\n","export * from '../dist/helpers.js';\n"],"names":["_chart","require","window","RocketBotWeb","parcelHelpers","_auto","_chartjsChartSankey","Chart","register","SankeyController","Flow","doSetUpByDayOfWeek","canvas","document","getElementById","dataString","textContent","data","JSON","parse","datasets","totalWeekdayToCount","rider","riders","weekdayToCount","riderToWeekdayToCount","length","push","i","label","yAxisID","type","labels","options","scales","yRegular","display","position","title","text","yTotal","doSetUpByRideCountGroup","riderToGroupToCount","chart","rideCountGroupNames","y","ticks","format","minimumFractionDigits","logPlotCheckbox","addEventListener","checked","update","doSetUpLatestRiderCount","datum","from","substring","to","doSetUpLastRiderPie","ALL_VALUE","controls","companyLabel","createElement","appendChild","createTextNode","companySelect","typeLabel","typeSelect","riddenOnlyLabel","riddenOnlyCheckbox","allCompanies","Object","keys","companyToTypeToLastRiderToCount","sort","allTypes","company","tp","indexOf","allCompaniesOption","value","companyOption","selectedIndex","allTypesOption","typeOption","updateChart","considerCompanies","considerTypes","companyToTypeToLastRiderToCountRidden","lastChild","removeChild","consideredTypes","companyName","companyTypes","riderToLastVehicleCount","typeToLastRiderToCount","lastRiderToCount","undefined","dataRiders","dataValues","map","r","doSetUpFixedCouplingMemberUsage","frontVehicleTypeToRiderToCounts","allFrontVehicleTypes","frontVehicleType","yAll","riderToNumbers","typeRiders","riderName","numbers","setUpByDayOfWeek","setUpByRideCountGroup","setUpLatestRiderCount","setUpLastRiderPie","setUpFixedCouplingMemberUsage","Charting","Bim","_chartJs","exportAll","exports","registerables","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","_notify","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","_update","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","isObject","animationOptions","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","xid","xAxisID","valueOrDefault","yid","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","_getStackCount","_getStackIndex","name","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","style","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","c","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","intlCache","num","stringify","Intl","NumberFormat","getNumberFormat","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","maximumFractionDigits","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","rectX","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","export","b2n","b2p","index_esm","hexParse","hsl2rgb","hslString","hsv2rgb","hueParse","hwb2rgb","lim","n2b","n2p","nameParse","p2b","rgb2hsl","rgbParse","rgbString","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","hueValue","calln","hue","exec","deg","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpacked","tkeys","ok","nk","unpack","RGB_RE","modHSL","fromObject","_rgb","_valid","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","desaturate","interopDefault","__esModule","default","defineInteropFlag","dest","destName","_helpers","validateSizeValue","nextColumn","columnsNotInTo","nodeByXY","prevCountId","nodeCount","list","countId","getCountId","elem","_visited","flowByNodeCount","processFrom","flow","out","processTo","in","setOrGetY","calculateY","nodeArray","rest","leftNodes","rightNodes","leftToDo","rightToDo","centerToDo","leftY","rightY","processRest","nodes","priority","dataPoint","column","calculateX","nextYStart","calculateYUsingPriority","maxYWithPadding","rows","addPadding","nodeSize","overlapFrom","overlapTo","addY","sortFlows","getAddY","fromKey","toKey","flowKey","sankeyData","_nodes","flowSort","buildNodesFromRawData","_maxX","_maxY","fromY","toY","elems","nodeWidth","_drawLabels","textX","_drawLabel","toTextLines","linesLength","middle","textHeight","_drawNodes","colorFrom","colorTo","transitions","pointInLine","colorMode","createLinearGradient","addColorStop","topY","hoverColorFrom","hoverColorTo","_helpersJs"],"version":3,"file":"rocketbotweb.js.map"}