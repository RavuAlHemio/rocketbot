{"mappings":"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","sources":["src/rocketbotweb.ts","src/bim/chart.ts","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/chartjs-chart-sankey/dist/chartjs-chart-sankey.esm.js","node_modules/chart.js/helpers/helpers.js"],"sourcesContent":["import { RocketBotWeb } from \"./bim/chart\";\r\n\r\n// \"globals are evil\"\r\ndeclare global {\r\n    interface Window { RocketBotWeb: any; }\r\n}\r\nwindow.RocketBotWeb = RocketBotWeb;\r\n","import { Chart, ChartData, ChartDataset, LineControllerChartOptions } from 'chart.js/auto';\r\nimport { SankeyController, Flow } from 'chartjs-chart-sankey';\r\n\r\nChart.register(SankeyController, Flow);\r\n\r\ninterface ByDayOfWeekData {\r\n    riders: string[];\r\n    riderToWeekdayToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface ByRideCountGroupData {\r\n    riders: string[];\r\n    rideCountGroupNames: string[];\r\n    riderToGroupToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface LatestRiderSankeyData {\r\n    from: string;\r\n    to: string;\r\n    count: number;\r\n}\r\n\r\ntype CompanyToTypeToRiderToCount = {\r\n    [company: string]: {\r\n        [vehicleType: string]: {\r\n            [rider: string]: number \r\n        }\r\n    }\r\n};\r\n\r\ninterface LastRiderPieData {\r\n    companyToTypeToLastRiderToCount: CompanyToTypeToRiderToCount;\r\n    companyToTypeToLastRiderToCountRidden: CompanyToTypeToRiderToCount;\r\n}\r\n\r\nexport module RocketBotWeb.Bim.Charting {\r\n    function doSetUpByDayOfWeek() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByDayOfWeekData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToWeekdayToCount[rider],\r\n            });\r\n        }\r\n\r\n        new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n                datasets: datasets,\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpByRideCountGroup() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByRideCountGroupData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToGroupToCount[rider],\r\n            });\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: data.rideCountGroupNames,\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        const logPlotCheckbox = <HTMLInputElement|null>document.getElementById(\"bim-charting-log-plot-checkbox\");\r\n        if (logPlotCheckbox !== null) {\r\n            logPlotCheckbox.addEventListener(\"change\", () => {\r\n                chart.options.scales!.y!.type = logPlotCheckbox.checked ? \"logarithmic\" : \"linear\";\r\n                chart.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    function doSetUpLatestRiderCount() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"sankey-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"sankey-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LatestRiderSankeyData[] = JSON.parse(dataString);\r\n        let labels = {};\r\n        for (let datum of data) {\r\n            // labels: strip leading Enter and Escape symbols from from and to values\r\n            labels[datum.from] = datum.from.substring(1);\r\n            labels[datum.to] = datum.to.substring(1);\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"sankey\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        data: data,\r\n                        labels: labels,\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpLastRiderPie() {\r\n        const ALL_VALUE: string = \"\\u0018\";\r\n\r\n        // set up controls\r\n        const controls = <HTMLParagraphElement|null>document.getElementById(\"pie-controls\");\r\n        if (controls === null) {\r\n            return;\r\n        }\r\n\r\n        const companyLabel = document.createElement(\"label\");\r\n        companyLabel.appendChild(document.createTextNode(\"Company: \"));\r\n        const companySelect = document.createElement(\"select\");\r\n        companyLabel.appendChild(companySelect);\r\n        controls.appendChild(companyLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const typeLabel = document.createElement(\"label\");\r\n        typeLabel.appendChild(document.createTextNode(\"Type: \"));\r\n        const typeSelect = document.createElement(\"select\");\r\n        typeLabel.appendChild(typeSelect);\r\n        controls.appendChild(typeLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const riddenOnlyLabel = document.createElement(\"label\");\r\n        const riddenOnlyCheckbox = document.createElement(\"input\");\r\n        riddenOnlyCheckbox.type = \"checkbox\";\r\n        riddenOnlyLabel.appendChild(riddenOnlyCheckbox);\r\n        riddenOnlyLabel.appendChild(document.createTextNode(\" ridden only\"));\r\n        controls.appendChild(riddenOnlyLabel);\r\n\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LastRiderPieData = JSON.parse(dataString);\r\n\r\n        const allCompanies: string[] = Object.keys(data.companyToTypeToLastRiderToCount);\r\n        allCompanies.sort();\r\n\r\n        const allTypes: string[] = [];\r\n        for (let company of allCompanies) {\r\n            for (let tp of Object.keys(data.companyToTypeToLastRiderToCount[company])) {\r\n                if (allTypes.indexOf(tp) === -1) {\r\n                    allTypes.push(tp);\r\n                }\r\n            }\r\n        }\r\n        allTypes.sort();\r\n\r\n        // pre-populate options\r\n        const allCompaniesOption = document.createElement(\"option\");\r\n        allCompaniesOption.value = ALL_VALUE;\r\n        allCompaniesOption.textContent = \"(all)\";\r\n        companySelect.appendChild(allCompaniesOption);\r\n        for (let company of allCompanies) {\r\n            const companyOption = document.createElement(\"option\");\r\n            companyOption.value = company;\r\n            companyOption.textContent = company;\r\n            companySelect.appendChild(companyOption);\r\n        }\r\n        companySelect.selectedIndex = 0;\r\n\r\n        const allTypesOption = document.createElement(\"option\");\r\n        allTypesOption.value = ALL_VALUE;\r\n        allTypesOption.textContent = \"(all)\";\r\n        typeSelect.appendChild(allTypesOption);\r\n        for (let tp of allTypes) {\r\n            const typeOption = document.createElement(\"option\");\r\n            typeOption.value = tp;\r\n            typeOption.textContent = tp;\r\n            typeSelect.appendChild(typeOption);\r\n        }\r\n        typeSelect.selectedIndex = 0;\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"pie\",\r\n            data: {\r\n                datasets: [],\r\n            },\r\n        });\r\n\r\n        // define update function\r\n        function updateChart(\r\n            chart: Chart<\"pie\">, data: LastRiderPieData,\r\n            companySelect: HTMLSelectElement, typeSelect: HTMLSelectElement,\r\n            riddenOnlyCheckbox: HTMLInputElement,\r\n            allCompanies: string[], allTypes: string[],\r\n        ) {\r\n            const considerCompanies: string[] = (companySelect.value === ALL_VALUE)\r\n                ? allCompanies\r\n                : [companySelect.value];\r\n            const considerTypes: string[] = (typeSelect.value === ALL_VALUE)\r\n                ? allTypes\r\n                : [typeSelect.value];\r\n            const companyToTypeToLastRiderToCount = riddenOnlyCheckbox.checked\r\n                ? data.companyToTypeToLastRiderToCountRidden\r\n                : data.companyToTypeToLastRiderToCount;\r\n\r\n            // does the selected company even have this type?\r\n            if (considerCompanies.length === 1 && considerTypes.length === 1) {\r\n                const companyTypes = Object.keys(companyToTypeToLastRiderToCount[considerCompanies[0]]);\r\n                if (companyTypes.indexOf(considerTypes[0]) === -1) {\r\n                    // no; switch over to \"all types\"\r\n                    considerTypes.length = 0;\r\n                    considerTypes.push(...allTypes);\r\n                }\r\n            }\r\n\r\n            // reduce types to those of the given company\r\n            while (typeSelect.lastChild !== null) {\r\n                typeSelect.removeChild(typeSelect.lastChild);\r\n            }\r\n            const allTypesOption = document.createElement(\"option\");\r\n            allTypesOption.value = ALL_VALUE;\r\n            allTypesOption.textContent = \"(all)\";\r\n            typeSelect.appendChild(allTypesOption);\r\n\r\n            const consideredTypes: string[] = [];\r\n            for (let companyName of considerCompanies) {\r\n                let companyTypes: string[] = Object.keys(companyToTypeToLastRiderToCount[companyName]);\r\n                for (let tp of companyTypes) {\r\n                    if (consideredTypes.indexOf(tp) === -1) {\r\n                        consideredTypes.push(tp);\r\n                    }\r\n                }\r\n            }\r\n            consideredTypes.sort();\r\n            for (let tp of consideredTypes) {\r\n                const typeOption = document.createElement(\"option\");\r\n                typeOption.value = tp;\r\n                typeOption.textContent = tp;\r\n                typeSelect.appendChild(typeOption);\r\n            }\r\n\r\n            if (considerTypes.length === 1) {\r\n                typeSelect.value = considerTypes[0];\r\n            } else {\r\n                typeSelect.selectedIndex = 0;\r\n            }\r\n\r\n            // collect the counts\r\n            const riderToLastVehicleCount: { [rider: string]: number } = {};\r\n            for (let companyName of considerCompanies) {\r\n                const typeToLastRiderToCount = companyToTypeToLastRiderToCount[companyName];\r\n                for (let tp of considerTypes) {\r\n                    const lastRiderToCount = typeToLastRiderToCount[tp];\r\n                    if (lastRiderToCount === undefined) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let rider of Object.keys(lastRiderToCount)) {\r\n                        if (riderToLastVehicleCount[rider] === undefined) {\r\n                            riderToLastVehicleCount[rider] = 0;\r\n                        }\r\n                        riderToLastVehicleCount[rider] += lastRiderToCount[rider];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // give this data to the chart\r\n            const dataRiders: string[] = Object.keys(riderToLastVehicleCount);\r\n            dataRiders.sort();\r\n            const dataValues: number[] = dataRiders.map(r => riderToLastVehicleCount[r]);\r\n            chart.data = {\r\n                datasets: [\r\n                    {\r\n                        data: dataValues,\r\n                    },\r\n                ],\r\n                labels: dataRiders,\r\n            };\r\n            chart.update();\r\n        }\r\n\r\n        // link up events\r\n        companySelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        typeSelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        riddenOnlyCheckbox.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n\r\n        // perform initial chart update\r\n        updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        );\r\n    }\r\n\r\n    export function setUpByDayOfWeek() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByDayOfWeek);\r\n    }\r\n\r\n    export function setUpByRideCountGroup() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByRideCountGroup);\r\n    }\r\n\r\n    export function setUpLatestRiderCount() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLatestRiderCount);\r\n    }\r\n\r\n    export function setUpLastRiderPie() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLastRiderPie);\r\n    }\r\n}\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*!\n * chartjs-chart-sankey v0.12.0\n * https://github.com/kurkle/chartjs-chart-sankey#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { isArray, isNullOrUndef, valueOrDefault, toFont, getHoverColor, color } from 'chart.js/helpers';\n\n/**\n * @param {string | Array<string>} raw\n * @return {Array<string>}\n */\nfunction toTextLines(raw) {\n  const lines = [];\n  const inputs = isArray(raw) ? raw : isNullOrUndef(raw) ? [] : [raw];\n\n  while (inputs.length) {\n    const input = inputs.pop();\n    if (typeof input === 'string') {\n      lines.unshift.apply(lines, input.split('\\n'));\n    } else if (Array.isArray(input)) {\n      inputs.push.apply(inputs, input);\n    } else if (!isNullOrUndef(inputs)) {\n      lines.unshift('' + input);\n    }\n  }\n\n  return lines;\n}\n\n/**\n* @param {any} size\n* @return {'min' | 'max'}\n*/\nfunction validateSizeValue(size) {\n  if (!size || ['min', 'max'].indexOf(size) === -1) {\n    return 'max';\n  }\n  return size;\n}\n\n/**\n * @param x {any}\n * @return {boolean}\n */\nconst defined = x => x !== undefined;\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @return {number}\n */\nfunction calculateX(nodes, data) {\n  const to = new Set(data.map(dataPoint => dataPoint.to));\n  const from = new Set(data.map(dataPoint => dataPoint.from));\n  const keys = new Set([...nodes.keys()]);\n  let x = 0;\n  while (keys.size) {\n    const column = nextColumn([...keys], to);\n    for (const key of column) {\n      const node = nodes.get(key);\n      if (!defined(node.x)) {\n        node.x = x;\n      }\n      keys.delete(key);\n    }\n    if (keys.size) {\n      to.clear();\n      data.filter(flow => keys.has(flow.from)).forEach(flow => to.add(flow.to));\n      x++;\n    }\n  }\n  [...nodes.keys()]\n    .filter(key => !from.has(key))\n    .forEach(key => {\n      const node = nodes.get(key);\n      // Only move the node to right edge, if it's column is not defined\n      if (!node.column) {\n        node.x = x;\n      }\n    });\n\n  return x;\n}\n\n/**\n * @param {Array<string>} keys\n * @param {Set<string>} to\n * @return {Array<string>}\n */\nfunction nextColumn(keys, to) {\n  const columnsNotInTo = keys.filter(key => !to.has(key));\n  return columnsNotInTo.length ? columnsNotInTo : keys.slice(0, 1);\n}\n\n/**\n * @param {SankeyNode} a\n * @param {SankeyNode} b\n * @return {number}\n */\nconst nodeByXY = (a, b) => a.x !== b.x ? a.x - b.x : a.y - b.y;\n\nlet prevCountId = -1;\nfunction getCountId() {\n  prevCountId = prevCountId < 100 ? prevCountId + 1 : 0;\n  return prevCountId;\n}\n\n/**\n * @param {Array<FromToElement>} list\n * @param {string} prop\n * @return {number}\n */\nfunction nodeCount(list, prop, countId = getCountId()) {\n  let count = 0;\n  for (const elem of list) {\n    if (elem.node._visited === countId) {\n      continue;\n    }\n    elem.node._visited = countId;\n    count += elem.node[prop].length + nodeCount(elem.node[prop], prop, countId);\n  }\n  return count;\n}\n\n/**\n * @param {string} prop\n * @return {function(FromToElement, FromToElement): number}\n */\nconst flowByNodeCount = (prop) => (a, b) => (nodeCount(a.node[prop], prop) - nodeCount(b.node[prop], prop)) || (a.node[prop].length - b.node[prop].length);\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processFrom(node, y) {\n  node.from.sort(flowByNodeCount('from'));\n  for (const flow of node.from) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processFrom(n, y);\n    }\n    y = Math.max(n.y + n.out, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processTo(node, y) {\n  node.to.sort(flowByNodeCount('to'));\n  for (const flow of node.to) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processTo(n, y);\n    }\n    y = Math.max(n.y + n.in, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} value\n * @return {number}\n */\nfunction setOrGetY(node, value) {\n  if (defined(node.y)) {\n    return node.y;\n  }\n  node.y = value;\n  return value;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction processRest(nodeArray, maxX) {\n  const leftNodes = nodeArray.filter(node => node.x === 0);\n  const rightNodes = nodeArray.filter(node => node.x === maxX);\n  const leftToDo = leftNodes.filter(node => !defined(node.y));\n  const rightToDo = rightNodes.filter(node => !defined(node.y));\n  const centerToDo = nodeArray.filter(node => node.x > 0 && node.x < maxX && !defined(node.y));\n\n  let leftY = leftNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.out) || 0), 0);\n  let rightY = rightNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.in) || 0), 0);\n  let centerY = 0;\n\n  if (leftY >= rightY) {\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n  } else {\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n  }\n  centerToDo.forEach(node => {\n    let y = nodeArray.filter(n => n.x === node.x && defined(n.y))\n      .reduce((acc, cur) => Math.max(acc, cur.y + Math.max(cur.in, cur.out)), 0);\n    y = setOrGetY(node, y);\n    y = Math.max(y + node.in, processFrom(node, y));\n    y = Math.max(y + node.out, processTo(node, y));\n    centerY = Math.max(centerY, y);\n  });\n\n  return Math.max(leftY, rightY, centerY);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateY(nodeArray, maxX) {\n  nodeArray.sort((a, b) => Math.max(b.in, b.out) - Math.max(a.in, a.out));\n  const start = nodeArray[0];\n  start.y = 0;\n  const left = processFrom(start, 0);\n  const right = processTo(start, 0);\n  const rest = processRest(nodeArray, maxX);\n  return Math.max(left, right, rest);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateYUsingPriority(nodeArray, maxX) {\n  let maxY = 0;\n  let nextYStart = 0;\n  for (let x = 0; x <= maxX; x++) {\n    let y = nextYStart;\n    const nodes = nodeArray.filter(node => node.x === x).sort((a, b) => a.priority - b.priority);\n    nextYStart = nodes[0].to.filter(to => to.node.x > x + 1).reduce((acc, cur) => acc + cur.flow, 0) || 0;\n    for (const node of nodes) {\n      node.y = y;\n      y += Math.max(node.out, node.in);\n    }\n    maxY = Math.max(y, maxY);\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} padding\n * @return {number}\n */\nfunction addPadding(nodeArray, padding) {\n  let i = 1;\n  let x = 0;\n  let prev = 0;\n  let maxY = 0;\n  const rows = [];\n  nodeArray.sort(nodeByXY);\n  for (const node of nodeArray) {\n    if (node.y) {\n      if (node.x === 0) {\n        rows.push(node.y);\n      } else {\n        if (x !== node.x) {\n          x = node.x;\n          prev = 0;\n        }\n\n        for (i = prev + 1; i < rows.length; i++) {\n          if (rows[i] > node.y) {\n            break;\n          }\n        }\n        prev = i;\n      }\n      node.y += i * padding;\n      i++;\n    }\n    maxY = Math.max(maxY, node.y + Math.max(node.in, node.out));\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {'min' | 'max'} size\n */\nfunction sortFlows(nodeArray, size) {\n  nodeArray.forEach((node) => {\n    const nodeSize = Math[size](node.in || node.out, node.out || node.in);\n    const overlapFrom = nodeSize < node.in;\n    const overlapTo = nodeSize < node.out;\n    let addY = 0;\n    let len = node.from.length;\n    node.from.sort((a, b) => (a.node.y + a.node.out / 2) - (b.node.y + b.node.out / 2)).forEach((flow, idx) => {\n      if (overlapFrom) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n    addY = 0;\n    len = node.to.length;\n    node.to.sort((a, b) => (a.node.y + a.node.in / 2) - (b.node.y + b.node.in / 2)).forEach((flow, idx) => {\n      if (overlapTo) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n  });\n}\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @param {boolean} priority\n * @param {'min' | 'max'} size\n * @return {{maxY: number, maxX: number}}\n */\nfunction layout(nodes, data, priority, size) {\n  const nodeArray = [...nodes.values()];\n  const maxX = calculateX(nodes, data);\n  const maxY = priority ? calculateYUsingPriority(nodeArray, maxX) : calculateY(nodeArray, maxX);\n  const padding = maxY * 0.03; // rows;\n  const maxYWithPadding = addPadding(nodeArray, padding);\n  sortFlows(nodeArray, size);\n  return {maxX, maxY: maxYWithPadding};\n}\n\n/**\n * @param {Array<SankeyDataPoint>} data Array of raw data elements\n * @return {Map<string, SankeyNode>}\n */\nfunction buildNodesFromRawData(data) {\n  const nodes = new Map();\n  for (let i = 0; i < data.length; i++) {\n    const {from, to, flow} = data[i];\n\n    if (!nodes.has(from)) {\n      nodes.set(from, {\n        key: from,\n        in: 0,\n        out: flow,\n        from: [],\n        to: [{key: to, flow: flow, index: i}],\n      });\n    } else {\n      const node = nodes.get(from);\n      node.out += flow;\n      node.to.push({key: to, flow: flow, index: i});\n    }\n    if (!nodes.has(to)) {\n      nodes.set(to, {\n        key: to,\n        in: flow,\n        out: 0,\n        from: [{key: from, flow: flow, index: i}],\n        to: [],\n      });\n    } else {\n      const node = nodes.get(to);\n      node.in += flow;\n      node.from.push({key: from, flow: flow, index: i});\n    }\n  }\n\n  const flowSort = (a, b) => b.flow - a.flow;\n\n  [...nodes.values()].forEach(node => {\n    node.from = node.from.sort(flowSort);\n    node.from.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n\n    node.to = node.to.sort(flowSort);\n    node.to.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n  });\n\n  return nodes;\n}\n\n/**\n * @param {Array<FromToElement>} arr\n * @param {string} key\n * @param {number} index\n * @return {number}\n */\nfunction getAddY(arr, key, index) {\n  for (const item of arr) {\n    if (item.key === key && item.index === index) {\n      return item.addY;\n    }\n  }\n  return 0;\n}\n\nclass SankeyController extends DatasetController {\n  /**\n   * @param {ChartMeta<Flow, Element>} meta\n   * @param {Array<SankeyDataPoint>} data Array of original data elements\n   * @param {number} start\n   * @param {number} count\n   * @return {Array<SankeyParsedData>}\n   */\n  parseObjectData(meta, data, start, count) {\n    const {from: fromKey = 'from', to: toKey = 'to', flow: flowKey = 'flow'} = this.options.parsing;\n    const sankeyData = data.map(({[fromKey]: from, [toKey]: to, [flowKey]: flow}) => ({from, to, flow}));\n    const {xScale, yScale} = meta;\n    const parsed = []; /* Array<SankeyParsedData> */\n    const nodes = this._nodes = buildNodesFromRawData(sankeyData);\n    /* getDataset() => SankeyControllerDatasetOptions */\n    const {column, priority, size} = this.getDataset();\n    if (priority) {\n      for (const node of nodes.values()) {\n        if (node.key in priority) {\n          node.priority = priority[node.key];\n        }\n      }\n    }\n    if (column) {\n      for (const node of nodes.values()) {\n        if (node.key in column) {\n          node.column = true;\n          node.x = column[node.key];\n        }\n      }\n    }\n\n    const {maxX, maxY} = layout(nodes, sankeyData, !!priority, validateSizeValue(size));\n\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    for (let i = 0, ilen = sankeyData.length; i < ilen; ++i) {\n      const dataPoint = sankeyData[i];\n      const from = nodes.get(dataPoint.from);\n      const to = nodes.get(dataPoint.to);\n      const fromY = from.y + getAddY(from.to, dataPoint.to, i);\n      const toY = to.y + getAddY(to.from, dataPoint.from, i);\n      parsed.push({\n        x: xScale.parse(from.x, i),\n        y: yScale.parse(fromY, i),\n        _custom: {\n          from,\n          to,\n          x: xScale.parse(to.x, i),\n          y: yScale.parse(toY, i),\n          height: yScale.parse(dataPoint.flow, i),\n        }\n      });\n    }\n    return parsed.slice(start, start + count);\n  }\n\n  getMinMax(scale) {\n    return {\n      min: 0,\n      max: scale === this._cachedMeta.xScale ? this._maxX : this._maxY\n    };\n  }\n\n  update(mode) {\n    const {data} = this._cachedMeta;\n\n    this.updateElements(data, 0, data.length, mode);\n  }\n\n  /**\n   * @param {Array<Flow>} elems\n   * @param {number} start\n   * @param {number} count\n   * @param {\"resize\" | \"reset\" | \"none\" | \"hide\" | \"show\" | \"normal\" | \"active\"} mode\n   */\n  updateElements(elems, start, count, mode) {\n    const {xScale, yScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(mode, elems[start], firstOpts);\n    const dataset = this.getDataset();\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1) / 2 + 0.5;\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    for (let i = start; i < start + count; i++) {\n      /* getParsed(idx: number) => SankeyParsedData */\n      const parsed = this.getParsed(i);\n      const custom = parsed._custom;\n      const y = yScale.getPixelForValue(parsed.y);\n      this.updateElement(\n        elems[i],\n        i,\n        {\n          x: xScale.getPixelForValue(parsed.x) + nodeWidth + borderWidth,\n          y,\n          x2: xScale.getPixelForValue(custom.x) - borderWidth,\n          y2: yScale.getPixelForValue(custom.y),\n          from: custom.from,\n          to: custom.to,\n          progress: mode === 'reset' ? 0 : 1,\n          height: Math.abs(yScale.getPixelForValue(parsed.y + custom.height) - y),\n          options: this.resolveDataElementOptions(i, mode)\n        },\n        mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode);\n  }\n\n  _drawLabels() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset(); /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n    const labels = dataset.labels;\n    const {xScale, yScale} = this._cachedMeta;\n\n    ctx.save();\n    const chartArea = this.chart.chartArea;\n    for (const node of nodes.values()) {\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      const label = labels && labels[node.key] || node.key;\n      let textX = x;\n      ctx.fillStyle = dataset.color || 'black';\n      ctx.textBaseline = 'middle';\n      if (x < chartArea.width / 2) {\n        ctx.textAlign = 'left';\n        textX += nodeWidth + borderWidth + 4;\n      } else {\n        ctx.textAlign = 'right';\n        textX -= borderWidth + 4;\n      }\n      this._drawLabel(label, y, height, ctx, textX);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {string} label\n   * @param {number} y\n   * @param {number} height\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {number} textX\n   * @private\n   */\n  _drawLabel(label, y, height, ctx, textX) {\n    const font = toFont(this.options.font, this.chart.options.font);\n    const lines = isNullOrUndef(label) ? [] : toTextLines(label);\n    const linesLength = lines.length;\n    const middle = y + height / 2;\n    const textHeight = font.lineHeight;\n    const padding = valueOrDefault(this.options.padding, textHeight / 2);\n\n    ctx.font = font.string;\n\n    if (linesLength > 1) {\n      const top = middle - (textHeight * linesLength / 2) + padding;\n      for (let i = 0; i < linesLength; i++) {\n        ctx.fillText(lines[i], textX, top + (i * textHeight));\n      }\n    } else {\n      ctx.fillText(label, textX, middle);\n    }\n  }\n\n  _drawNodes() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset();  /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const {xScale, yScale} = this._cachedMeta;\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    ctx.save();\n    ctx.strokeStyle = dataset.borderColor || 'black';\n    ctx.lineWidth = borderWidth;\n\n    for (const node of nodes.values()) {\n      ctx.fillStyle = node.color;\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      if (borderWidth) {\n        ctx.strokeRect(x, y, nodeWidth, height);\n      }\n      ctx.fillRect(x, y, nodeWidth, height);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * That's where the drawing process happens\n   */\n  draw() {\n    const ctx = this._ctx;\n    const data = this.getMeta().data || []; /* Array<Flow> */\n\n    // Set node colors\n    const active = [];\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      const flow = data[i]; /* Flow at index i */\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n      if (flow.active) {\n        active.push(flow);\n      }\n    }\n    // Make sure nodes connected to hovered flows are using hover colors.\n    for (const flow of active) {\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n    }\n\n    /* draw SankeyNodes on the canvas */\n    this._drawNodes();\n\n    /* draw Flow elements on the canvas */\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(ctx);\n    }\n\n    /* draw labels (for SankeyNodes) on the canvas */\n    this._drawLabels();\n  }\n}\n\nSankeyController.id = 'sankey';\n\nSankeyController.defaults = {\n  dataElementType: 'flow',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'x2', 'y2', 'height']\n    },\n    progress: {\n      easing: 'linear',\n      duration: (ctx) => ctx.type === 'data' ? (ctx.parsed._custom.x - ctx.parsed.x) * 200 : undefined,\n      delay: (ctx) => ctx.type === 'data' ? ctx.parsed.x * 500 + ctx.dataIndex * 20 : undefined,\n    },\n    colors: {\n      type: 'color',\n      properties: ['colorFrom', 'colorTo'],\n    },\n  },\n  transitions: {\n    hide: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          to: 'transparent'\n        }\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          from: 'transparent'\n        }\n      }\n    }\n  }\n};\n\nSankeyController.overrides = {\n  interaction: {\n    mode: 'nearest',\n    intersect: true\n  },\n  datasets: {\n    clip: false,\n    parsing: true\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          const item = context.dataset.data[context.dataIndex];\n          return item.from + ' -> ' + item.to + ': ' + item.flow;\n        }\n      },\n    },\n    legend: {\n      display: false,\n    },\n  },\n  scales: {\n    x: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      offset: false,\n    },\n    y: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      reverse: true,\n      offset: false,\n    },\n  },\n  layout: {\n    padding: {\n      top: 3,\n      left: 3,\n      right: 13,\n      bottom: 3,\n    },\n  },\n};\n\n/**\n * @typedef {{x: number, y: number}} ControlPoint\n * @typedef {{cp1: ControlPoint, cp2: ControlPoint}} ControlPoints\n *\n * @param {number} x\n * @param {number} y\n * @param {number} x2\n * @param {number} y2\n * @return {ControlPoints}\n */\nconst controlPoints = (x, y, x2, y2) => x < x2\n  ? {\n    cp1: {x: x + (x2 - x) / 3 * 2, y},\n    cp2: {x: x + (x2 - x) / 3, y: y2}\n  }\n  : {\n    cp1: {x: x - (x - x2) / 3, y: 0},\n    cp2: {x: x2 + (x - x2) / 3, y: 0}\n  };\n\n/**\n *\n * @param {ControlPoint} p1\n * @param {ControlPoint} p2\n * @param {number} t\n * @return {ControlPoint}\n */\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Flow} flow\n */\nfunction setStyle(ctx, {x, x2, options}) {\n  let fill;\n\n  if (options.colorMode === 'from') {\n    fill = color(options.colorFrom).alpha(0.5).rgbString();\n  } else if (options.colorMode === 'to') {\n    fill = color(options.colorTo).alpha(0.5).rgbString();\n  } else {\n    fill = ctx.createLinearGradient(x, 0, x2, 0);\n    fill.addColorStop(0, color(options.colorFrom).alpha(0.5).rgbString());\n    fill.addColorStop(1, color(options.colorTo).alpha(0.5).rgbString());\n  }\n\n  ctx.fillStyle = fill;\n  ctx.strokeStyle = fill;\n  ctx.lineWidth = 0.5;\n}\n\nclass Flow extends Element {\n\n  /**\n   * @param {FlowConfig} cfg\n   */\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.x2 = undefined;\n    this.y2 = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  draw(ctx) {\n    const me = this;\n    const {x, x2, y, y2, height, progress} = me;\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n\n    if (progress === 0) {\n      return;\n    }\n    ctx.save();\n    if (progress < 1) {\n      ctx.beginPath();\n      ctx.rect(x, Math.min(y, y2), (x2 - x) * progress + 1, Math.abs(y2 - y) + height + 1);\n      ctx.clip();\n    }\n\n    setStyle(ctx, me);\n\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, x2, y2);\n    ctx.lineTo(x2, y2 + height);\n    ctx.bezierCurveTo(cp2.x, cp2.y + height, cp1.x, cp1.y + height, x, y + height);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    if (mouseX < x || mouseX > x2) {\n      return false;\n    }\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n    const t = (mouseX - x) / (x2 - x);\n    const p1 = {x, y};\n    const p2 = {x: x2, y: y2};\n    const a = pointInLine(p1, cp1, t);\n    const b = pointInLine(cp1, cp2, t);\n    const c = pointInLine(cp2, p2, t);\n    const d = pointInLine(a, b, t);\n    const e = pointInLine(b, c, t);\n    const topY = pointInLine(d, e, t).y;\n    return mouseY >= topY && mouseY <= topY + height;\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inXRange(mouseX, useFinalPosition) {\n    const {x, x2} = this.getProps(['x', 'x2'], useFinalPosition);\n    return mouseX >= x && mouseX <= x2;\n  }\n\n  /**\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inYRange(mouseY, useFinalPosition) {\n    const {y, y2, height} = this.getProps(['y', 'y2', 'height'], useFinalPosition);\n    const minY = Math.min(y, y2);\n    const maxY = Math.max(y, y2) + height;\n    return mouseY >= minY && mouseY <= maxY;\n  }\n\n  /**\n   * @param {boolean} useFinalPosition\n   * @return {{x: number, y:number}}\n   */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    return {\n      x: (x + x2) / 2,\n      y: (y + y2 + height) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  /**\n   * @param {\"x\" | \"y\"} axis\n   * @return {number}\n   */\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n\nFlow.id = 'flow';\nFlow.defaults = {\n  colorFrom: 'red',\n  colorTo: 'green',\n  colorMode: 'gradient',\n  hoverColorFrom: (ctx, options) => getHoverColor(options.colorFrom),\n  hoverColorTo: (ctx, options) => getHoverColor(options.colorTo)\n};\n\nexport { Flow, SankeyController };\n","export * from '../dist/helpers.js';\n"],"names":["_chart","require","window","RocketBotWeb","parcelHelpers","_auto","_chartjsChartSankey","Chart","register","SankeyController","Flow","doSetUpByDayOfWeek","canvas","document","getElementById","dataString","textContent","data","JSON","parse","datasets","rider","riders","push","label","riderToWeekdayToCount","type","labels","doSetUpByRideCountGroup","riderToGroupToCount","chart","rideCountGroupNames","options","scales","y","ticks","format","minimumFractionDigits","logPlotCheckbox","addEventListener","checked","update","doSetUpLatestRiderCount","datum","from","substring","to","doSetUpLastRiderPie","ALL_VALUE","controls","companyLabel","createElement","appendChild","createTextNode","companySelect","typeLabel","typeSelect","riddenOnlyLabel","riddenOnlyCheckbox","allCompanies","Object","keys","companyToTypeToLastRiderToCount","sort","allTypes","company","tp","indexOf","allCompaniesOption","value","companyOption","selectedIndex","allTypesOption","typeOption","updateChart","considerCompanies","considerTypes","companyToTypeToLastRiderToCountRidden","length","lastChild","removeChild","consideredTypes","companyName","companyTypes","riderToLastVehicleCount","typeToLastRiderToCount","lastRiderToCount","undefined","dataRiders","dataValues","map","r","setUpByDayOfWeek","setUpByRideCountGroup","setUpLatestRiderCount","setUpLastRiderPie","Charting","Bim","_chartJs","exportAll","exports","registerables","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","_notify","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","_update","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","isObject","animationOptions","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","_getStackCount","_getStackIndex","name","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","c","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","intlCache","num","stringify","Intl","NumberFormat","getNumberFormat","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","maximumFractionDigits","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","rectX","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","export","b2n","b2p","index_esm","hexParse","hsl2rgb","hslString","hsv2rgb","hueParse","hwb2rgb","lim","n2b","n2p","nameParse","p2b","rgb2hsl","rgbParse","rgbString","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","hueValue","calln","hue","exec","deg","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpacked","tkeys","ok","nk","unpack","RGB_RE","modHSL","fromObject","_rgb","_valid","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","desaturate","interopDefault","__esModule","default","defineInteropFlag","dest","destName","_helpers","validateSizeValue","nextColumn","columnsNotInTo","nodeByXY","prevCountId","nodeCount","list","countId","getCountId","elem","_visited","flowByNodeCount","processFrom","flow","out","processTo","in","setOrGetY","calculateY","nodeArray","rest","leftNodes","rightNodes","leftToDo","rightToDo","centerToDo","leftY","rightY","processRest","nodes","priority","dataPoint","column","calculateX","nextYStart","calculateYUsingPriority","maxYWithPadding","rows","addPadding","nodeSize","overlapFrom","overlapTo","addY","sortFlows","getAddY","fromKey","toKey","flowKey","sankeyData","_nodes","flowSort","buildNodesFromRawData","_maxX","_maxY","fromY","toY","elems","nodeWidth","_drawLabels","textX","_drawLabel","toTextLines","linesLength","middle","textHeight","_drawNodes","colorFrom","colorTo","transitions","pointInLine","colorMode","createLinearGradient","addColorStop","topY","hoverColorFrom","hoverColorTo","_helpersJs"],"version":3,"file":"rocketbotweb.js.map"}