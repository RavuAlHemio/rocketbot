{"mappings":"usCAAA,IAAAA,EAAAC,EAAA,eAMAC,OAAOC,aAAeH,EAAAG,Y,kDCNtB,IAAAC,EAAAH,EAAA,kD,0DAAA,IAAAI,EAAAJ,EAAA,iBACAK,EAAAL,EAAA,wBA6CO,IAAOE,EA3CdE,EAAAE,MAAMC,SAASF,EAAAG,iBAAkBH,EAAAI,M,kDA4C7B,SAASC,IACL,MAAMC,EAAiCC,SAASC,eAAe,gBAC/D,GAAe,OAAXF,EACA,OAGJ,MAAMG,EAAaF,SAASC,eAAe,eAAeE,YAC1D,GAAID,QACA,OAEJ,MAAME,EAAwBC,KAAKC,MAAMJ,GACnCK,EAA2B,GAC3BC,EAAgC,GACtC,IAAK,MAAMC,KAASL,EAAKM,OAAQ,CAC7B,MAAMC,EAAiBP,EAAKQ,sBAAsBH,GAClD,KAAOD,EAAoBK,OAASF,EAAeE,QAC/CL,EAAoBM,KAAK,GAE7B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAeE,OAAQE,IACvCP,EAAoBO,IAAMJ,EAAeI,GAE7CR,EAASO,KAAK,CACVE,MAAOP,EACPL,KAAMO,EACNM,QAAS,YAEjB,CACAV,EAASO,KAAK,CACVE,MAAO,UACPZ,KAAMI,EACNS,QAAS,WAGb,IAAI,EAAAzB,EAAAE,OAAMK,EAAQ,CACdmB,KAAM,MACNd,KAAM,CACFe,OAAQ,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAC7EZ,SAAUA,GAEda,QAAS,CACLC,OAAQ,CACJC,SAAY,CACRC,SAAS,EACTC,SAAU,OACVC,MAAO,CACHF,SAAS,EACTG,KAAM,yBAGdC,OAAU,CACNJ,SAAS,EACTC,SAAU,QACVC,MAAO,CACHF,SAAS,EACTG,KAAM,qBAM9B,CAEA,SAASE,IACL,MAAM7B,EAAiCC,SAASC,eAAe,gBAC/D,GAAe,OAAXF,EACA,OAGJ,MAAMG,EAAaF,SAASC,eAAe,eAAeE,YAC1D,GAAID,QACA,OAEJ,MAAME,EAA6BC,KAAKC,MAAMJ,GACxCK,EAA2B,GACjC,IAAK,MAAME,KAASL,EAAKM,OACrBH,EAASO,KAAK,CACVE,MAAOP,EACPL,KAAMA,EAAKyB,oBAAoBpB,KAIvC,MAAMqB,EAAQ,IAAI,EAAAtC,EAAAE,OAAMK,EAAQ,CAC5BmB,KAAM,MACNd,KAAM,CACFe,OAAQf,EAAK2B,oBACbxB,SAAUA,GAEda,QAAS,CACLC,OAAQ,CACJW,EAAG,CACCC,MAAO,CACHC,OAAQ,CACJC,sBAAuB,SAQzCC,EAAyCpC,SAASC,eAAe,kCAC/C,OAApBmC,GACAA,EAAgBC,iBAAiB,UAAU,KACvCP,EAAMV,QAAQC,OAAQW,EAAGd,KAAOkB,EAAgBE,QAAU,cAAgB,SAC1ER,EAAMS,QAAM,GAGxB,CAEA,SAASC,IACL,MAAMzC,EAAiCC,SAASC,eAAe,iBAC/D,GAAe,OAAXF,EACA,OAGJ,MAAMG,EAAaF,SAASC,eAAe,gBAAgBE,YAC3D,GAAID,QACA,OAEJ,MAAME,EAAgCC,KAAKC,MAAMJ,GACjD,IAAIiB,EAAS,CAAC,EACd,IAAK,IAAIsB,KAASrC,EAEde,EAAOsB,EAAMC,MAAQD,EAAMC,KAAKC,UAAU,GAC1CxB,EAAOsB,EAAMG,IAAMH,EAAMG,GAAGD,UAAU,GAG5B,IAAI,EAAAnD,EAAAE,OAAMK,EAAQ,CAC5BmB,KAAM,SACNd,KAAM,CACFG,SAAU,CACN,CACIH,KAAMA,EACNe,OAAQA,MAK5B,CAEA,SAAS0B,IACL,MAAMC,EAAoB,IAGpBC,EAAsC/C,SAASC,eAAe,gBACpE,GAAiB,OAAb8C,EACA,OAGJ,MAAMC,EAAehD,SAASiD,cAAc,SAC5CD,EAAaE,YAAYlD,SAASmD,eAAe,cACjD,MAAMC,EAAgBpD,SAASiD,cAAc,UAC7CD,EAAaE,YAAYE,GACzBL,EAASG,YAAYF,GAErBD,EAASG,YAAYlD,SAASmD,eAAe,QAE7C,MAAME,EAAYrD,SAASiD,cAAc,SACzCI,EAAUH,YAAYlD,SAASmD,eAAe,WAC9C,MAAMG,EAAatD,SAASiD,cAAc,UAC1CI,EAAUH,YAAYI,GACtBP,EAASG,YAAYG,GAErBN,EAASG,YAAYlD,SAASmD,eAAe,QAE7C,MAAMI,EAAkBvD,SAASiD,cAAc,SACzCO,EAAqBxD,SAASiD,cAAc,SAClDO,EAAmBtC,KAAO,WAC1BsC,EAAmBlB,SAAU,EAC7BiB,EAAgBL,YAAYM,GAC5BD,EAAgBL,YAAYlD,SAASmD,eAAe,iBACpDJ,EAASG,YAAYK,GAGrB,MAAMrD,EAAaF,SAASC,eAAe,eAAeE,YAC1D,GAAID,QACA,OAEJ,MAAME,EAAyBC,KAAKC,MAAMJ,GAEpCuD,EAAyBC,OAAOC,KAAKvD,EAAKwD,iCAChDH,EAAaI,OAEb,MAAMC,EAAqB,GAC3B,IAAK,IAAIC,KAAWN,EAChB,IAAK,IAAIO,KAAMN,OAAOC,KAAKvD,EAAKwD,gCAAgCG,KAC/B,IAAzBD,EAASG,QAAQD,IACjBF,EAAShD,KAAKkD,GAI1BF,EAASD,OAGT,MAAMK,EAAqBlE,SAASiD,cAAc,UAClDiB,EAAmBC,MAAQrB,EAC3BoB,EAAmB/D,YAAc,QACjCiD,EAAcF,YAAYgB,GAC1B,IAAK,IAAIH,KAAWN,EAAc,CAC9B,MAAMW,EAAgBpE,SAASiD,cAAc,UAC7CmB,EAAcD,MAAQJ,EACtBK,EAAcjE,YAAc4D,EAC5BX,EAAcF,YAAYkB,EAC9B,CACAhB,EAAciB,cAAgB,EAE9B,MAAMC,EAAiBtE,SAASiD,cAAc,UAC9CqB,EAAeH,MAAQrB,EACvBwB,EAAenE,YAAc,QAC7BmD,EAAWJ,YAAYoB,GACvB,IAAK,IAAIN,KAAMF,EAAU,CACrB,MAAMS,EAAavE,SAASiD,cAAc,UAC1CsB,EAAWJ,MAAQH,EACnBO,EAAWpE,YAAc6D,EACzBV,EAAWJ,YAAYqB,EAC3B,CACAjB,EAAWe,cAAgB,EAG3B,MAAMtE,EAAiCC,SAASC,eAAe,gBAC/D,GAAe,OAAXF,EACA,OAEJ,MAAM+B,EAAQ,IAAI,EAAAtC,EAAAE,OAAMK,EAAQ,CAC5BmB,KAAM,MACNd,KAAM,CACFG,SAAU,MAKlB,SAASiE,EACL1C,EAAqB1B,EACrBgD,EAAkCE,EAClCE,EACAC,EAAwBK,GAExB,MAAMW,EAA8BrB,EAAee,QAAUrB,EACvDW,EACA,CAACL,EAAce,OACfO,EAA0BpB,EAAYa,QAAUrB,EAChDgB,EACA,CAACR,EAAWa,OACZP,EAAkCJ,EAAmBlB,QACrDlC,EAAKuE,sCACLvE,EAAKwD,gCAGX,GAAiC,IAA7Ba,EAAkB5D,QAAyC,IAAzB6D,EAAc7D,OAAc,EAEf,IAD1B6C,OAAOC,KAAKC,EAAgCa,EAAkB,KAClER,QAAQS,EAAc,MAEnCA,EAAc7D,OAAS,EACvB6D,EAAc5D,QAAQgD,GAE9B,CAGA,KAAgC,OAAzBR,EAAWsB,WACdtB,EAAWuB,YAAYvB,EAAWsB,WAEtC,MAAMN,EAAiBtE,SAASiD,cAAc,UAC9CqB,EAAeH,MAAQrB,EACvBwB,EAAenE,YAAc,QAC7BmD,EAAWJ,YAAYoB,GAEvB,MAAMQ,EAA4B,GAClC,IAAK,IAAIC,KAAeN,EAAmB,CACvC,IAAIO,EAAyBtB,OAAOC,KAAKC,EAAgCmB,IACzE,IAAK,IAAIf,KAAMgB,GACyB,IAAhCF,EAAgBb,QAAQD,IACxBc,EAAgBhE,KAAKkD,EAGjC,CACAc,EAAgBjB,OAChB,IAAK,IAAIG,KAAMc,EAAiB,CAC5B,MAAMP,EAAavE,SAASiD,cAAc,UAC1CsB,EAAWJ,MAAQH,EACnBO,EAAWpE,YAAc6D,EACzBV,EAAWJ,YAAYqB,EAC3B,CAE6B,IAAzBG,EAAc7D,OACdyC,EAAWa,MAAQO,EAAc,GAEjCpB,EAAWe,cAAgB,EAI/B,MAAMY,EAAuD,CAAC,EAC9D,IAAK,IAAIF,KAAeN,EAAmB,CACvC,MAAMS,EAAyBtB,EAAgCmB,GAC/D,IAAK,IAAIf,KAAMU,EAAe,CAC1B,MAAMS,EAAmBD,EAAuBlB,GAChD,QAAyBoB,IAArBD,EAIJ,IAAK,IAAI1E,KAASiD,OAAOC,KAAKwB,QACaC,IAAnCH,EAAwBxE,KACxBwE,EAAwBxE,GAAS,GAErCwE,EAAwBxE,IAAU0E,EAAiB1E,EAE3D,CACJ,CAGA,MAAM4E,EAAuB3B,OAAOC,KAAKsB,GACzCI,EAAWxB,OACX,MAAMyB,EAAuBD,EAAWE,KAAIC,GAAKP,EAAwBO,KACzE1D,EAAM1B,KAAO,CACTG,SAAU,CACN,CACIH,KAAMkF,IAGdnE,OAAQkE,GAEZvD,EAAMS,QACV,CAGAa,EAAcf,iBAAiB,UAAU,IAAMmC,EAC3C1C,EAAO1B,EACPgD,EAAeE,EAAYE,EAC3BC,EAAcK,KAElBR,EAAWjB,iBAAiB,UAAU,IAAMmC,EACxC1C,EAAO1B,EACPgD,EAAeE,EAAYE,EAC3BC,EAAcK,KAElBN,EAAmBnB,iBAAiB,UAAU,IAAMmC,EAChD1C,EAAO1B,EACPgD,EAAeE,EAAYE,EAC3BC,EAAcK,KAIlBU,EACI1C,EAAO1B,EACPgD,EAAeE,EAAYE,EAC3BC,EAAcK,EAEtB,CAEA,SAAS2B,IACL,MAGM1C,EAAsC/C,SAASC,eAAe,sBACpE,GAAiB,OAAb8C,EACA,OAGJ,MAAMM,EAAYrD,SAASiD,cAAc,SACzCI,EAAUH,YAAYlD,SAASmD,eAAe,iBAC9C,MAAMG,EAAatD,SAASiD,cAAc,UAC1CI,EAAUH,YAAYI,GACtBP,EAASG,YAAYG,GAGrB,MAAMnD,EAAaF,SAASC,eAAe,eAAeE,YAC1D,GAAID,QACA,OAEJ,MAAMwF,EAAqDrF,KAAKC,MAAMJ,GAEhEyF,EAAiCjC,OAAOC,KAAK+B,GACnDC,EAAqB9B,OAGrB,IAAK,IAAI+B,KAAoBD,EAAsB,CAC/C,MAAMpB,EAAavE,SAASiD,cAAc,UAC1CsB,EAAWJ,MAAQyB,EACnBrB,EAAWpE,YAAcyF,EACzBtC,EAAWJ,YAAYqB,EAC3B,CACAjB,EAAWe,cAAgB,EAG3B,MAAMtE,EAAiCC,SAASC,eAAe,gBAC/D,GAAe,OAAXF,EACA,OAEJ,MAAM+B,EAAQ,IAAI,EAAAtC,EAAAE,OAAMK,EAAQ,CAC5BmB,KAAM,MACNd,KAAM,CACFG,SAAU,IAEda,QAAS,CACLC,OAAQ,CACJC,SAAY,CACRE,SAAU,OACVC,MAAO,CACHF,SAAS,EACTG,KAAM,wBAEVO,MAAO,CACHC,OAAQ,CACJC,sBAAuB,KAInC0D,KAAQ,CACJrE,SAAU,QACVC,MAAO,CACHF,SAAS,EACTG,KAAM,sBAEVO,MAAO,CACHC,OAAQ,CACJC,sBAAuB,SAS/C,SAASqC,EACL1C,EAAqB4D,EACrBpC,GAEA,MAAMwC,EAAiBJ,EAAgCpC,EAAWa,OAC5D4B,EAAarC,OAAOC,KAAKmC,GAC/BC,EAAWlC,OAGX,MAAMtD,EAAqB,GACrBY,EAAmB,GACzB,IAAK,IAAIV,KAASsF,EAAY,CAC1B,MAAMC,EAtFY,MAsFAvF,EAAwB,QAAUA,EAC9CwF,EAAUH,EAAerF,GAE/B,KAAOU,EAAON,OAASoF,EAAQpF,QAC3BM,EAAOL,KAAK,WAAWK,EAAON,OAAS,KAG3CN,EAASO,KAAK,CACVE,MAAOgF,EACP5F,KAAM6F,EACNhF,QAhGc,MAgGLR,EAAwB,OAAS,YAElD,CAGAqB,EAAM1B,KAAO,CACTG,SAAUA,EACVY,OAAQA,GAEZW,EAAMS,QACV,CAGAe,EAAWjB,iBAAiB,UAAU,IAAMmC,EACxC1C,EAAO4D,EAAiCpC,KAI5CkB,EACI1C,EAAO4D,EAAiCpC,EAEhD,CAEA,SAAS4C,IAEL,MAAMhG,EAAaF,SAASC,eAAe,eAAeE,YAC1D,GAAID,QACA,OAEJ,MAAME,EAAwBC,KAAKC,MAAMJ,GAGnCiG,EAAkD,CAAC,EACzD,IAAIC,EAAqB,EACzB,MAAMC,EAAa3C,OAAOC,KAAKvD,EAAKkG,qBAC/Bf,KAAIgB,GAAKnG,EAAKkG,oBAAoBC,KACvC,GAA0B,IAAtBF,EAAWxF,OACX,OAEJwF,EAAWxC,MAAK,CAAC2C,EAAGC,IAAMD,EAAIC,IAC9B,MACMC,EADWL,EAAWA,EAAWxF,OAAS,GACpB,IAC5B,IAAK,IAAIkD,KAAWL,OAAOC,KAAKvD,EAAKkG,qBAAsB,CACvD,MAAMK,EAAQvG,EAAKkG,oBAAoBvC,GACnC4C,GAASD,EACTP,EAAiBpC,GAAW4C,EAE5BP,GAAcO,CAEtB,CACA,MAAMC,EAAgClD,OAAOC,KAAKwC,GAClDS,EAAoB/C,MAAK,CAACgD,EAAGrB,IAAMW,EAAiBX,GAAKW,EAAiBU,KAC1E,MAAMC,EAAiCF,EAAoBrB,KAAIgB,GAAKJ,EAAiBI,KACrFK,EAAoB9F,KAAK,WACzBgG,EAAqBhG,KAAKsF,GAG1B,MAAMrG,EAAiCC,SAASC,eAAe,gBAC/D,GAAe,OAAXF,EACA,OAEU,IAAI,EAAAP,EAAAE,OAAMK,EAAQ,CAC5BmB,KAAM,MACNd,KAAM,CACFG,SAAU,CACN,CACIH,KAAM0G,IAGd3F,OAAQyF,IAGpB,C,EAEgBG,iBAAT,WACH/G,SAASqC,iBAAiB,mBAAoBvC,EAClD,E,EAEgBkH,sBAAT,WACHhH,SAASqC,iBAAiB,mBAAoBT,EAClD,E,EAEgBqF,sBAAT,WACHjH,SAASqC,iBAAiB,mBAAoBG,EAClD,E,EAEgB0E,kBAAT,WACHlH,SAASqC,iBAAiB,mBAAoBQ,EAClD,E,EAEgBsE,8BAAT,WACHnH,SAASqC,iBAAiB,mBAAoBoD,EAClD,E,EAEgB2B,iBAAT,WACHpH,SAASqC,iBAAiB,mBAAoB6D,EAClD,C,EA9hB2BmB,EAAAC,EAAAD,WAAAC,EAAAD,SAAA,I,EAAJC,EAAAhI,EAAAgI,MAAAhI,EAAAgI,IAAA,I,EAAbhI,MAAA,I,4IC9Cd,IAAAC,EAAAH,EAAA,kD,uBAAA,IAAAmI,EAAAnI,EAAA,oBAIAG,EAAAiI,UAAAD,EAAAE,GAFAF,EAAA7H,MAAMC,YAAY4H,EAAAG,e,UAGHH,EAAA7H,K;;;;;;;6tDCMR,MAAMiI,EACXC,cACEC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAY9C,CACnB,CAKA+C,QAAQrG,EAAOsG,EAAOC,EAAMnH,GAC1B,MAAMoH,EAAYF,EAAMG,UAAUrH,GAC5BsH,EAAWJ,EAAMK,SAEvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzB7G,QACA8G,QAASR,EAAMQ,QACfJ,WACAK,YAAaC,KAAKC,IAAIV,EAAOD,EAAMY,MAAOR,MAE9C,CAKAS,WACMpB,KAAKC,WAGTD,KAAKI,UAAW,EAEhBJ,KAAKC,SAAWoB,IAAiBC,KAAK9J,QAAQ,KAC5CwI,KAAKuB,UACLvB,KAAKC,SAAW,KAEZD,KAAKI,UACPJ,KAAKoB,UAAQ,IAGnB,CAKAG,QAAQf,EAAOgB,KAAKC,OAClB,IAAIC,EAAY,EAEhB1B,KAAKE,QAAQW,SAAQ,CAACN,EAAOtG,KAC3B,IAAKsG,EAAMoB,UAAYpB,EAAMqB,MAAM5I,OACjC,OAEF,MAAM4I,EAAQrB,EAAMqB,MACpB,IAEIC,EAFA3I,EAAI0I,EAAM5I,OAAS,EACnB8I,GAAO,EAGX,KAAO5I,GAAK,IAAKA,EACf2I,EAAOD,EAAM1I,GAET2I,EAAKE,SACHF,EAAKG,OAASzB,EAAMK,WAGtBL,EAAMK,SAAWiB,EAAKG,QAExBH,EAAKI,KAAKzB,GACVsB,GAAO,IAIPF,EAAM1I,GAAK0I,EAAMA,EAAM5I,OAAS,GAChC4I,EAAMM,OAINJ,IACF7H,EAAM6H,OACN9B,KAAKM,QAAQrG,EAAOsG,EAAOC,EAAM,aAG9BoB,EAAM5I,SACTuH,EAAMoB,SAAU,EAChB3B,KAAKM,QAAQrG,EAAOsG,EAAOC,EAAM,YACjCD,EAAMQ,SAAU,GAGlBW,GAAaE,EAAM5I,MAAM,IAG3BgH,KAAKK,UAAYG,EAEC,IAAdkB,IACF1B,KAAKI,UAAW,EAEpB,CAKA+B,UAAUlI,GACR,MAAMmI,EAASpC,KAAKE,QACpB,IAAIK,EAAQ6B,EAAOC,IAAIpI,GAavB,OAZKsG,IACHA,EAAQ,CACNoB,SAAS,EACTZ,SAAS,EACTa,MAAO,GACPlB,UAAW,CACT4B,SAAU,GACVC,SAAU,KAGdH,EAAOI,IAAIvI,EAAOsG,IAEbA,CACT,CAOAkC,OAAOxI,EAAOyI,EAAOC,GACnB3C,KAAKmC,UAAUlI,GAAOyG,UAAUgC,GAAOzJ,KAAK0J,EAC9C,CAOAC,IAAI3I,EAAO2H,GACJA,GAAUA,EAAM5I,QAGrBgH,KAAKmC,UAAUlI,GAAO2H,MAAM3I,QAAQ2I,EACtC,CAMAiB,IAAI5I,GACF,OAAO+F,KAAKmC,UAAUlI,GAAO2H,MAAM5I,OAAS,CAC9C,CAMAmI,MAAMlH,GACJ,MAAMsG,EAAQP,KAAKE,QAAQmC,IAAIpI,GAC1BsG,IAGLA,EAAMoB,SAAU,EAChBpB,EAAMY,MAAQK,KAAKC,MACnBlB,EAAMK,SAAWL,EAAMqB,MAAMkB,QAAO,CAACC,EAAKC,IAAQ/B,KAAKgC,IAAIF,EAAKC,EAAIE,YAAY,GAChFlD,KAAKoB,WACP,CAEAO,QAAQ1H,GACN,IAAK+F,KAAKI,SACR,OAAO,EAET,MAAMG,EAAQP,KAAKE,QAAQmC,IAAIpI,GAC/B,SAAKsG,GAAUA,EAAMoB,SAAYpB,EAAMqB,MAAM5I,OAI/C,CAMAmK,KAAKlJ,GACH,MAAMsG,EAAQP,KAAKE,QAAQmC,IAAIpI,GAC/B,IAAKsG,IAAUA,EAAMqB,MAAM5I,OACzB,OAEF,MAAM4I,EAAQrB,EAAMqB,MACpB,IAAI1I,EAAI0I,EAAM5I,OAAS,EAEvB,KAAOE,GAAK,IAAKA,EACf0I,EAAM1I,GAAGkK,SAEX7C,EAAMqB,MAAQ,GACd5B,KAAKM,QAAQrG,EAAOsG,EAAOiB,KAAKC,MAAO,WACzC,CAMA4B,OAAOpJ,GACL,OAAO+F,KAAKE,QAAQoD,OAAOrJ,EAC7B,EAIF,IAAAsJ,EAA+B,IAAIzD,ECjNnC,MAAM0D,EAAc,cACdC,EAAgB,CACpBC,SAAQ7I,EAAME,EAAI4I,IACTA,EAAS,GAAM5I,EAAKF,EAO7B+I,MAAM/I,EAAME,EAAI4I,GACd,MAAME,GAAKC,OAAajJ,GAAQ2I,GAC1BO,EAAKF,EAAGG,QAASF,OAAa/I,GAAMyI,GAC1C,OAAOO,GAAMA,EAAGC,MACZD,EAAGE,IAAIJ,EAAIF,GAAQO,YACnBnJ,CACN,EACAoJ,QAAOtJ,EAAME,EAAI4I,IACR9I,GAAQE,EAAKF,GAAQ8I,GAIjB,MAAMS,EACnBrE,YAAYsE,EAAKC,EAAQC,EAAMxJ,GAC7B,MAAMyJ,EAAeF,EAAOC,GAE5BxJ,GAAK0J,OAAQ,CAACJ,EAAItJ,GAAIA,EAAIyJ,EAAcH,EAAIxJ,OAC5C,MAAMA,GAAO4J,OAAQ,CAACJ,EAAIxJ,KAAM2J,EAAczJ,IAE9CiF,KAAK+B,SAAU,EACf/B,KAAK0E,IAAML,EAAIvD,IAAM2C,EAAcY,EAAIhL,aAAewB,GACtDmF,KAAK2E,QAAUC,IAAQP,EAAIQ,SAAWD,IAAQE,OAC9C9E,KAAK+E,OAAS9D,KAAK+D,MAAMxD,KAAKC,OAAS4C,EAAIY,OAAS,IACpDjF,KAAKkD,UAAYlD,KAAKgC,OAASf,KAAK+D,MAAMX,EAAIzD,UAC9CZ,KAAKkF,QAAUb,EAAIc,KACnBnF,KAAKoF,QAAUd,EACftE,KAAKqF,MAAQd,EACbvE,KAAKsF,MAAQzK,EACbmF,KAAKuF,IAAMxK,EACXiF,KAAKwF,eAAYjI,CACnB,CAEAkI,SACE,OAAOzF,KAAK+B,OACd,CAEArH,OAAO2J,EAAKtJ,EAAIyF,GACd,GAAIR,KAAK+B,QAAS,CAChB/B,KAAKM,SAAQ,GAEb,MAAMkE,EAAexE,KAAKoF,QAAQpF,KAAKqF,OACjCK,EAAUlF,EAAOR,KAAK+E,OACtBY,EAAS3F,KAAKkD,UAAYwC,EAChC1F,KAAK+E,OAASvE,EACdR,KAAKkD,UAAYjC,KAAK+D,MAAM/D,KAAKgC,IAAI0C,EAAQtB,EAAIzD,WACjDZ,KAAKgC,QAAU0D,EACf1F,KAAKkF,QAAUb,EAAIc,KACnBnF,KAAKuF,KAAMd,OAAQ,CAACJ,EAAItJ,GAAIA,EAAIyJ,EAAcH,EAAIxJ,OAClDmF,KAAKsF,OAAQb,OAAQ,CAACJ,EAAIxJ,KAAM2J,EAAczJ,GAC/C,CACH,CAEAqI,SACMpD,KAAK+B,UAEP/B,KAAKiC,KAAKT,KAAKC,OACfzB,KAAK+B,SAAU,EACf/B,KAAKM,SAAQ,GAEjB,CAEA2B,KAAKzB,GACH,MAAMkF,EAAUlF,EAAOR,KAAK+E,OACtBnE,EAAWZ,KAAKkD,UAChBqB,EAAOvE,KAAKqF,MACZxK,EAAOmF,KAAKsF,MACZH,EAAOnF,KAAKkF,MACZnK,EAAKiF,KAAKuF,IAChB,IAAI5B,EAIJ,GAFA3D,KAAK+B,QAAUlH,IAASE,IAAOoK,GAASO,EAAU9E,IAE7CZ,KAAK+B,QAGR,OAFA/B,KAAKoF,QAAQb,GAAQxJ,OACrBiF,KAAKM,SAAQ,GAIXoF,EAAU,EACZ1F,KAAKoF,QAAQb,GAAQ1J,GAIvB8I,EAAU+B,EAAU9E,EAAY,EAChC+C,EAASwB,GAAQxB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAS3D,KAAK2E,QAAQ1D,KAAKC,IAAI,EAAGD,KAAKgC,IAAI,EAAGU,KAE9C3D,KAAKoF,QAAQb,GAAQvE,KAAK0E,IAAI7J,EAAME,EAAI4I,GAC1C,CAEAiC,OACE,MAAMC,EAAW7F,KAAKwF,YAAcxF,KAAKwF,UAAY,IACrD,OAAO,IAAIM,SAAQ,CAACC,EAAKC,KACvBH,EAAS5M,KAAK,CAAC8M,MAAKC,OAAG,GAE3B,CAEA1F,QAAQ2F,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW7F,KAAKwF,WAAa,GACnC,IAAK,IAAItM,EAAI,EAAGA,EAAI2M,EAAS7M,OAAQE,IACnC2M,EAAS3M,GAAGgN,IAEhB,EChHa,MAAMC,EACnBpG,YAAY9F,EAAOmM,GACjBpG,KAAK1I,OAAS2C,EACd+F,KAAKqG,YAAc,IAAIlG,IACvBH,KAAKsG,UAAUF,EACjB,CAEAE,UAAUF,GACR,KAAKG,OAASH,GACZ,OAGF,MAAMI,EAAmB3K,OAAOC,KAAK2K,IAASC,WACxCC,EAAgB3G,KAAKqG,YAE3BxK,OAAO+K,oBAAoBR,GAAQvF,SAAQgG,IACzC,MAAMxC,EAAM+B,EAAOS,GACnB,KAAKN,OAASlC,GACZ,OAEF,MAAM4B,EAAW,GACjB,IAAK,MAAMa,KAAUN,EACnBP,EAASa,GAAUzC,EAAIyC,KAGxBC,OAAQ1C,EAAI2C,aAAe3C,EAAI2C,YAAc,CAACH,IAAMhG,SAAS0D,IACxDA,IAASsC,GAAQF,EAAc9D,IAAI0B,IACrCoC,EAAcnE,IAAI+B,EAAM0B,KAE5B,GAEJ,CAMAgB,gBAAgB3C,EAAQ4C,GACtB,MAAMC,EAAaD,EAAO3N,QACpBA,EAsGV,SAA8B+K,EAAQ6C,GACpC,IAAKA,EACH,OAEF,IAAI5N,EAAU+K,EAAO/K,QACrB,IAAKA,EAEH,YADA+K,EAAO/K,QAAU4N,GAGf5N,EAAQ6N,UAGV9C,EAAO/K,QAAUA,EAAUsC,OAAOwL,OAAO,GAAI9N,EAAS,CAAC6N,SAAS,EAAOE,YAAa,MAEtF,OAAO/N,CACT,CArHoBgO,CAAqBjD,EAAQ6C,GAC7C,IAAK5N,EACH,MAAO,GAGT,MAAMiO,EAAaxH,KAAKyH,kBAAkBlO,EAAS4N,GAYnD,OAXIA,EAAWC,SAmFnB,SAAkBI,EAAYR,GAC5B,MAAMrF,EAAU,GACV7F,EAAOD,OAAOC,KAAKkL,GACzB,IAAK,IAAI9N,EAAI,EAAGA,EAAI4C,EAAK9C,OAAQE,IAAK,CACpC,MAAMwO,EAAOF,EAAW1L,EAAK5C,IACzBwO,GAAQA,EAAKjC,UACf9D,EAAQ1I,KAAKyO,EAAK9B,OAEtB,CAEA,OAAOE,QAAQ6B,IAAIhG,EACrB,CA1FMiG,CAAStD,EAAO/K,QAAQ+N,YAAaH,GAAYU,MAAK,KACpDvD,EAAO/K,QAAU4N,KAChB,SAKEK,CACT,CAKAC,kBAAkBnD,EAAQ4C,GACxB,MAAMP,EAAgB3G,KAAKqG,YACrBmB,EAAa,GACb7F,EAAU2C,EAAOgD,cAAgBhD,EAAOgD,YAAc,IACtDQ,EAAQjM,OAAOC,KAAKoL,GACpB1G,EAAOgB,KAAKC,MAClB,IAAIvI,EAEJ,IAAKA,EAAI4O,EAAM9O,OAAS,EAAGE,GAAK,IAAKA,EAAG,CACtC,MAAMqL,EAAOuD,EAAM5O,GACnB,GAAuB,MAAnBqL,EAAKwD,OAAO,GACd,SAGF,GAAa,YAATxD,EAAoB,CACtBiD,EAAWvO,QAAQ+G,KAAKiH,gBAAgB3C,EAAQ4C,IAChD,QACD,CACD,MAAM5K,EAAQ4K,EAAO3C,GACrB,IAAImC,EAAY/E,EAAQ4C,GACxB,MAAMF,EAAMsC,EAActE,IAAIkC,GAE9B,GAAImC,GACF,GAAIrC,GAAOqC,EAAUjB,SAAU,CAE7BiB,EAAUhM,OAAO2J,EAAK/H,EAAOkE,GAC7B,QACK,CACLkG,EAAUtD,Q,CAGTiB,GAAQA,EAAIzD,UAMjBe,EAAQ4C,GAAQmC,EAAY,IAAItC,EAAUC,EAAKC,EAAQC,EAAMjI,GAC7DkL,EAAWvO,KAAKyN,IALdpC,EAAOC,GAAQjI,CAMnB,CACA,OAAOkL,CACT,CASA9M,OAAO4J,EAAQ4C,GACb,GAA8B,IAA1BlH,KAAKqG,YAAY2B,KAGnB,YADAnM,OAAOwL,OAAO/C,EAAQ4C,GAIxB,MAAMM,EAAaxH,KAAKyH,kBAAkBnD,EAAQ4C,GAElD,OAAIM,EAAWxO,QACbuK,EAASX,IAAI5C,KAAK1I,OAAQkQ,IACnB,QAFT,CAIF,ECvHF,SAASS,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAM3O,SAAW,GACjC8O,EAAUD,EAAKC,QACfnH,OAAmB3D,IAAb6K,EAAKlH,IAAoBiH,EAAkB,EACjDlF,OAAmB1F,IAAb6K,EAAKnF,IAAoBkF,EAAkB,EACvD,MAAO,CACLhH,MAAOkH,EAAUpF,EAAM/B,EACvBoH,IAAKD,EAAUnH,EAAM+B,EAEzB,CAsCA,SAASsF,EAAwBtO,EAAOuO,GACtC,MAAM1M,EAAO,GACP2M,EAAWxO,EAAMyO,uBAAuBF,GAC9C,IAAItP,EAAGyP,EAEP,IAAKzP,EAAI,EAAGyP,EAAOF,EAASzP,OAAQE,EAAIyP,IAAQzP,EAC9C4C,EAAK7C,KAAKwP,EAASvP,GAAG0P,OAExB,OAAO9M,CACT,CAEA,SAAS+M,EAAWC,EAAOxM,EAAOyM,EAASxP,EAAU,IACnD,MAAMuC,EAAOgN,EAAMhN,KACbkN,EAA8B,WAAjBzP,EAAQ0P,KAC3B,IAAI/P,EAAGyP,EAAMO,EAAcC,EAE3B,GAAc,OAAV7M,EAAJ,CAIA,IAAKpD,EAAI,EAAGyP,EAAO7M,EAAK9C,OAAQE,EAAIyP,IAAQzP,EAAG,CAE7C,GADAgQ,GAAgBpN,EAAK5C,GACjBgQ,IAAiBH,EAAS,CAC5B,GAAIxP,EAAQoO,IACV,SAEF,KACD,CACDwB,EAAaL,EAAM5B,OAAOgC,IACtBE,OAASD,KAAgBH,GAAyB,IAAV1M,IAAe+M,OAAK/M,MAAW+M,OAAKF,MAC9E7M,GAAS6M,EAEb,CACA,OAAO7M,CAhBL,CAiBJ,CAgBA,SAASgN,EAAUpB,EAAOqB,GACxB,MAAMC,EAAUtB,GAASA,EAAM3O,QAAQiQ,QACvC,OAAOA,QAAwBjM,IAAZiM,QAAwCjM,IAAfgM,EAAKT,KACnD,CAcA,SAASW,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,GACzD,CAEA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAU3Q,GACpD,IAAK,MAAMkQ,KAAQQ,EAAOE,wBAAwB5Q,GAAMgP,UAAW,CACjE,MAAM/L,EAAQwM,EAAMS,EAAKX,OACzB,GAAIoB,GAAa1N,EAAQ,IAAQ0N,GAAY1N,EAAQ,EACnD,OAAOiN,EAAKX,KAEhB,CAEA,OAAO,IACT,CAEA,SAASsB,EAAaC,EAAYC,GAChC,MAAMnQ,MAACA,EAAOoQ,YAAad,GAAQY,EAC7BT,EAASzP,EAAMqQ,UAAYrQ,EAAMqQ,QAAU,KAC3CC,OAACA,SAAQR,EAAQnB,MAAOM,GAAgBK,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf5D,EAlCR,SAAqB8D,EAAYC,EAAYrB,GAC3C,MAAO,GAAGoB,EAAWE,MAAMD,EAAWC,MAAMtB,EAAKT,OAASS,EAAKlQ,MACjE,CAgCcyR,CAAYP,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAOpR,OACpB,IAAI8P,EAEJ,IAAK,IAAI5P,EAAI,EAAGA,EAAIyP,IAAQzP,EAAG,CAC7B,MAAM2I,EAAOuI,EAAOlR,IACbsR,CAACA,GAAQ5B,EAAO8B,CAACA,GAAQpO,GAASuF,EAEzCiH,GADmBjH,EAAKyI,UAAYzI,EAAKyI,QAAU,KAChCI,GAASjB,EAAiBC,EAAQ7C,EAAK+B,GAC1DE,EAAMI,GAAgB5M,EAEtBwM,EAAMiC,KAAOjB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAKlQ,MAC3DyP,EAAMkC,QAAUlB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAKlQ,OAE1CyP,EAAMmC,gBAAkBnC,EAAMmC,cAAgB,KACtD/B,GAAgB5M,CAC/B,CACF,CAEA,SAAS4O,EAAgBjR,EAAOwQ,GAC9B,MAAMjR,EAASS,EAAMT,OACrB,OAAOqC,OAAOC,KAAKtC,GAAQ2R,QAAOtE,GAAOrN,EAAOqN,GAAK4D,OAASA,IAAMW,OACtE,CA4BA,SAASC,EAAY9B,EAAM3H,GAEzB,MAAMsH,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAIA7I,EAAQA,GAAS2H,EAAK+B,QACtB,IAAK,MAAMlB,KAAUxI,EAAO,CAC1B,MAAM8H,EAASU,EAAOE,QACtB,IAAKZ,QAA2BnM,IAAjBmM,EAAOe,SAAsDlN,IAA/BmM,EAAOe,GAAMvB,GACxD,cAEKQ,EAAOe,GAAMvB,QACe3L,IAA/BmM,EAAOe,GAAMQ,oBAA4E1N,IAA7CmM,EAAOe,GAAMQ,cAAc/B,WAClEQ,EAAOe,GAAMQ,cAAc/B,EAEtC,CAbE,CAcJ,CAEA,MAAMqC,EAAsBtC,GAAkB,UAATA,GAA6B,SAATA,EACnDuC,EAAmB,CAACC,EAAQC,IAAWA,EAASD,EAAS5P,OAAOwL,OAAO,GAAIoE,GAIlE,MAAME,EAKnBC,gBAAkB,GAKlBA,0BAA4B,KAK5BA,uBAAyB,KAMzB7L,YAAY9F,EAAOiP,GACjBlJ,KAAK/F,MAAQA,EACb+F,KAAK6L,KAAO5R,EAAM6R,IAClB9L,KAAK4I,MAAQM,EACblJ,KAAK+L,gBAAkB,GACvB/L,KAAKqK,YAAcrK,KAAKgM,UACxBhM,KAAKiM,MAAQjM,KAAKqK,YAAYhR,KAC9B2G,KAAKzG,aAAUgE,EAEfyC,KAAKkM,UAAW,EAChBlM,KAAKmM,WAAQ5O,EACbyC,KAAKoM,iBAAc7O,EACnByC,KAAKqM,oBAAiB9O,EACtByC,KAAKsM,gBAAa/O,EAClByC,KAAKuM,gBAAahP,EAClByC,KAAKwM,qBAAsB,EAC3BxM,KAAKyM,oBAAqB,EAC1BzM,KAAK0M,cAAWnP,EAChByC,KAAK2M,UAAY,GACjB3M,KAAK4M,8BAAgCA,mBACrC5M,KAAK6M,2BAA6BA,gBAElC7M,KAAK8M,YACP,CAEAA,aACE,MAAMvD,EAAOvJ,KAAKqK,YAClBrK,KAAKsG,YACLtG,KAAK+M,aACLxD,EAAKyD,SAAW1D,EAAUC,EAAKQ,OAAQR,GACvCvJ,KAAKiN,cAEDjN,KAAKzG,QAAQ2T,OAASlN,KAAK/F,MAAMkT,gBAAgB,WACnDC,QAAQC,KAAK,qKAEjB,CAEAC,YAAYpE,GACNlJ,KAAK4I,QAAUM,GACjBmC,EAAYrL,KAAKqK,aAEnBrK,KAAK4I,MAAQM,CACf,CAEA6D,aACE,MAAM9S,EAAQ+F,KAAK/F,MACbsP,EAAOvJ,KAAKqK,YACZkD,EAAUvN,KAAKwN,aAEfC,EAAW,CAAChD,EAAMiD,EAAGvT,EAAGwD,IAAe,MAAT8M,EAAeiD,EAAa,MAATjD,EAAe9M,EAAIxD,EAEpEwT,EAAMpE,EAAKqE,SAAUC,OAAeN,EAAQK,QAAS1C,EAAgBjR,EAAO,MAC5E6T,EAAMvE,EAAKnQ,SAAUyU,OAAeN,EAAQnU,QAAS8R,EAAgBjR,EAAO,MAC5E8T,EAAMxE,EAAKyE,SAAUH,OAAeN,EAAQS,QAAS9C,EAAgBjR,EAAO,MAC5EgU,EAAY1E,EAAK0E,UACjBC,EAAM3E,EAAK4E,QAAUV,EAASQ,EAAWN,EAAKG,EAAKC,GACnDK,EAAM7E,EAAK8E,QAAUZ,EAASQ,EAAWH,EAAKH,EAAKI,GACzDxE,EAAK+E,OAAStO,KAAKuO,cAAcZ,GACjCpE,EAAKiF,OAASxO,KAAKuO,cAAcT,GACjCvE,EAAKkF,OAASzO,KAAKuO,cAAcR,GACjCxE,EAAKgB,OAASvK,KAAKuO,cAAcL,GACjC3E,EAAKQ,OAAS/J,KAAKuO,cAAcH,EACnC,CAEAZ,aACE,OAAOxN,KAAK/F,MAAM1B,KAAKG,SAASsH,KAAK4I,MACvC,CAEAoD,UACE,OAAOhM,KAAK/F,MAAMyU,eAAe1O,KAAK4I,MACxC,CAMA2F,cAAcI,GACZ,OAAO3O,KAAK/F,MAAMT,OAAOmV,EAC3B,CAKAC,eAAe1G,GACb,MAAMqB,EAAOvJ,KAAKqK,YAClB,OAAOnC,IAAUqB,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,MACX,CAEAsE,QACE7O,KAAKuB,QAAQ,QACf,CAKAuN,WACE,MAAMvF,EAAOvJ,KAAKqK,YACdrK,KAAKmM,QACP4C,OAAoB/O,KAAKmM,MAAOnM,MAE9BuJ,EAAKyD,UACP3B,EAAY9B,EAEhB,CAKAyF,aACE,MAAMzB,EAAUvN,KAAKwN,aACfjV,EAAOgV,EAAQhV,OAASgV,EAAQhV,KAAO,IACvC4T,EAAQnM,KAAKmM,MAMnB,IAAI5F,OAAShO,GACXyH,KAAKmM,MA9QX,SAAkC5T,GAChC,MAAMuD,EAAOD,OAAOC,KAAKvD,GACnB0W,EAAQ,IAAIC,MAAMpT,EAAK9C,QAC7B,IAAIE,EAAGyP,EAAM9B,EACb,IAAK3N,EAAI,EAAGyP,EAAO7M,EAAK9C,OAAQE,EAAIyP,IAAQzP,EAC1C2N,EAAM/K,EAAK5C,GACX+V,EAAM/V,GAAK,CACTwU,EAAG7G,EACH1M,EAAG5B,EAAKsO,IAGZ,OAAOoI,CACT,CAkQmBE,CAAyB5W,QACjC,GAAI4T,IAAU5T,EAAM,CACzB,GAAI4T,EAAO,EAET4C,OAAoB5C,EAAOnM,MAE3B,MAAMuJ,EAAOvJ,KAAKqK,YAClBgB,EAAY9B,GACZA,EAAK+B,QAAU,EAChB,CACG/S,GAAQsD,OAAOuT,aAAa7W,KAC9B8W,OAAkB9W,EAAMyH,MAE1BA,KAAK2M,UAAY,GACjB3M,KAAKmM,MAAQ5T,CACd,CACH,CAEA0U,cACE,MAAM1D,EAAOvJ,KAAKqK,YAElBrK,KAAKgP,aAEDhP,KAAK4M,qBACPrD,EAAKgE,QAAU,IAAIvN,KAAK4M,mBAE5B,CAEA0C,sBAAsBC,GACpB,MAAMhG,EAAOvJ,KAAKqK,YACZkD,EAAUvN,KAAKwN,aACrB,IAAIgC,GAAe,EAEnBxP,KAAKgP,aAGL,MAAMS,EAAalG,EAAKyD,SACxBzD,EAAKyD,SAAW1D,EAAUC,EAAKQ,OAAQR,GAGnCA,EAAKT,QAAUyE,EAAQzE,QACzB0G,GAAe,EAEfnE,EAAY9B,GACZA,EAAKT,MAAQyE,EAAQzE,OAKvB9I,KAAK0P,gBAAgBH,IAGjBC,GAAgBC,IAAelG,EAAKyD,WACtC9C,EAAalK,KAAMuJ,EAAK+B,QAE5B,CAMAhF,YACE,MAAMF,EAASpG,KAAK/F,MAAMmM,OACpBuJ,EAAYvJ,EAAOwJ,iBAAiB5P,KAAKiM,OACzC4D,EAASzJ,EAAO0J,gBAAgB9P,KAAKwN,aAAcmC,GAAW,GACpE3P,KAAKzG,QAAU6M,EAAO2J,eAAeF,EAAQ7P,KAAKgQ,cAClDhQ,KAAKkM,SAAWlM,KAAKzG,QAAQ0W,QAC7BjQ,KAAK+L,gBAAkB,EACzB,CAMAtT,MAAM0I,EAAO+O,GACX,MAAO7F,YAAad,EAAM4C,MAAO5T,GAAQyH,MACnCuK,OAACA,WAAQyC,GAAYzD,EACrBiB,EAAQD,EAAOE,KAErB,IAEIvR,EAAG8J,EAAKoH,EAFR+F,EAAmB,IAAVhP,GAAe+O,IAAU3X,EAAKS,QAAgBuQ,EAAK6G,QAC5DC,EAAOlP,EAAQ,GAAKoI,EAAK+B,QAAQnK,EAAQ,GAG7C,IAAsB,IAAlBnB,KAAKkM,SACP3C,EAAK+B,QAAU/S,EACfgR,EAAK6G,SAAU,EACfhG,EAAS7R,MACJ,CAEH6R,GADErD,OAAQxO,EAAK4I,IACNnB,KAAKsQ,eAAe/G,EAAMhR,EAAM4I,EAAO+O,IACvC3J,OAAShO,EAAK4I,IACdnB,KAAKuQ,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GAExClQ,KAAKwQ,mBAAmBjH,EAAMhR,EAAM4I,EAAO+O,GAGtD,MAAMO,EAA6B,IAAqB,OAAfzN,EAAIwH,IAAoB6F,GAAQrN,EAAIwH,GAAS6F,EAAK7F,GAC3F,IAAKtR,EAAI,EAAGA,EAAIgX,IAAShX,EACvBqQ,EAAK+B,QAAQpS,EAAIiI,GAAS6B,EAAMoH,EAAOlR,GACnCiX,IACEM,MACFN,GAAS,GAEXE,EAAOrN,GAGXuG,EAAK6G,QAAUD,CAChB,CAEGnD,GACF9C,EAAalK,KAAMoK,EAEvB,CAaAoG,mBAAmBjH,EAAMhR,EAAM4I,EAAO+O,GACpC,MAAM3F,OAACA,SAAQR,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfnR,EAASiR,EAAOmG,YAChBC,EAAcpG,IAAWR,EACzBK,EAAS,IAAI8E,MAAMgB,GACzB,IAAIhX,EAAGyP,EAAMC,EAEb,IAAK1P,EAAI,EAAGyP,EAAOuH,EAAOhX,EAAIyP,IAAQzP,EACpC0P,EAAQ1P,EAAIiI,EACZiJ,EAAOlR,GAAK,CACVsR,CAACA,GAAQmG,GAAepG,EAAO9R,MAAMa,EAAOsP,GAAQA,GACpD8B,CAACA,GAAQX,EAAOtR,MAAMF,EAAKqQ,GAAQA,IAGvC,OAAOwB,CACT,CAaAkG,eAAe/G,EAAMhR,EAAM4I,EAAO+O,GAChC,MAAM5B,OAACA,SAAQE,GAAUjF,EACnBa,EAAS,IAAI8E,MAAMgB,GACzB,IAAIhX,EAAGyP,EAAMC,EAAO/G,EAEpB,IAAK3I,EAAI,EAAGyP,EAAOuH,EAAOhX,EAAIyP,IAAQzP,EACpC0P,EAAQ1P,EAAIiI,EACZU,EAAOtJ,EAAKqQ,GACZwB,EAAOlR,GAAK,CACVwU,EAAGY,EAAO7V,MAAMoJ,EAAK,GAAI+G,GACzBzO,EAAGqU,EAAO/V,MAAMoJ,EAAK,GAAI+G,IAG7B,OAAOwB,CACT,CAaAmG,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,MAAM5B,OAACA,SAAQE,GAAUjF,GACnBqH,SAACA,EAAW,IAAAC,SAAKA,EAAW,KAAO7Q,KAAKkM,SACxC9B,EAAS,IAAI8E,MAAMgB,GACzB,IAAIhX,EAAGyP,EAAMC,EAAO/G,EAEpB,IAAK3I,EAAI,EAAGyP,EAAOuH,EAAOhX,EAAIyP,IAAQzP,EACpC0P,EAAQ1P,EAAIiI,EACZU,EAAOtJ,EAAKqQ,GACZwB,EAAOlR,GAAK,CACVwU,EAAGY,EAAO7V,OAAMqY,OAAiBjP,EAAM+O,GAAWhI,GAClDzO,EAAGqU,EAAO/V,OAAMqY,OAAiBjP,EAAMgP,GAAWjI,IAGtD,OAAOwB,CACT,CAKA2G,UAAUnI,GACR,OAAO5I,KAAKqK,YAAYiB,QAAQ1C,EAClC,CAKAoI,eAAepI,GACb,OAAO5I,KAAKqK,YAAY9R,KAAKqQ,EAC/B,CAKAC,WAAWX,EAAOkC,EAAQnB,GACxB,MAAMhP,EAAQ+F,KAAK/F,MACbsP,EAAOvJ,KAAKqK,YACZ/N,EAAQ8N,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACZ/M,KAAMyM,EAAwBtO,GAAO,GACrCiN,OAAQkD,EAAOE,QAAQpC,EAAMuC,MAAMQ,eAEZ3O,EAAOiN,EAAKX,MAAO,CAACK,QAC/C,CAKAgI,sBAAsBC,EAAOhJ,EAAOkC,EAAQtB,GAC1C,MAAMqI,EAAc/G,EAAOlC,EAAMuC,MACjC,IAAInO,EAAwB,OAAhB6U,EAAuBC,IAAMD,EACzC,MAAMjK,EAAS4B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS5B,IACX4B,EAAM5B,OAASA,EACf5K,EAAQuM,EAAWC,EAAOqI,EAAanR,KAAKqK,YAAYzB,QAE1DsI,EAAMhQ,IAAMD,KAAKC,IAAIgQ,EAAMhQ,IAAK5E,GAChC4U,EAAMjO,IAAMhC,KAAKgC,IAAIiO,EAAMjO,IAAK3G,EAClC,CAKA+U,UAAUnJ,EAAOoJ,GACf,MAAM/H,EAAOvJ,KAAKqK,YACZiB,EAAU/B,EAAK+B,QACf6E,EAAS5G,EAAK6G,SAAWlI,IAAUqB,EAAKgB,OACxC5B,EAAO2C,EAAQtS,OACfuY,EAAavR,KAAK4O,eAAe1G,GACjCY,EA3YU,EAACwI,EAAU/H,EAAMtP,IAAUqX,IAAa/H,EAAKiI,QAAUjI,EAAKyD,UAC3E,CAAClR,KAAMyM,EAAwBtO,GAAO,GAAOiN,OAAQ,MA0YxCuK,CAAYH,EAAU/H,EAAMvJ,KAAK/F,OACzCiX,EAAQ,CAAChQ,IAAKwQ,OAAOC,kBAAmB1O,IAAKyO,OAAOE,oBACnD1Q,IAAK2Q,EAAU5O,IAAK6O,GApf/B,SAAuB5J,GACrB,MAAMhH,IAACA,EAAG+B,IAAEA,EAAG8O,WAAEA,EAAUC,WAAEA,GAAc9J,EAAM+J,gBACjD,MAAO,CACL/Q,IAAK6Q,EAAa7Q,EAAMwQ,OAAOE,kBAC/B3O,IAAK+O,EAAa/O,EAAMyO,OAAOC,kBAEnC,CA8e2CM,CAAcV,GACrD,IAAIrY,EAAGkR,EAEP,SAAS8H,IACP9H,EAASkB,EAAQpS,GACjB,MAAMiQ,EAAaiB,EAAOmH,EAAW9G,MACrC,QAAQrB,OAASgB,EAAOlC,EAAMuC,QAAUoH,EAAW1I,GAAc2I,EAAW3I,CAC9E,CAEA,IAAKjQ,EAAI,EAAGA,EAAIyP,IACVuJ,MAGJlS,KAAKiR,sBAAsBC,EAAOhJ,EAAOkC,EAAQtB,IAC7CqH,MALkBjX,GAUxB,GAAIiX,EAEF,IAAKjX,EAAIyP,EAAO,EAAGzP,GAAK,IAAKA,EAC3B,IAAIgZ,IAAJ,CAGAlS,KAAKiR,sBAAsBC,EAAOhJ,EAAOkC,EAAQtB,GACjD,KAHW,CAMf,OAAOoI,CACT,CAEAiB,mBAAmBjK,GACjB,MAAMkC,EAASpK,KAAKqK,YAAYiB,QAC1BpE,EAAS,GACf,IAAIhO,EAAGyP,EAAMrM,EAEb,IAAKpD,EAAI,EAAGyP,EAAOyB,EAAOpR,OAAQE,EAAIyP,IAAQzP,EAC5CoD,EAAQ8N,EAAOlR,GAAGgP,EAAMuC,OACpBrB,OAAS9M,IACX4K,EAAOjO,KAAKqD,GAGhB,OAAO4K,CACT,CAMAkL,iBACE,OAAO,CACT,CAKAC,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAASpK,KAAK+Q,UAAUnI,GAC9B,MAAO,CACLzP,MAAOoR,EAAS,GAAKA,EAAO+H,iBAAiBlI,EAAOG,EAAOE,OAAS,GACpEnO,MAAOyN,EAAS,GAAKA,EAAOuI,iBAAiBlI,EAAOL,EAAOU,OAAS,GAExE,CAKAlJ,QAAQ0H,GACN,MAAMM,EAAOvJ,KAAKqK,YAClBrK,KAAKtF,OAAOuO,GAAQ,WACpBM,EAAKgJ,MA9oBT,SAAgBjW,GACd,IAAIkW,EAAG7U,EAAGiB,EAAGI,EAWb,OATIuH,OAASjK,IACXkW,EAAIlW,EAAMmW,IACV9U,EAAIrB,EAAMoW,MACV9T,EAAItC,EAAMqW,OACV3T,EAAI1C,EAAMsW,MAEVJ,EAAI7U,EAAIiB,EAAII,EAAI1C,EAGX,CACLmW,IAAKD,EACLE,MAAO/U,EACPgV,OAAQ/T,EACRgU,KAAM5T,EACN6T,UAAoB,IAAVvW,EAEd,CA2nBiBwW,EAAOjF,OAAe7N,KAAKzG,QAAQwZ,KA7pBpD,SAAqBzE,EAAQE,EAAQrG,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMuF,EAAIzF,EAAUqG,EAAQnG,GACtBhO,EAAI8N,EAAUuG,EAAQrG,GAE5B,MAAO,CACLsK,IAAKtY,EAAEmO,IACPoK,MAAOhF,EAAEpF,IACTqK,OAAQxY,EAAEgH,MACVyR,KAAMlF,EAAEvM,MAEZ,CAgpB0D6R,CAAYzJ,EAAK+E,OAAQ/E,EAAKiF,OAAQxO,KAAKoS,mBACnG,CAKA1X,OAAOuO,GAAM,CAEbnH,OACE,MAAMgK,EAAM9L,KAAK6L,KACX5R,EAAQ+F,KAAK/F,MACbsP,EAAOvJ,KAAKqK,YACZ4I,EAAW1J,EAAKhR,MAAQ,GACxB2a,EAAOjZ,EAAMkZ,UACb1N,EAAS,GACTtE,EAAQnB,KAAKsM,YAAc,EAC3B4D,EAAQlQ,KAAKuM,YAAe0G,EAASja,OAASmI,EAC9CiS,EAA0BpT,KAAKzG,QAAQ6Z,wBAC7C,IAAIla,EAMJ,IAJIqQ,EAAKgE,SACPhE,EAAKgE,QAAQzL,KAAKgK,EAAKoH,EAAM/R,EAAO+O,GAGjChX,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,IAAShX,EAAG,CACtC,MAAMma,EAAUJ,EAAS/Z,GACrBma,EAAQ7B,SAGR6B,EAAQ5N,QAAU2N,EACpB3N,EAAOxM,KAAKoa,GAEZA,EAAQvR,KAAKgK,EAAKoH,GAEtB,CAEA,IAAKha,EAAI,EAAGA,EAAIuM,EAAOzM,SAAUE,EAC/BuM,EAAOvM,GAAG4I,KAAKgK,EAAKoH,EAExB,CASAI,SAAS1K,EAAOnD,GACd,MAAMwD,EAAOxD,EAAS,SAAW,UACjC,YAAiBlI,IAAVqL,GAAuB5I,KAAKqK,YAAYkD,QAC3CvN,KAAKuT,6BAA6BtK,GAClCjJ,KAAKwT,0BAA0B5K,GAAS,EAAGK,EACjD,CAKA+G,WAAWpH,EAAOnD,EAAQwD,GACxB,MAAMsE,EAAUvN,KAAKwN,aACrB,IAAIiG,EACJ,GAAI7K,GAAS,GAAKA,EAAQ5I,KAAKqK,YAAY9R,KAAKS,OAAQ,CACtD,MAAMqa,EAAUrT,KAAKqK,YAAY9R,KAAKqQ,GACtC6K,EAAUJ,EAAQ3G,WACf2G,EAAQ3G,SA3jBjB,SAA2BgH,EAAQ9K,EAAOyK,GACxC,OAAOM,OAAcD,EAAQ,CAC3BjO,QAAQ,EACRmO,UAAWhL,EACXwB,YAAQ7M,EACRsW,SAAKtW,EACL8V,UACAzK,QACAK,KAAM,UACN5P,KAAM,QAEV,CAgjB4Bya,CAAkB9T,KAAKgQ,aAAcpH,EAAOyK,IAClEI,EAAQrJ,OAASpK,KAAK+Q,UAAUnI,GAChC6K,EAAQI,IAAMtG,EAAQhV,KAAKqQ,GAC3B6K,EAAQ7K,MAAQ6K,EAAQG,UAAYhL,CAC/B,MACL6K,EAAUzT,KAAK0M,WACZ1M,KAAK0M,SA9kBd,SAA8BgH,EAAQ9K,GACpC,OAAO+K,OAAcD,EACnB,CACEjO,QAAQ,EACR8H,aAAShQ,EACT2L,aAAcN,EACdA,QACAK,KAAM,UACN5P,KAAM,WAGZ,CAmkByB0a,CAAqB/T,KAAK/F,MAAM+V,aAAchQ,KAAK4I,QACtE6K,EAAQlG,QAAUA,EAClBkG,EAAQ7K,MAAQ6K,EAAQvK,aAAelJ,KAAK4I,MAK9C,OAFA6K,EAAQhO,SAAWA,EACnBgO,EAAQxK,KAAOA,EACRwK,CACT,CAMAF,6BAA6BtK,GAC3B,OAAOjJ,KAAKgU,uBAAuBhU,KAAK4M,mBAAmB/B,GAAI5B,EACjE,CAOAuK,0BAA0B5K,EAAOK,GAC/B,OAAOjJ,KAAKgU,uBAAuBhU,KAAK6M,gBAAgBhC,GAAI5B,EAAML,EACpE,CAKAoL,uBAAuBC,EAAahL,EAAO,UAAWL,GACpD,MAAMnD,EAAkB,WAATwD,EACTiL,EAAQlU,KAAK+L,gBACboI,EAAWF,EAAc,IAAMhL,EAC/BwC,EAASyI,EAAMC,GACfC,EAAUpU,KAAKwM,sBAAuB6H,OAAQzL,GACpD,GAAI6C,EACF,OAAOD,EAAiBC,EAAQ2I,GAElC,MAAMhO,EAASpG,KAAK/F,MAAMmM,OACpBuJ,EAAYvJ,EAAOkO,wBAAwBtU,KAAKiM,MAAOgI,GACvDM,EAAW9O,EAAS,CAAC,GAAGwO,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFpE,EAASzJ,EAAO0J,gBAAgB9P,KAAKwN,aAAcmC,GACnD6E,EAAQ3Y,OAAOC,KAAK2K,IAASwM,SAASgB,IAItC/M,EAASd,EAAOqO,oBAAoB5E,EAAQ2E,GADlC,IAAMxU,KAAKgQ,WAAWpH,EAAOnD,EAAQwD,IACasL,GAalE,OAXIrN,EAAOE,UAGTF,EAAOE,QAAUgN,EAKjBF,EAAMC,GAAYtY,OAAO6Y,OAAOlJ,EAAiBtE,EAAQkN,KAGpDlN,CACT,CAMAyN,mBAAmB/L,EAAOgM,EAAYnP,GACpC,MAAMxL,EAAQ+F,KAAK/F,MACbia,EAAQlU,KAAK+L,gBACboI,EAAW,aAAaS,IACxBnJ,EAASyI,EAAMC,GACrB,GAAI1I,EACF,OAAOA,EAET,IAAIlS,EACJ,IAAgC,IAA5BU,EAAMV,QAAQmN,UAAqB,CACrC,MAAMN,EAASpG,KAAK/F,MAAMmM,OACpBuJ,EAAYvJ,EAAOyO,0BAA0B7U,KAAKiM,MAAO2I,GACzD/E,EAASzJ,EAAO0J,gBAAgB9P,KAAKwN,aAAcmC,GACzDpW,EAAU6M,EAAO2J,eAAeF,EAAQ7P,KAAKgQ,WAAWpH,EAAOnD,EAAQmP,GACxE,CACD,MAAMpN,EAAa,IAAIrB,EAAWlM,EAAOV,GAAWA,EAAQiO,YAI5D,OAHIjO,GAAWA,EAAQub,aACrBZ,EAAMC,GAAYtY,OAAO6Y,OAAOlN,IAE3BA,CACT,CAMAuN,iBAAiBxb,GACf,GAAKA,EAAQ6N,QAGb,OAAOpH,KAAKqM,iBAAmBrM,KAAKqM,eAAiBxQ,OAAOwL,OAAO,GAAI9N,GACzE,CAMAyb,eAAe/L,EAAMgM,GACnB,OAAQA,GAAiB1J,EAAmBtC,IAASjJ,KAAK/F,MAAMib,mBAClE,CAKAC,kBAAkBhU,EAAO8H,GACvB,MAAMmM,EAAYpV,KAAKwT,0BAA0BrS,EAAO8H,GAClDoM,EAA0BrV,KAAKqM,eAC/B4I,EAAgBjV,KAAK+U,iBAAiBK,GACtCJ,EAAiBhV,KAAKgV,eAAe/L,EAAMgM,IAAmBA,IAAkBI,EAEtF,OADArV,KAAKsV,oBAAoBL,EAAehM,EAAMmM,GACvC,CAACH,gBAAeD,iBACzB,CAMAO,cAAclC,EAASzK,EAAO5B,EAAYiC,GACpCsC,EAAmBtC,GACrBpN,OAAOwL,OAAOgM,EAASrM,GAEvBhH,KAAK2U,mBAAmB/L,EAAOK,GAAMvO,OAAO2Y,EAASrM,EAEzD,CAMAsO,oBAAoBL,EAAehM,EAAM9B,GACnC8N,IAAkB1J,EAAmBtC,IACvCjJ,KAAK2U,wBAAmBpX,EAAW0L,GAAMvO,OAAOua,EAAe9N,EAEnE,CAKAqO,UAAUnC,EAASzK,EAAOK,EAAMxD,GAC9B4N,EAAQ5N,OAASA,EACjB,MAAMlM,EAAUyG,KAAKsT,SAAS1K,EAAOnD,GACrCzF,KAAK2U,mBAAmB/L,EAAOK,EAAMxD,GAAQ/K,OAAO2Y,EAAS,CAG3D9Z,SAAWkM,GAAUzF,KAAK+U,iBAAiBxb,IAAaA,GAE5D,CAEAkc,iBAAiBpC,EAASnK,EAAcN,GACtC5I,KAAKwV,UAAUnC,EAASzK,EAAO,UAAU,EAC3C,CAEA8M,cAAcrC,EAASnK,EAAcN,GACnC5I,KAAKwV,UAAUnC,EAASzK,EAAO,UAAU,EAC3C,CAKA+M,2BACE,MAAMtC,EAAUrT,KAAKqK,YAAYkD,QAE7B8F,GACFrT,KAAKwV,UAAUnC,OAAS9V,EAAW,UAAU,EAEjD,CAKAqY,wBACE,MAAMvC,EAAUrT,KAAKqK,YAAYkD,QAE7B8F,GACFrT,KAAKwV,UAAUnC,OAAS9V,EAAW,UAAU,EAEjD,CAKAmS,gBAAgBH,GACd,MAAMhX,EAAOyH,KAAKmM,MACZ8G,EAAWjT,KAAKqK,YAAY9R,KAGlC,IAAK,MAAO2N,EAAQ2P,EAAMC,KAAS9V,KAAK2M,UACtC3M,KAAKkG,GAAQ2P,EAAMC,GAErB9V,KAAK2M,UAAY,GAEjB,MAAMoJ,EAAU9C,EAASja,OACnBgd,EAAUzd,EAAKS,OACfkX,EAAQjP,KAAKC,IAAI8U,EAASD,GAE5B7F,GAKFlQ,KAAKvH,MAAM,EAAGyX,GAGZ8F,EAAUD,EACZ/V,KAAKiW,gBAAgBF,EAASC,EAAUD,EAASxG,GACxCyG,EAAUD,GACnB/V,KAAKkW,gBAAgBF,EAASD,EAAUC,EAE5C,CAKAC,gBAAgB9U,EAAO+O,EAAOX,GAAmB,GAC/C,MAAMhG,EAAOvJ,KAAKqK,YACZ9R,EAAOgR,EAAKhR,KACZ+P,EAAMnH,EAAQ+O,EACpB,IAAIhX,EAEJ,MAAMid,EAAQC,IAEZ,IADAA,EAAIpd,QAAUkX,EACThX,EAAIkd,EAAIpd,OAAS,EAAGE,GAAKoP,EAAKpP,IACjCkd,EAAIld,GAAKkd,EAAIld,EAAIgX,EAAM,EAK3B,IAFAiG,EAAK5d,GAEAW,EAAIiI,EAAOjI,EAAIoP,IAAOpP,EACzBX,EAAKW,GAAK,IAAI8G,KAAK6M,gBAGjB7M,KAAKkM,UACPiK,EAAK5M,EAAK+B,SAEZtL,KAAKvH,MAAM0I,EAAO+O,GAEdX,GACFvP,KAAKqW,eAAe9d,EAAM4I,EAAO+O,EAAO,QAE5C,CAEAmG,eAAehD,EAASlS,EAAO+O,EAAOjH,GAAM,CAK5CiN,gBAAgB/U,EAAO+O,GACrB,MAAM3G,EAAOvJ,KAAKqK,YAClB,GAAIrK,KAAKkM,SAAU,CACjB,MAAMoK,EAAU/M,EAAK+B,QAAQiL,OAAOpV,EAAO+O,GACvC3G,EAAKyD,UACP3B,EAAY9B,EAAM+M,EAErB,CACD/M,EAAKhR,KAAKge,OAAOpV,EAAO+O,EAC1B,CAKAsG,MAAMC,GACJ,GAAIzW,KAAKkM,SACPlM,KAAK2M,UAAU1T,KAAKwd,OACf,CACL,MAAOvQ,EAAQ2P,EAAMC,GAAQW,EAC7BzW,KAAKkG,GAAQ2P,EAAMC,EACpB,CACD9V,KAAK/F,MAAMyc,aAAazd,KAAK,CAAC+G,KAAK4I,SAAU6N,GAC/C,CAEAE,cACE,MAAMzG,EAAQ0G,UAAU5d,OACxBgH,KAAKwW,MAAM,CAAC,kBAAmBxW,KAAKwN,aAAajV,KAAKS,OAASkX,EAAOA,GACxE,CAEA2G,aACE7W,KAAKwW,MAAM,CAAC,kBAAmBxW,KAAKqK,YAAY9R,KAAKS,OAAS,EAAG,GACnE,CAEA8d,eACE9W,KAAKwW,MAAM,CAAC,kBAAmB,EAAG,GACpC,CAEAO,cAAc5V,EAAO+O,GACfA,GACFlQ,KAAKwW,MAAM,CAAC,kBAAmBrV,EAAO+O,IAExC,MAAM8G,EAAWJ,UAAU5d,OAAS,EAChCge,GACFhX,KAAKwW,MAAM,CAAC,kBAAmBrV,EAAO6V,GAE1C,CAEAC,iBACEjX,KAAKwW,MAAM,CAAC,kBAAmB,EAAGI,UAAU5d,QAC9C,EChhCF,SAASke,EAAqB3N,GAC5B,MAAMrB,EAAQqB,EAAKgB,OACbrD,EAnBR,SAA2BgB,EAAO7O,GAChC,IAAK6O,EAAMiP,OAAOC,KAAM,CACtB,MAAMC,EAAenP,EAAM+B,wBAAwB5Q,GACnD,IAAI6N,EAAS,GAEb,IAAK,IAAIhO,EAAI,EAAGyP,EAAO0O,EAAare,OAAQE,EAAIyP,EAAMzP,IACpDgO,EAASA,EAAOoQ,OAAOD,EAAane,GAAGiR,WAAWgI,mBAAmBjK,IAEvEA,EAAMiP,OAAOC,MAAOG,OAAarQ,EAAOlL,MAAK,CAAC2C,EAAGC,IAAMD,EAAIC,IAC5D,CACD,OAAOsJ,EAAMiP,OAAOC,IACtB,CAQiBI,CAAkBtP,EAAOqB,EAAKlQ,MAC7C,IACIH,EAAGyP,EAAM8O,EAAMpH,EADfnP,EAAMgH,EAAMwP,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA2B,QAATA,KAIlBpD,OAAQhE,KAEVnP,EAAMD,KAAKC,IAAIA,EAAKD,KAAK2W,IAAIH,EAAOpH,IAASnP,IAE/CmP,EAAOoH,IAGT,IAAKve,EAAI,EAAGyP,EAAOzB,EAAOlO,OAAQE,EAAIyP,IAAQzP,EAC5Cue,EAAOvP,EAAM2P,iBAAiB3Q,EAAOhO,IACrCye,IAIF,IADAtH,OAAO9S,EACFrE,EAAI,EAAGyP,EAAOT,EAAM9N,MAAMpB,OAAQE,EAAIyP,IAAQzP,EACjDue,EAAOvP,EAAM4P,gBAAgB5e,GAC7Bye,IAGF,OAAOzW,CACT,CA2FA,SAAS6W,EAAWC,EAAOnW,EAAMkI,EAAQ7Q,GAMvC,OALI6N,OAAQiR,GA5Bd,SAAuBA,EAAOnW,EAAMkI,EAAQ7Q,GAC1C,MAAM+e,EAAalO,EAAOtR,MAAMuf,EAAM,GAAI9e,GACpCgf,EAAWnO,EAAOtR,MAAMuf,EAAM,GAAI9e,GAClCgI,EAAMD,KAAKC,IAAI+W,EAAYC,GAC3BjV,EAAMhC,KAAKgC,IAAIgV,EAAYC,GACjC,IAAIC,EAAWjX,EACXkX,EAASnV,EAEThC,KAAK2W,IAAI1W,GAAOD,KAAK2W,IAAI3U,KAC3BkV,EAAWlV,EACXmV,EAASlX,GAKXW,EAAKkI,EAAOU,MAAQ2N,EAEpBvW,EAAKwW,QAAU,CACbF,WACAC,SACAjX,MAAO8W,EACP3P,IAAK4P,EACLhX,MACA+B,MAEJ,CAIIqV,CAAcN,EAAOnW,EAAMkI,EAAQ7Q,GAEnC2I,EAAKkI,EAAOU,MAAQV,EAAOtR,MAAMuf,EAAO9e,GAEnC2I,CACT,CAEA,SAAS0W,EAAsBhP,EAAMhR,EAAM4I,EAAO+O,GAChD,MAAM3F,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdzQ,EAASiR,EAAOmG,YAChBC,EAAcpG,IAAWR,EACzBK,EAAS,GACf,IAAIlR,EAAGyP,EAAM9G,EAAMmW,EAEnB,IAAK9e,EAAIiI,EAAOwH,EAAOxH,EAAQ+O,EAAOhX,EAAIyP,IAAQzP,EAChD8e,EAAQzf,EAAKW,GACb2I,EAAO,GACPA,EAAK0I,EAAOE,MAAQkG,GAAepG,EAAO9R,MAAMa,EAAOJ,GAAIA,GAC3DkR,EAAOnR,KAAK8e,EAAWC,EAAOnW,EAAMkI,EAAQ7Q,IAE9C,OAAOkR,CACT,CAEA,SAASoO,EAAWC,GAClB,OAAOA,QAA8Blb,IAApBkb,EAAON,eAA4C5a,IAAlBkb,EAAOL,MAC3D,CA8BA,SAASM,EAAiB1R,EAAYzN,EAASuP,EAAOF,GACpD,IAAI+P,EAAOpf,EAAQqf,cACnB,MAAM7S,EAAM,GAEZ,IAAK4S,EAEH,YADA3R,EAAW4R,cAAgB7S,GAI7B,IAAa,IAAT4S,EAEF,YADA3R,EAAW4R,cAAgB,CAACnG,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,IAI1E,MAAMzR,MAACA,MAAOmH,UAAKD,MAASoK,SAAKE,GAnCnC,SAAqB3L,GACnB,IAAIqB,EAASlH,EAAOmH,EAAKmK,EAAKE,EAiB9B,OAhBI3L,EAAW6R,YACbxQ,EAAUrB,EAAW8R,KAAO9R,EAAW0G,EACvCvM,EAAQ,OACRmH,EAAM,UAEND,EAAUrB,EAAW8R,KAAO9R,EAAW7M,EACvCgH,EAAQ,SACRmH,EAAM,OAEJD,GACFoK,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAACxR,QAAOmH,MAAKD,UAASoK,MAAKE,SACpC,CAgB6CoG,CAAY/R,GAE1C,WAAT2R,GAAqB7P,IACvB9B,EAAWgS,oBAAqB,GAC3BlQ,EAAMiC,MAAQ,KAAOnC,EACxB+P,EAAOlG,GACG3J,EAAMkC,SAAW,KAAOpC,EAClC+P,EAAOhG,GAEP5M,EAAIkT,EAAUtG,EAAQxR,EAAOmH,EAAKD,KAAY,EAC9CsQ,EAAOlG,IAIX1M,EAAIkT,EAAUN,EAAMxX,EAAOmH,EAAKD,KAAY,EAC5CrB,EAAW4R,cAAgB7S,CAC7B,CAEA,SAASkT,EAAUN,EAAMha,EAAGC,EAAGyJ,GAU/B,IAAc6Q,EAAMC,EAAIC,EAHtB,OANI/Q,GASkB+Q,EARCxa,EACrB+Z,EAAOU,EADPV,GAQUO,EAREP,MAQIQ,EARExa,GASCya,EAAKF,IAASE,EAAKD,EAAKD,EARrBta,EAAGD,IAEzBga,EAAOU,EAASV,EAAMha,EAAGC,GAEpB+Z,CACT,CAMA,SAASU,EAASC,EAAGnY,EAAOmH,GAC1B,MAAa,UAANgR,EAAgBnY,EAAc,QAANmY,EAAchR,EAAMgR,CACrD,CAEA,SAASC,EAAiBvS,GAAYwS,cAACA,GAAgBC,GACrDzS,EAAWwS,cAAkC,SAAlBA,EACb,IAAVC,EAAc,IAAO,EACrBD,CACN,CAEe,MAAME,UAAsB/N,EAEzCC,UAAY,MAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,MAEjB8M,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EAETrS,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAQ9C4E,iBAAmB,CACjBpS,OAAQ,CACNsgB,QAAS,CACPzgB,KAAM,WACN0gB,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACP5gB,KAAM,SACN6gB,aAAa,KAWnB1J,mBAAmBjH,EAAMhR,EAAM4I,EAAO+O,GACpC,OAAOqI,EAAsBhP,EAAMhR,EAAM4I,EAAO+O,EAClD,CAOAI,eAAe/G,EAAMhR,EAAM4I,EAAO+O,GAChC,OAAOqI,EAAsBhP,EAAMhR,EAAM4I,EAAO+O,EAClD,CAOAK,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,MAAM3F,OAACA,SAAQR,GAAUR,GACnBqH,SAACA,EAAW,IAAAC,SAAKA,EAAW,KAAO7Q,KAAKkM,SACxCiO,EAA2B,MAAhB5P,EAAOE,KAAemG,EAAWC,EAC5CuJ,EAA2B,MAAhBrQ,EAAOU,KAAemG,EAAWC,EAC5CzG,EAAS,GACf,IAAIlR,EAAGyP,EAAM9G,EAAMwY,EACnB,IAAKnhB,EAAIiI,EAAOwH,EAAOxH,EAAQ+O,EAAOhX,EAAIyP,IAAQzP,EAChDmhB,EAAM9hB,EAAKW,GACX2I,EAAO,GACPA,EAAK0I,EAAOE,MAAQF,EAAO9R,OAAMqY,OAAiBuJ,EAAKF,GAAWjhB,GAClEkR,EAAOnR,KAAK8e,GAAWjH,OAAiBuJ,EAAKD,GAAWvY,EAAMkI,EAAQ7Q,IAExE,OAAOkR,CACT,CAKA6G,sBAAsBC,EAAOhJ,EAAOkC,EAAQtB,GAC1CwR,MAAMrJ,sBAAsBC,EAAOhJ,EAAOkC,EAAQtB,GAClD,MAAM2P,EAASrO,EAAOiO,QAClBI,GAAUvQ,IAAUlI,KAAKqK,YAAYN,SAEvCmH,EAAMhQ,IAAMD,KAAKC,IAAIgQ,EAAMhQ,IAAKuX,EAAOvX,KACvCgQ,EAAMjO,IAAMhC,KAAKgC,IAAIiO,EAAMjO,IAAKwV,EAAOxV,KAE3C,CAMAmP,iBACE,OAAO,CACT,CAKAC,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,aACZE,OAACA,SAAQR,GAAUR,EACnBa,EAASpK,KAAK+Q,UAAUnI,GACxB6P,EAASrO,EAAOiO,QAChB/b,EAAQkc,EAAWC,GACrB,IAAMA,EAAOtX,MAAQ,KAAOsX,EAAOnQ,IAAM,IACzC,GAAKyB,EAAOuI,iBAAiBlI,EAAOL,EAAOU,OAE/C,MAAO,CACLtR,MAAO,GAAKoR,EAAO+H,iBAAiBlI,EAAOG,EAAOE,OAClDnO,QAEJ,CAEAwQ,aACE9M,KAAKwM,qBAAsB,EAE3B8N,MAAMxN,aAEO9M,KAAKqK,YACbvB,MAAQ9I,KAAKwN,aAAa1E,KACjC,CAEApO,OAAOuO,GACL,MAAMM,EAAOvJ,KAAKqK,YAClBrK,KAAKqW,eAAe9M,EAAKhR,KAAM,EAAGgR,EAAKhR,KAAKS,OAAQiQ,EACtD,CAEAoN,eAAekE,EAAMpZ,EAAO+O,EAAOjH,GACjC,MAAM4F,EAAiB,UAAT5F,GACRL,MAACA,EAAOyB,aAAaN,OAACA,IAAW/J,KACjC8Y,EAAO/O,EAAOyQ,eACd3B,EAAa9O,EAAO0Q,eACpBC,EAAQ1a,KAAK2a,aACb1F,cAACA,EAAaD,eAAEA,GAAkBhV,KAAKmV,kBAAkBhU,EAAO8H,GAEtE,IAAK,IAAI/P,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,EAAOhX,IAAK,CAC1C,MAAMkR,EAASpK,KAAK+Q,UAAU7X,GACxB0hB,EAAU/L,IAASgM,OAAczQ,EAAOL,EAAOU,OAAS,CAACqO,OAAMgC,KAAMhC,GAAQ9Y,KAAK+a,yBAAyB7hB,GAC3G8hB,EAAUhb,KAAKib,yBAAyB/hB,EAAGwhB,GAC3C5R,GAASsB,EAAOE,SAAW,IAAIP,EAAOU,MAEtCzD,EAAa,CACjB6R,aACAC,KAAM8B,EAAQ9B,KACdE,oBAAqBlQ,GAAS0P,EAAWpO,EAAOiO,UAAazP,IAAUE,EAAMiC,MAAQnC,IAAUE,EAAMkC,QACrG0C,EAAGmL,EAAa+B,EAAQE,KAAOE,EAAQE,OACvC/gB,EAAG0e,EAAamC,EAAQE,OAASN,EAAQE,KACzCK,OAAQtC,EAAamC,EAAQhT,KAAO/G,KAAK2W,IAAIgD,EAAQ5S,MACrDoT,MAAOvC,EAAa5X,KAAK2W,IAAIgD,EAAQ5S,MAAQgT,EAAQhT,MAGnDgN,IACFhO,EAAWzN,QAAU0b,GAAiBjV,KAAKwT,0BAA0Bta,EAAGqhB,EAAKrhB,GAAGuM,OAAS,SAAWwD,IAEtG,MAAM1P,EAAUyN,EAAWzN,SAAWghB,EAAKrhB,GAAGK,QAC9Cmf,EAAiB1R,EAAYzN,EAASuP,EAAOF,GAC7C2Q,EAAiBvS,EAAYzN,EAASmhB,EAAMjB,OAC5CzZ,KAAKuV,cAAcgF,EAAKrhB,GAAIA,EAAG8N,EAAYiC,EAC7C,CACF,CASAoS,WAAWC,EAAM1H,GACf,MAAMrJ,OAACA,GAAUvK,KAAKqK,YAChB5B,EAAW8B,EAAON,wBAAwBjK,KAAKiM,OAClDd,QAAO5B,GAAQA,EAAKY,WAAW5Q,QAAQsgB,UACpCrQ,EAAUe,EAAOhR,QAAQiQ,QACzBE,EAAS,GAET6R,EAAYhS,IAChB,MAAMa,EAASb,EAAKY,WAAW4G,UAAU6C,GACnC4H,EAAMpR,GAAUA,EAAOb,EAAKQ,OAAOU,MAEzC,IAAIoQ,OAAcW,IAAQC,MAAMD,GAC9B,OAAO,CAAI,EAIf,IAAK,MAAMjS,KAAQd,EACjB,SAAkBlL,IAAdqW,IAA2B2H,EAAShS,QASxB,IAAZC,IAAoD,IAA/BE,EAAOtN,QAAQmN,EAAKT,aAClCvL,IAAZiM,QAAwCjM,IAAfgM,EAAKT,QAC3BY,EAAOzQ,KAAKsQ,EAAKT,OAEfS,EAAKX,QAAU0S,GACjB,MAWJ,OAJK5R,EAAO1Q,QACV0Q,EAAOzQ,UAAKsE,GAGPmM,CACT,CAMAgS,eAAe9S,GACb,OAAO5I,KAAKqb,gBAAW9d,EAAWqL,GAAO5P,MAC3C,CAUA2iB,eAAezS,EAAc0S,EAAMhI,GACjC,MAAMlK,EAAS1J,KAAKqb,WAAWnS,EAAc0K,GACvChL,OAAkBrL,IAAVse,EACVnS,EAAOtN,QAAQwf,IACf,EAEJ,OAAkB,IAAVhT,EACJc,EAAO1Q,OAAS,EAChB4P,CACN,CAKA+R,YACE,MAAMvS,EAAOpI,KAAKzG,QACZgQ,EAAOvJ,KAAKqK,YACZE,EAAShB,EAAKgB,OACduR,EAAS,GACf,IAAI5iB,EAAGyP,EAEP,IAAKzP,EAAI,EAAGyP,EAAOY,EAAKhR,KAAKS,OAAQE,EAAIyP,IAAQzP,EAC/C4iB,EAAO7iB,KAAKsR,EAAOsN,iBAAiB7X,KAAK+Q,UAAU7X,GAAGqR,EAAOE,MAAOvR,IAGtE,MAAM6iB,EAAe3T,EAAK2T,aAG1B,MAAO,CACL7a,IAHU6a,GAAgB7E,EAAqB3N,GAI/CuS,SACA3a,MAAOoJ,EAAOyR,YACd1T,IAAKiC,EAAO0R,UACZC,WAAYlc,KAAK0b,iBACjBxT,MAAOqC,EACPsP,QAASzR,EAAKyR,QAEdJ,MAAOsC,EAAe,EAAI3T,EAAKuR,mBAAqBvR,EAAKwR,cAE7D,CAMAmB,yBAAyBnS,GACvB,MAAOyB,aAAaN,OAACA,WAAQiD,EAAUpE,MAAOM,GAAe3P,SAAUuf,KAAMqD,EAASC,aAAEA,IAAiBpc,KACnGqc,EAAaF,GAAa,EAC1B/R,EAASpK,KAAK+Q,UAAUnI,GACxB6P,EAASrO,EAAOiO,QAChBiE,EAAW9D,EAAWC,GAC5B,IAGIqC,EAAM9S,EAHN1L,EAAQ8N,EAAOL,EAAOU,MACtBtJ,EAAQ,EACRnI,EAASgU,EAAWhN,KAAK6I,WAAWkB,EAAQK,EAAQ4C,GAAY1Q,EAGhEtD,IAAWsD,IACb6E,EAAQnI,EAASsD,EACjBtD,EAASsD,GAGPggB,IACFhgB,EAAQmc,EAAON,SACfnf,EAASyf,EAAOL,OAASK,EAAON,SAElB,IAAV7b,IAAe+M,OAAK/M,MAAW+M,OAAKoP,EAAOL,UAC7CjX,EAAQ,GAEVA,GAAS7E,GAGX,MAAM2b,GAAc4C,OAAcsB,IAAeG,EAAuBnb,EAAZgb,EAC5D,IAAIrD,EAAO/O,EAAO8N,iBAAiBI,GAWnC,GARE6C,EADE9a,KAAK/F,MAAMsiB,kBAAkB3T,GACxBmB,EAAO8N,iBAAiB1W,EAAQnI,GAGhC8f,EAGT9Q,EAAO8S,EAAOhC,EAEV7X,KAAK2W,IAAI5P,GAAQoU,EAAc,CACjCpU,EArZN,SAAiBA,EAAM+B,EAAQsS,GAC7B,OAAa,IAATrU,GACKqB,OAAKrB,IAEN+B,EAAO0Q,eAAiB,GAAI,IAAO1Q,EAAO7I,KAAOmb,EAAa,GAAI,EAC5E,CAgZaG,CAAQxU,EAAM+B,EAAQsS,GAAcD,EACvC9f,IAAU+f,IACZvD,GAAQ9Q,EAAO,GAEjB,MAAMyU,EAAa1S,EAAO2S,mBAAmB,GACvCC,EAAW5S,EAAO2S,mBAAmB,GACrCxb,EAAMD,KAAKC,IAAIub,EAAYE,GAC3B1Z,EAAMhC,KAAKgC,IAAIwZ,EAAYE,GACjC7D,EAAO7X,KAAKgC,IAAIhC,KAAKC,IAAI4X,EAAM7V,GAAM/B,GACrC4Z,EAAOhC,EAAO9Q,EAEVgF,IAAasP,IAEflS,EAAOE,QAAQP,EAAOU,MAAMQ,cAAc/B,GAAgBa,EAAO6S,iBAAiB9B,GAAQ/Q,EAAO6S,iBAAiB9D,GAErH,CAED,GAAIA,IAAS/O,EAAO8N,iBAAiBwE,GAAa,CAChD,MAAMQ,GAAWxT,OAAKrB,GAAQ+B,EAAO+S,qBAAqBT,GAAc,EACxEvD,GAAQ+D,EACR7U,GAAQ6U,CACT,CAED,MAAO,CACL7U,OACA8Q,OACAgC,OACAI,OAAQJ,EAAO9S,EAAO,EAE1B,CAKAiT,yBAAyBrS,EAAO8R,GAC9B,MAAMxS,EAAQwS,EAAMxS,MACd3O,EAAUyG,KAAKzG,QACfgiB,EAAWhiB,EAAQgiB,SACnBwB,GAAkBlP,OAAetU,EAAQwjB,gBAAiBC,KAChE,IAAI9B,EAAQlT,EACZ,GAAI0S,EAAMb,QAAS,CACjB,MAAMqC,EAAaX,EAAWvb,KAAK0b,eAAe9S,GAAS8R,EAAMwB,WAC3DhL,EAAiC,SAAzB3X,EAAQwiB,aAphB5B,SAAmCnT,EAAO8R,EAAOnhB,EAAS2iB,GACxD,MAAMJ,EAASpB,EAAMoB,OACfrE,EAAOqE,EAAOlT,GACpB,IAAIyH,EAAOzH,EAAQ,EAAIkT,EAAOlT,EAAQ,GAAK,KACvCqU,EAAOrU,EAAQkT,EAAO9iB,OAAS,EAAI8iB,EAAOlT,EAAQ,GAAK,KAC3D,MAAMsU,EAAU3jB,EAAQogB,mBAEX,OAATtJ,IAGFA,EAAOoH,GAAiB,OAATwF,EAAgBvC,EAAMpS,IAAMoS,EAAMvZ,MAAQ8b,EAAOxF,IAGrD,OAATwF,IAEFA,EAAOxF,EAAOA,EAAOpH,GAGvB,MAAMlP,EAAQsW,GAAQA,EAAOxW,KAAKC,IAAImP,EAAM4M,IAAS,EAAIC,EAGzD,MAAO,CACLC,MAHWlc,KAAK2W,IAAIqF,EAAO5M,GAAQ,EAAI6M,EAGzBhB,EACdzC,MAAOlgB,EAAQqgB,cACfzY,QAEJ,CA2fUic,CAA0BxU,EAAO8R,EAAOnhB,EAAS2iB,GAjjB3D,SAAkCtT,EAAO8R,EAAOnhB,EAAS2iB,GACvD,MAAMmB,EAAY9jB,EAAQwiB,aAC1B,IAAI/T,EAAMyR,EAaV,OAXIoB,OAAcwC,IAChBrV,EAAO0S,EAAMxZ,IAAM3H,EAAQogB,mBAC3BF,EAAQlgB,EAAQqgB,gBAKhB5R,EAAOqV,EAAYnB,EACnBzC,EAAQ,GAGH,CACL0D,MAAOnV,EAAOkU,EACdzC,QACAtY,MAAOuZ,EAAMoB,OAAOlT,GAAUZ,EAAO,EAEzC,CA8hBUsV,CAAyB1U,EAAO8R,EAAOnhB,EAAS2iB,GAE9CqB,EAAavd,KAAK2b,eAAe3b,KAAK4I,MAAO5I,KAAKqK,YAAYvB,MAAOyS,EAAW3S,OAAQrL,GAC9F2d,EAAShK,EAAM/P,MAAS+P,EAAMiM,MAAQI,EAAerM,EAAMiM,MAAQ,EACnEnV,EAAO/G,KAAKC,IAAI6b,EAAiB7L,EAAMiM,MAAQjM,EAAMuI,MAChD,MAELyB,EAAShT,EAAM2P,iBAAiB7X,KAAK+Q,UAAUnI,GAAOV,EAAMuC,MAAO7B,GACnEZ,EAAO/G,KAAKC,IAAI6b,EAAiBrC,EAAMxZ,IAAMwZ,EAAMjB,OAGrD,MAAO,CACLX,KAAMoC,EAASlT,EAAO,EACtB8S,KAAMI,EAASlT,EAAO,EACtBkT,SACAlT,OAEJ,CAEAlG,OACE,MAAMyH,EAAOvJ,KAAKqK,YACZN,EAASR,EAAKQ,OACdyT,EAAQjU,EAAKhR,KACboQ,EAAO6U,EAAMxkB,OACnB,IAAIE,EAAI,EAER,KAAOA,EAAIyP,IAAQzP,EACsB,OAAnC8G,KAAK+Q,UAAU7X,GAAG6Q,EAAOU,OAC3B+S,EAAMtkB,GAAG4I,KAAK9B,KAAK6L,KAGzB,EC1oBa,MAAM4R,UAAyB9R,EAE5CC,UAAY,SAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,QAEjBrF,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,IAAK,IAAK,cAAe,aAQ5C4E,iBAAmB,CACjBpS,OAAQ,CACNkU,EAAG,CACDrU,KAAM,UAERc,EAAG,CACDd,KAAM,YAKZyT,aACE9M,KAAKwM,qBAAsB,EAC3B8N,MAAMxN,YACR,CAMA0D,mBAAmBjH,EAAMhR,EAAM4I,EAAO+O,GACpC,MAAM9F,EAASkQ,MAAM9J,mBAAmBjH,EAAMhR,EAAM4I,EAAO+O,GAC3D,IAAK,IAAIhX,EAAI,EAAGA,EAAIkR,EAAOpR,OAAQE,IACjCkR,EAAOlR,GAAGmf,QAAUrY,KAAKwT,0BAA0Bta,EAAIiI,GAAOuc,OAEhE,OAAOtT,CACT,CAMAkG,eAAe/G,EAAMhR,EAAM4I,EAAO+O,GAChC,MAAM9F,EAASkQ,MAAMhK,eAAe/G,EAAMhR,EAAM4I,EAAO+O,GACvD,IAAK,IAAIhX,EAAI,EAAGA,EAAIkR,EAAOpR,OAAQE,IAAK,CACtC,MAAM2I,EAAOtJ,EAAK4I,EAAQjI,GAC1BkR,EAAOlR,GAAGmf,SAAUxK,OAAehM,EAAK,GAAI7B,KAAKwT,0BAA0Bta,EAAIiI,GAAOuc,OACxF,CACA,OAAOtT,CACT,CAMAmG,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,MAAM9F,EAASkQ,MAAM/J,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACxD,IAAK,IAAIhX,EAAI,EAAGA,EAAIkR,EAAOpR,OAAQE,IAAK,CACtC,MAAM2I,EAAOtJ,EAAK4I,EAAQjI,GAC1BkR,EAAOlR,GAAGmf,SAAUxK,OAAehM,GAAQA,EAAKlE,IAAMkE,EAAKlE,EAAGqC,KAAKwT,0BAA0Bta,EAAIiI,GAAOuc,OAC1G,CACA,OAAOtT,CACT,CAKAgI,iBACE,MAAM7Z,EAAOyH,KAAKqK,YAAY9R,KAE9B,IAAI0K,EAAM,EACV,IAAK,IAAI/J,EAAIX,EAAKS,OAAS,EAAGE,GAAK,IAAKA,EACtC+J,EAAMhC,KAAKgC,IAAIA,EAAK1K,EAAKW,GAAG8O,KAAKhI,KAAKwT,0BAA0Bta,IAAM,GAExE,OAAO+J,EAAM,GAAKA,CACpB,CAKAoP,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,YACZ/Q,EAAS0G,KAAK/F,MAAM1B,KAAKe,QAAU,IACnCgV,OAACA,SAAQE,GAAUjF,EACnBa,EAASpK,KAAK+Q,UAAUnI,GACxB8E,EAAIY,EAAOgE,iBAAiBlI,EAAOsD,GACnCvT,EAAIqU,EAAO8D,iBAAiBlI,EAAOjQ,GACnCwD,EAAIyM,EAAOiO,QAEjB,MAAO,CACLlf,MAAOG,EAAOsP,IAAU,GACxBtM,MAAO,IAAMoR,EAAI,KAAOvT,GAAKwD,EAAI,KAAOA,EAAI,IAAM,IAEtD,CAEAjD,OAAOuO,GACL,MAAM0U,EAAS3d,KAAKqK,YAAY9R,KAGhCyH,KAAKqW,eAAesH,EAAQ,EAAGA,EAAO3kB,OAAQiQ,EAChD,CAEAoN,eAAesH,EAAQxc,EAAO+O,EAAOjH,GACnC,MAAM4F,EAAiB,UAAT5F,GACRsB,OAACA,SAAQR,GAAU/J,KAAKqK,aACxB4K,cAACA,EAAaD,eAAEA,GAAkBhV,KAAKmV,kBAAkBhU,EAAO8H,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KAErB,IAAK,IAAIvR,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,EAAOhX,IAAK,CAC1C,MAAM0kB,EAAQD,EAAOzkB,GACfkR,GAAUyE,GAAS7O,KAAK+Q,UAAU7X,GAClC8N,EAAa,GACb6W,EAAS7W,EAAWwD,GAASqE,EAAQtE,EAAOmS,mBAAmB,IAAOnS,EAAOsN,iBAAiBzN,EAAOI,IACrGsT,EAAS9W,EAAW0D,GAASmE,EAAQ9E,EAAOyQ,eAAiBzQ,EAAO8N,iBAAiBzN,EAAOM,IAElG1D,EAAW+W,KAAOtC,MAAMoC,IAAWpC,MAAMqC,GAErC9I,IACFhO,EAAWzN,QAAU0b,GAAiBjV,KAAKwT,0BAA0Bta,EAAG0kB,EAAMnY,OAAS,SAAWwD,GAE9F4F,IACF7H,EAAWzN,QAAQmkB,OAAS,IAIhC1d,KAAKuV,cAAcqI,EAAO1kB,EAAG8N,EAAYiC,EAC3C,CACF,CAOAuK,0BAA0B5K,EAAOK,GAC/B,MAAMmB,EAASpK,KAAK+Q,UAAUnI,GAC9B,IAAI1B,EAASoT,MAAM9G,0BAA0B5K,EAAOK,GAGhD/B,EAAOE,UACTF,EAASrL,OAAOwL,OAAO,GAAIH,EAAQ,CAACE,SAAS,KAI/C,MAAMsW,EAASxW,EAAOwW,OAMtB,MALa,WAATzU,IACF/B,EAAOwW,OAAS,GAElBxW,EAAOwW,SAAU7P,OAAezD,GAAUA,EAAOiO,QAASqF,GAEnDxW,CACT,ECnIa,MAAM8W,UAA2BrS,EAE9CC,UAAY,WAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,MACjBnG,UAAW,CAETuX,eAAe,EAEfC,cAAc,GAEhB1W,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7HmX,OAAQ,MAGRC,SAAU,EAGVC,cAAe,IAGfX,OAAQ,OAGRY,QAAS,EAETrQ,UAAW,KAGbrC,mBAAqB,CACnB2S,YAAc3C,GAAkB,YAATA,EACvB4C,WAAa5C,GAAkB,YAATA,GAMxBhQ,iBAAmB,CACjB6S,YAAa,EAGbC,QAAS,CACPC,OAAQ,CACNrlB,OAAQ,CACNslB,eAAe3kB,GACb,MAAM1B,EAAO0B,EAAM1B,KACnB,GAAIA,EAAKe,OAAON,QAAUT,EAAKG,SAASM,OAAQ,CAC9C,MAAOM,QAAQulB,WAACA,QAAYjb,IAAU3J,EAAM0kB,OAAOplB,QAEnD,OAAOhB,EAAKe,OAAOoE,KAAI,CAACvE,EAAOD,KAC7B,MACM4lB,EADO7kB,EAAMyU,eAAe,GACfvE,WAAWmJ,SAASpa,GAEvC,MAAO,CACLW,KAAMV,EACN4lB,UAAWD,EAAME,gBACjBC,YAAaH,EAAMI,YACnBC,UAAWvb,EACXwb,UAAWN,EAAMO,YACjBR,WAAYA,EACZrN,QAASvX,EAAMsiB,kBAAkBrjB,GAGjC0P,MAAO1P,EACT,GAEH,CACD,MAAO,EACT,GAGFomB,QAAQC,EAAGC,EAAYb,GACrBA,EAAO1kB,MAAMwlB,qBAAqBD,EAAW5W,OAC7C+V,EAAO1kB,MAAMS,QACf,KAKNqF,YAAY9F,EAAOiP,GACjBoR,MAAMrgB,EAAOiP,GAEblJ,KAAKwM,qBAAsB,EAC3BxM,KAAK0f,iBAAcniB,EACnByC,KAAK2f,iBAAcpiB,EACnByC,KAAK4f,aAAUriB,EACfyC,KAAK6f,aAAUtiB,CACjB,CAEAwP,aAAa,CAKbtU,MAAM0I,EAAO+O,GACX,MAAM3X,EAAOyH,KAAKwN,aAAajV,KACzBgR,EAAOvJ,KAAKqK,YAElB,IAAsB,IAAlBrK,KAAKkM,SACP3C,EAAK+B,QAAU/S,MACV,CACL,IAOIW,EAAGyP,EAPHmX,EAAU5mB,IAAOX,EAAKW,GAE1B,IAAIqN,OAAShO,EAAK4I,IAAS,CACzB,MAAM0F,IAACA,EAAM,SAAW7G,KAAKkM,SAC7B4T,EAAU5mB,KAAO4X,OAAiBvY,EAAKW,GAAI2N,EAC5C,CAGD,IAAK3N,EAAIiI,EAAOwH,EAAOxH,EAAQ+O,EAAOhX,EAAIyP,IAAQzP,EAChDqQ,EAAK+B,QAAQpS,GAAK4mB,EAAO5mB,EAE5B,CACH,CAKA6mB,eACE,OAAOC,OAAUhgB,KAAKzG,QAAQ6kB,SAAW,GAC3C,CAKA6B,oBACE,OAAOD,OAAUhgB,KAAKzG,QAAQ8kB,cAChC,CAMA6B,sBACE,IAAIhf,EAAMif,IACNld,GAAOkd,IAEX,IAAK,IAAIjnB,EAAI,EAAGA,EAAI8G,KAAK/F,MAAM1B,KAAKG,SAASM,SAAUE,EACrD,GAAI8G,KAAK/F,MAAMmmB,iBAAiBlnB,IAAM8G,KAAK/F,MAAMyU,eAAexV,GAAGG,OAAS2G,KAAKiM,MAAO,CACtF,MAAM9B,EAAanK,KAAK/F,MAAMyU,eAAexV,GAAGiR,WAC1CiU,EAAWjU,EAAW4V,eACtB1B,EAAgBlU,EAAW8V,oBAEjC/e,EAAMD,KAAKC,IAAIA,EAAKkd,GACpBnb,EAAMhC,KAAKgC,IAAIA,EAAKmb,EAAWC,EAChC,CAGH,MAAO,CACLD,SAAUld,EACVmd,cAAepb,EAAM/B,EAEzB,CAKAxG,OAAOuO,GACL,MAAMhP,EAAQ+F,KAAK/F,OACbkZ,UAACA,GAAalZ,EACdsP,EAAOvJ,KAAKqK,YACZgW,EAAO9W,EAAKhR,KACZ+lB,EAAUte,KAAKsgB,oBAAsBtgB,KAAKugB,aAAaF,GAAQrgB,KAAKzG,QAAQ+kB,QAC5EkC,EAAUvf,KAAKgC,KAAKhC,KAAKC,IAAIiS,EAAUiI,MAAOjI,EAAUgI,QAAUmD,GAAW,EAAG,GAChFH,EAASld,KAAKC,KAAIuf,OAAazgB,KAAKzG,QAAQ4kB,OAAQqC,GAAU,GAC9DE,EAAc1gB,KAAK2gB,eAAe3gB,KAAK4I,QAKvCyV,cAACA,WAAeD,GAAYpe,KAAKkgB,uBACjCU,OAACA,SAAQC,UAAQjB,UAASC,GAjNpC,SAA2BzB,EAAUC,EAAeF,GAClD,IAAIyC,EAAS,EACTC,EAAS,EACTjB,EAAU,EACVC,EAAU,EAEd,GAAIxB,EAAgB8B,IAAK,CACvB,MAAMW,EAAa1C,EACb2C,EAAWD,EAAazC,EACxB2C,EAAS/f,KAAKggB,IAAIH,GAClBI,EAASjgB,KAAKkgB,IAAIL,GAClBM,EAAOngB,KAAKggB,IAAIF,GAChBM,EAAOpgB,KAAKkgB,IAAIJ,GAChBO,EAAU,CAACC,EAAO5iB,EAAGC,KAAM4iB,OAAcD,EAAOT,EAAYC,GAAU,GAAQ,EAAI9f,KAAKgC,IAAItE,EAAGA,EAAIwf,EAAQvf,EAAGA,EAAIuf,GACjHsD,EAAU,CAACF,EAAO5iB,EAAGC,KAAM4iB,OAAcD,EAAOT,EAAYC,GAAU,IAAQ,EAAK9f,KAAKC,IAAIvC,EAAGA,EAAIwf,EAAQvf,EAAGA,EAAIuf,GAClHuD,EAAOJ,EAAQ,EAAGN,EAAQI,GAC1BO,EAAOL,EAAQM,IAASV,EAAQG,GAChCQ,EAAOJ,EAAQK,IAAId,EAAQI,GAC3BW,EAAON,EAAQK,IAAKF,IAASV,EAAQG,GAC3CT,GAAUc,EAAOG,GAAQ,EACzBhB,GAAUc,EAAOI,GAAQ,EACzBnC,IAAY8B,EAAOG,GAAQ,EAC3BhC,IAAY8B,EAAOI,GAAQ,CAC5B,CACD,MAAO,CAACnB,SAAQC,SAAQjB,UAASC,UACnC,CAwL+CmC,CAAkB5D,EAAUC,EAAeF,GAChF8D,GAAY9O,EAAUiI,MAAQkD,GAAWsC,EACzCsB,GAAa/O,EAAUgI,OAASmD,GAAWuC,EAC3CsB,EAAYlhB,KAAKgC,IAAIhC,KAAKC,IAAI+gB,EAAUC,GAAa,EAAG,GACxDvC,GAAcyC,OAAYpiB,KAAKzG,QAAQmkB,OAAQyE,GAE/CE,GAAgB1C,EADF1e,KAAKgC,IAAI0c,EAAcxB,EAAQ,IACAne,KAAKsiB,gCACxDtiB,KAAK4f,QAAUA,EAAUD,EACzB3f,KAAK6f,QAAUA,EAAUF,EAEzBpW,EAAKgZ,MAAQviB,KAAKwiB,iBAElBxiB,KAAK2f,YAAcA,EAAc0C,EAAeriB,KAAKyiB,qBAAqBziB,KAAK4I,OAC/E5I,KAAK0f,YAAcze,KAAKgC,IAAIjD,KAAK2f,YAAc0C,EAAe3B,EAAa,GAE3E1gB,KAAKqW,eAAegK,EAAM,EAAGA,EAAKrnB,OAAQiQ,EAC5C,CAKAyZ,eAAexpB,EAAG2V,GAChB,MAAMzG,EAAOpI,KAAKzG,QACZgQ,EAAOvJ,KAAKqK,YACZgU,EAAgBre,KAAKigB,oBAC3B,OAAIpR,GAAUzG,EAAK1B,UAAUuX,gBAAmBje,KAAK/F,MAAMsiB,kBAAkBrjB,IAA0B,OAApBqQ,EAAK+B,QAAQpS,IAAeqQ,EAAKhR,KAAKW,GAAGsY,OACnH,EAEFxR,KAAK2iB,uBAAuBpZ,EAAK+B,QAAQpS,GAAKmlB,EAAgB8B,IACvE,CAEA9J,eAAegK,EAAMlf,EAAO+O,EAAOjH,GACjC,MAAM4F,EAAiB,UAAT5F,EACRhP,EAAQ+F,KAAK/F,MACbkZ,EAAYlZ,EAAMkZ,UAElByP,EADO3oB,EAAMV,QACQmN,UACrBmc,GAAW1P,EAAUP,KAAOO,EAAUT,OAAS,EAC/CoQ,GAAW3P,EAAUV,IAAMU,EAAUR,QAAU,EAC/CuL,EAAerP,GAAS+T,EAAc1E,aACtCwB,EAAcxB,EAAe,EAAIle,KAAK0f,YACtCC,EAAczB,EAAe,EAAIle,KAAK2f,aACtC1K,cAACA,EAAaD,eAAEA,GAAkBhV,KAAKmV,kBAAkBhU,EAAO8H,GACtE,IACI/P,EADA4nB,EAAa9gB,KAAK+f,eAGtB,IAAK7mB,EAAI,EAAGA,EAAIiI,IAASjI,EACvB4nB,GAAc9gB,KAAK0iB,eAAexpB,EAAG2V,GAGvC,IAAK3V,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,IAAShX,EAAG,CACtC,MAAMmlB,EAAgBre,KAAK0iB,eAAexpB,EAAG2V,GACvCkU,EAAM1C,EAAKnnB,GACX8N,EAAa,CACjB0G,EAAGmV,EAAU7iB,KAAK4f,QAClBzlB,EAAG2oB,EAAU9iB,KAAK6f,QAClBiB,aACAC,SAAUD,EAAazC,EACvBA,gBACAsB,cACAD,eAEE1K,IACFhO,EAAWzN,QAAU0b,GAAiBjV,KAAKwT,0BAA0Bta,EAAG6pB,EAAItd,OAAS,SAAWwD,IAElG6X,GAAczC,EAEdre,KAAKuV,cAAcwN,EAAK7pB,EAAG8N,EAAYiC,EACzC,CACF,CAEAuZ,iBACE,MAAMjZ,EAAOvJ,KAAKqK,YACZ2Y,EAAWzZ,EAAKhR,KACtB,IACIW,EADAqpB,EAAQ,EAGZ,IAAKrpB,EAAI,EAAGA,EAAI8pB,EAAShqB,OAAQE,IAAK,CACpC,MAAMoD,EAAQiN,EAAK+B,QAAQpS,GACb,OAAVoD,GAAmBmf,MAAMnf,KAAU0D,KAAK/F,MAAMsiB,kBAAkBrjB,IAAO8pB,EAAS9pB,GAAGsY,SACrF+Q,GAASthB,KAAK2W,IAAItb,GAEtB,CAEA,OAAOimB,CACT,CAEAI,uBAAuBrmB,GACrB,MAAMimB,EAAQviB,KAAKqK,YAAYkY,MAC/B,OAAIA,EAAQ,IAAM9G,MAAMnf,GACf6jB,KAAOlf,KAAK2W,IAAItb,GAASimB,GAE3B,CACT,CAEAlQ,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,YACZpQ,EAAQ+F,KAAK/F,MACbX,EAASW,EAAM1B,KAAKe,QAAU,GAC9BgD,GAAQ2mB,OAAa1Z,EAAK+B,QAAQ1C,GAAQ3O,EAAMV,QAAQ2pB,QAE9D,MAAO,CACL/pB,MAAOG,EAAOsP,IAAU,GACxBtM,QAEJ,CAEAgkB,kBAAkBD,GAChB,IAAIpd,EAAM,EACV,MAAMhJ,EAAQ+F,KAAK/F,MACnB,IAAIf,EAAGyP,EAAMY,EAAMY,EAAY5Q,EAE/B,IAAK8mB,EAEH,IAAKnnB,EAAI,EAAGyP,EAAO1O,EAAM1B,KAAKG,SAASM,OAAQE,EAAIyP,IAAQzP,EACzD,GAAIe,EAAMmmB,iBAAiBlnB,GAAI,CAC7BqQ,EAAOtP,EAAMyU,eAAexV,GAC5BmnB,EAAO9W,EAAKhR,KACZ4R,EAAaZ,EAAKY,WAClB,KACD,CAIL,IAAKkW,EACH,OAAO,EAGT,IAAKnnB,EAAI,EAAGyP,EAAO0X,EAAKrnB,OAAQE,EAAIyP,IAAQzP,EAC1CK,EAAU4Q,EAAWqJ,0BAA0Bta,GACnB,UAAxBK,EAAQ4pB,cACVlgB,EAAMhC,KAAKgC,IAAIA,EAAK1J,EAAQ8lB,aAAe,EAAG9lB,EAAQ6pB,kBAAoB,IAG9E,OAAOngB,CACT,CAEAsd,aAAaF,GACX,IAAIpd,EAAM,EAEV,IAAK,IAAI/J,EAAI,EAAGyP,EAAO0X,EAAKrnB,OAAQE,EAAIyP,IAAQzP,EAAG,CACjD,MAAMK,EAAUyG,KAAKwT,0BAA0Bta,GAC/C+J,EAAMhC,KAAKgC,IAAIA,EAAK1J,EAAQwgB,QAAU,EAAGxgB,EAAQ8pB,aAAe,EAClE,CACA,OAAOpgB,CACT,CAMAwf,qBAAqBvZ,GACnB,IAAIoa,EAAmB,EAEvB,IAAK,IAAIpqB,EAAI,EAAGA,EAAIgQ,IAAgBhQ,EAC9B8G,KAAK/F,MAAMmmB,iBAAiBlnB,KAC9BoqB,GAAoBtjB,KAAK2gB,eAAeznB,IAI5C,OAAOoqB,CACT,CAKA3C,eAAezX,GACb,OAAOjI,KAAKgC,KAAI4K,OAAe7N,KAAK/F,MAAM1B,KAAKG,SAASwQ,GAAcqa,OAAQ,GAAI,EACpF,CAMAjB,gCACE,OAAOtiB,KAAKyiB,qBAAqBziB,KAAK/F,MAAM1B,KAAKG,SAASM,SAAW,CACvE,ECrYa,MAAMwqB,UAAuB7X,EAE1CC,UAAY,OAKZA,gBAAkB,CAChBgB,mBAAoB,OACpBC,gBAAiB,QAEjB4W,UAAU,EACVC,UAAU,GAMZ9X,iBAAmB,CACjBpS,OAAQ,CACNsgB,QAAS,CACPzgB,KAAM,YAER4gB,QAAS,CACP5gB,KAAM,YAKZyT,aACE9M,KAAKwM,qBAAsB,EAC3BxM,KAAKyM,oBAAqB,EAC1B6N,MAAMxN,YACR,CAEApS,OAAOuO,GACL,MAAMM,EAAOvJ,KAAKqK,aACXkD,QAASoW,EAAMprB,KAAMolB,EAAS,GAAEiG,SAAEA,GAAYra,EAE/Csa,EAAqB7jB,KAAK/F,MAAMib,oBACtC,IAAI/T,MAACA,QAAO+O,IAAS4T,OAAiCva,EAAMoU,EAAQkG,GAEpE7jB,KAAKsM,WAAanL,EAClBnB,KAAKuM,WAAa2D,GAEd6T,OAAoBxa,KACtBpI,EAAQ,EACR+O,EAAQyN,EAAO3kB,QAIjB2qB,EAAKrsB,OAAS0I,KAAK/F,MACnB0pB,EAAKK,cAAgBhkB,KAAK4I,MAC1B+a,EAAKM,aAAeL,EAASK,WAC7BN,EAAKhG,OAASA,EAEd,MAAMpkB,EAAUyG,KAAKuT,6BAA6BtK,GAC7CjJ,KAAKzG,QAAQkqB,WAChBlqB,EAAQ8lB,YAAc,GAExB9lB,EAAQ2qB,QAAUlkB,KAAKzG,QAAQ2qB,QAC/BlkB,KAAKuV,cAAcoO,OAAMpmB,EAAW,CAClC4mB,UAAWN,EACXtqB,WACC0P,GAGHjJ,KAAKqW,eAAesH,EAAQxc,EAAO+O,EAAOjH,EAC5C,CAEAoN,eAAesH,EAAQxc,EAAO+O,EAAOjH,GACnC,MAAM4F,EAAiB,UAAT5F,GACRsB,OAACA,SAAQR,WAAQiD,WAAU4W,GAAY5jB,KAAKqK,aAC5C4K,cAACA,EAAaD,eAAEA,GAAkBhV,KAAKmV,kBAAkBhU,EAAO8H,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACfiZ,SAACA,UAAUQ,GAAWlkB,KAAKzG,QAC3B6qB,GAAeC,OAASX,GAAYA,EAAWhS,OAAOC,kBACtD2S,EAAetkB,KAAK/F,MAAMib,qBAAuBrG,GAAkB,SAAT5F,EAC1DX,EAAMnH,EAAQ+O,EACdqU,EAAc5G,EAAO3kB,OAC3B,IAAIwrB,EAAarjB,EAAQ,GAAKnB,KAAK+Q,UAAU5P,EAAQ,GAErD,IAAK,IAAIjI,EAAI,EAAGA,EAAIqrB,IAAerrB,EAAG,CACpC,MAAM0kB,EAAQD,EAAOzkB,GACf8N,EAAasd,EAAe1G,EAAQ,GAE1C,GAAI1kB,EAAIiI,GAASjI,GAAKoP,EAAK,CACzBtB,EAAW+W,MAAO,EAClB,QACD,CAED,MAAM3T,EAASpK,KAAK+Q,UAAU7X,GACxBurB,GAAW5J,OAAczQ,EAAOM,IAChCmT,EAAS7W,EAAWwD,GAASD,EAAOsN,iBAAiBzN,EAAOI,GAAQtR,GACpE4kB,EAAS9W,EAAW0D,GAASmE,GAAS4V,EAAW1a,EAAOyQ,eAAiBzQ,EAAO8N,iBAAiB7K,EAAWhN,KAAK6I,WAAWkB,EAAQK,EAAQ4C,GAAY5C,EAAOM,GAAQxR,GAE7K8N,EAAW+W,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAW2G,EACpDzd,EAAW7D,KAAOjK,EAAI,GAAK+H,KAAM2W,IAAIxN,EAAOI,GAASga,EAAWha,IAAW4Z,EACvEF,IACFld,EAAWoD,OAASA,EACpBpD,EAAW6M,IAAM+P,EAASrrB,KAAKW,IAG7B8b,IACFhO,EAAWzN,QAAU0b,GAAiBjV,KAAKwT,0BAA0Bta,EAAG0kB,EAAMnY,OAAS,SAAWwD,IAG/Fqb,GACHtkB,KAAKuV,cAAcqI,EAAO1kB,EAAG8N,EAAYiC,GAG3Cub,EAAapa,CACf,CACF,CAKAgI,iBACE,MAAM7I,EAAOvJ,KAAKqK,YACZkD,EAAUhE,EAAKgE,QACfmX,EAASnX,EAAQhU,SAAWgU,EAAQhU,QAAQ8lB,aAAe,EAC3D9mB,EAAOgR,EAAKhR,MAAQ,GAC1B,IAAKA,EAAKS,OACR,OAAO0rB,EAET,MAAMC,EAAapsB,EAAK,GAAGyP,KAAKhI,KAAKwT,0BAA0B,IACzDoR,EAAYrsB,EAAKA,EAAKS,OAAS,GAAGgP,KAAKhI,KAAKwT,0BAA0Bjb,EAAKS,OAAS,IAC1F,OAAOiI,KAAKgC,IAAIyhB,EAAQC,EAAYC,GAAa,CACnD,CAEA9iB,OACE,MAAMyH,EAAOvJ,KAAKqK,YAClBd,EAAKgE,QAAQsX,oBAAoB7kB,KAAK/F,MAAMkZ,UAAW5J,EAAKgB,OAAOE,MACnE6P,MAAMxY,MACR,EC1Ia,MAAMgjB,UAA4BnZ,EAE/CC,UAAY,YAKZA,gBAAkB,CAChBiB,gBAAiB,MACjBnG,UAAW,CACTuX,eAAe,EACfC,cAAc,GAEhB1W,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEiH,UAAW,IACX6S,WAAY,GAMdlV,iBAAmB,CACjB6S,YAAa,EAEbC,QAAS,CACPC,OAAQ,CACNrlB,OAAQ,CACNslB,eAAe3kB,GACb,MAAM1B,EAAO0B,EAAM1B,KACnB,GAAIA,EAAKe,OAAON,QAAUT,EAAKG,SAASM,OAAQ,CAC9C,MAAOM,QAAQulB,WAACA,QAAYjb,IAAU3J,EAAM0kB,OAAOplB,QAEnD,OAAOhB,EAAKe,OAAOoE,KAAI,CAACvE,EAAOD,KAC7B,MACM4lB,EADO7kB,EAAMyU,eAAe,GACfvE,WAAWmJ,SAASpa,GAEvC,MAAO,CACLW,KAAMV,EACN4lB,UAAWD,EAAME,gBACjBC,YAAaH,EAAMI,YACnBC,UAAWvb,EACXwb,UAAWN,EAAMO,YACjBR,WAAYA,EACZrN,QAASvX,EAAMsiB,kBAAkBrjB,GAGjC0P,MAAO1P,EACT,GAEH,CACD,MAAO,EACT,GAGFomB,QAAQC,EAAGC,EAAYb,GACrBA,EAAO1kB,MAAMwlB,qBAAqBD,EAAW5W,OAC7C+V,EAAO1kB,MAAMS,QACf,IAIJlB,OAAQ,CACNmE,EAAG,CACDtE,KAAM,eACN0rB,WAAY,CACVrrB,SAAS,GAEXwgB,aAAa,EACbF,KAAM,CACJgL,UAAU,GAEZC,YAAa,CACXvrB,SAAS,GAEXonB,WAAY,KAKlB/gB,YAAY9F,EAAOiP,GACjBoR,MAAMrgB,EAAOiP,GAEblJ,KAAK0f,iBAAcniB,EACnByC,KAAK2f,iBAAcpiB,CACrB,CAEA8U,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,YACZpQ,EAAQ+F,KAAK/F,MACbX,EAASW,EAAM1B,KAAKe,QAAU,GAC9BgD,GAAQ2mB,OAAa1Z,EAAK+B,QAAQ1C,GAAOjL,EAAG1D,EAAMV,QAAQ2pB,QAEhE,MAAO,CACL/pB,MAAOG,EAAOsP,IAAU,GACxBtM,QAEJ,CAEAiU,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,OAAOgV,IAA4BC,KAAKnlB,KAAjCklB,CAAuC3b,EAAMhR,EAAM4I,EAAO+O,EACnE,CAEAxV,OAAOuO,GACL,MAAMoX,EAAOrgB,KAAKqK,YAAY9R,KAE9ByH,KAAKolB,gBACLplB,KAAKqW,eAAegK,EAAM,EAAGA,EAAKrnB,OAAQiQ,EAC5C,CAKAoI,YACE,MAAM9H,EAAOvJ,KAAKqK,YACZ6G,EAAQ,CAAChQ,IAAKwQ,OAAOC,kBAAmB1O,IAAKyO,OAAOE,mBAgB1D,OAdArI,EAAKhR,KAAKsI,SAAQ,CAACwS,EAASzK,KAC1B,MAAMwB,EAASpK,KAAK+Q,UAAUnI,GAAOjL,GAEhC8d,MAAMrR,IAAWpK,KAAK/F,MAAMsiB,kBAAkB3T,KAC7CwB,EAAS8G,EAAMhQ,MACjBgQ,EAAMhQ,IAAMkJ,GAGVA,EAAS8G,EAAMjO,MACjBiO,EAAMjO,IAAMmH,GAEf,IAGI8G,CACT,CAKAkU,gBACE,MAAMnrB,EAAQ+F,KAAK/F,MACbkZ,EAAYlZ,EAAMkZ,UAClB/K,EAAOnO,EAAMV,QACb8rB,EAAUpkB,KAAKC,IAAIiS,EAAUT,MAAQS,EAAUP,KAAMO,EAAUR,OAASQ,EAAUV,KAElFkN,EAAc1e,KAAKgC,IAAIoiB,EAAU,EAAG,GAEpChD,GAAgB1C,EADF1e,KAAKgC,IAAImF,EAAKkd,iBAAmB3F,EAAe,IAAQvX,EAAKkd,iBAAoB,EAAG,IACrDrrB,EAAMsrB,yBAEzDvlB,KAAK2f,YAAcA,EAAe0C,EAAeriB,KAAK4I,MACtD5I,KAAK0f,YAAc1f,KAAK2f,YAAc0C,CACxC,CAEAhM,eAAegK,EAAMlf,EAAO+O,EAAOjH,GACjC,MAAM4F,EAAiB,UAAT5F,EACRhP,EAAQ+F,KAAK/F,MAEb2oB,EADO3oB,EAAMV,QACQmN,UACrBwB,EAAQlI,KAAKqK,YAAYoE,OACzBoU,EAAU3a,EAAMsd,QAChB1C,EAAU5a,EAAMud,QAChBC,EAAoBxd,EAAMyd,cAAc,GAAK,GAAM7D,IACzD,IACI5oB,EADAqoB,EAAQmE,EAGZ,MAAME,EAAe,IAAM5lB,KAAK6lB,uBAEhC,IAAK3sB,EAAI,EAAGA,EAAIiI,IAASjI,EACvBqoB,GAASvhB,KAAK8lB,cAAc5sB,EAAG+P,EAAM2c,GAEvC,IAAK1sB,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,EAAOhX,IAAK,CACtC,MAAM6pB,EAAM1C,EAAKnnB,GACjB,IAAI4nB,EAAaS,EACbR,EAAWQ,EAAQvhB,KAAK8lB,cAAc5sB,EAAG+P,EAAM2c,GAC/CjG,EAAc1lB,EAAMsiB,kBAAkBrjB,GAAKgP,EAAM6d,8BAA8B/lB,KAAK+Q,UAAU7X,GAAGyE,GAAK,EAC1G4jB,EAAQR,EAEJlS,IACE+T,EAAc1E,eAChByB,EAAc,GAEZiD,EAAc3E,gBAChB6C,EAAaC,EAAW2E,IAI5B,MAAM1e,EAAa,CACjB0G,EAAGmV,EACH1oB,EAAG2oB,EACHpD,YAAa,EACbC,cACAmB,aACAC,WACAxnB,QAASyG,KAAKwT,0BAA0Bta,EAAG6pB,EAAItd,OAAS,SAAWwD,IAGrEjJ,KAAKuV,cAAcwN,EAAK7pB,EAAG8N,EAAYiC,EACzC,CACF,CAEA4c,uBACE,MAAMtc,EAAOvJ,KAAKqK,YAClB,IAAI6F,EAAQ,EAQZ,OANA3G,EAAKhR,KAAKsI,SAAQ,CAACwS,EAASzK,MACrB6S,MAAMzb,KAAK+Q,UAAUnI,GAAOjL,IAAMqC,KAAK/F,MAAMsiB,kBAAkB3T,IAClEsH,OAIGA,CACT,CAKA4V,cAAcld,EAAOK,EAAM2c,GACzB,OAAO5lB,KAAK/F,MAAMsiB,kBAAkB3T,IAChCoX,OAAUhgB,KAAKwT,0BAA0B5K,EAAOK,GAAMsY,OAASqE,GAC/D,CACN,EC9Na,MAAMI,UAAsBhI,EAEzCpS,UAAY,MAKZA,gBAAkB,CAEhBuS,OAAQ,EAGRC,SAAU,EAGVC,cAAe,IAGfX,OAAQ,QClBG,MAAMuI,UAAwBta,EAE3CC,UAAY,QAKZA,gBAAkB,CAChBgB,mBAAoB,OACpBC,gBAAiB,QACjBoB,UAAW,IACXwV,UAAU,EACVxQ,SAAU,CACR0Q,KAAM,CACJzW,KAAM,WAQZtB,iBAAmB,CACjB6S,YAAa,EAEbjlB,OAAQ,CACNmE,EAAG,CACDtE,KAAM,kBAQZgZ,iBAAiBzJ,GACf,MAAMmB,EAAS/J,KAAKqK,YAAYN,OAC1BK,EAASpK,KAAK+Q,UAAUnI,GAE9B,MAAO,CACLzP,MAAO4Q,EAAO2G,YAAY9H,GAC1BtM,MAAO,GAAKyN,EAAOuI,iBAAiBlI,EAAOL,EAAOU,OAEtD,CAEA8F,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,OAAOgV,IAA4BC,KAAKnlB,KAAjCklB,CAAuC3b,EAAMhR,EAAM4I,EAAO+O,EACnE,CAEAxV,OAAOuO,GACL,MAAMM,EAAOvJ,KAAKqK,YACZsZ,EAAOpa,EAAKgE,QACZoQ,EAASpU,EAAKhR,MAAQ,GACtBe,EAASiQ,EAAKgB,OAAOmG,YAK3B,GAFAiT,EAAKhG,OAASA,EAED,WAAT1U,EAAmB,CACrB,MAAM1P,EAAUyG,KAAKuT,6BAA6BtK,GAC7CjJ,KAAKzG,QAAQkqB,WAChBlqB,EAAQ8lB,YAAc,GAGxB,MAAMrY,EAAa,CACjB9B,OAAO,EACPghB,UAAW5sB,EAAON,SAAW2kB,EAAO3kB,OACpCO,WAGFyG,KAAKuV,cAAcoO,OAAMpmB,EAAWyJ,EAAYiC,EACjD,CAGDjJ,KAAKqW,eAAesH,EAAQ,EAAGA,EAAO3kB,OAAQiQ,EAChD,CAEAoN,eAAesH,EAAQxc,EAAO+O,EAAOjH,GACnC,MAAMf,EAAQlI,KAAKqK,YAAYoE,OACzBI,EAAiB,UAAT5F,EAEd,IAAK,IAAI/P,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,EAAOhX,IAAK,CAC1C,MAAM0kB,EAAQD,EAAOzkB,GACfK,EAAUyG,KAAKwT,0BAA0Bta,EAAG0kB,EAAMnY,OAAS,SAAWwD,GACtEkd,EAAgBje,EAAMke,yBAAyBltB,EAAG8G,KAAK+Q,UAAU7X,GAAGyE,GAEpE+P,EAAImB,EAAQ3G,EAAMsd,QAAUW,EAAczY,EAC1CvT,EAAI0U,EAAQ3G,EAAMud,QAAUU,EAAchsB,EAE1C6M,EAAa,CACjB0G,IACAvT,IACAonB,MAAO4E,EAAc5E,MACrBxD,KAAMtC,MAAM/N,IAAM+N,MAAMthB,GACxBZ,WAGFyG,KAAKuV,cAAcqI,EAAO1kB,EAAG8N,EAAYiC,EAC3C,CACF,ECjGa,MAAMod,UAA0B1a,EAE7CC,UAAY,UAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,QACjB4W,UAAU,EACVvW,MAAM,GAMRtB,iBAAmB,CAEjB0a,YAAa,CACXrd,KAAM,SAGRzP,OAAQ,CACNkU,EAAG,CACDrU,KAAM,UAERc,EAAG,CACDd,KAAM,YAQZgZ,iBAAiBzJ,GACf,MAAMW,EAAOvJ,KAAKqK,YACZ/Q,EAAS0G,KAAK/F,MAAM1B,KAAKe,QAAU,IACnCgV,OAACA,SAAQE,GAAUjF,EACnBa,EAASpK,KAAK+Q,UAAUnI,GACxB8E,EAAIY,EAAOgE,iBAAiBlI,EAAOsD,GACnCvT,EAAIqU,EAAO8D,iBAAiBlI,EAAOjQ,GAEzC,MAAO,CACLhB,MAAOG,EAAOsP,IAAU,GACxBtM,MAAO,IAAMoR,EAAI,KAAOvT,EAAI,IAEhC,CAEAO,OAAOuO,GACL,MAAMM,EAAOvJ,KAAKqK,aACX9R,KAAMolB,EAAS,IAAMpU,EAEtBsa,EAAqB7jB,KAAK/F,MAAMib,oBACtC,IAAI/T,MAACA,QAAO+O,IAAS4T,OAAiCva,EAAMoU,EAAQkG,GAUpE,GARA7jB,KAAKsM,WAAanL,EAClBnB,KAAKuM,WAAa2D,GAEd6T,OAAoBxa,KACtBpI,EAAQ,EACR+O,EAAQyN,EAAO3kB,QAGbgH,KAAKzG,QAAQkqB,SAAU,CAEzB,MAAOlW,QAASoW,WAAMC,GAAYra,EAGlCoa,EAAKrsB,OAAS0I,KAAK/F,MACnB0pB,EAAKK,cAAgBhkB,KAAK4I,MAC1B+a,EAAKM,aAAeL,EAASK,WAC7BN,EAAKhG,OAASA,EAEd,MAAMpkB,EAAUyG,KAAKuT,6BAA6BtK,GAClD1P,EAAQ2qB,QAAUlkB,KAAKzG,QAAQ2qB,QAC/BlkB,KAAKuV,cAAcoO,OAAMpmB,EAAW,CAClC4mB,UAAWN,EACXtqB,WACC0P,EACJ,CAGDjJ,KAAKqW,eAAesH,EAAQxc,EAAO+O,EAAOjH,EAC5C,CAEAgE,cACE,MAAMwW,SAACA,GAAYzjB,KAAKzG,SAEnByG,KAAK4M,oBAAsB6W,IAC9BzjB,KAAK4M,mBAAqB5M,KAAK/F,MAAMssB,SAASC,WAAW,SAG3DlM,MAAMrN,aACR,CAEAoJ,eAAesH,EAAQxc,EAAO+O,EAAOjH,GACnC,MAAM4F,EAAiB,UAAT5F,GACRsB,OAACA,SAAQR,WAAQiD,WAAU4W,GAAY5jB,KAAKqK,YAC5C+K,EAAYpV,KAAKwT,0BAA0BrS,EAAO8H,GAClDgM,EAAgBjV,KAAK+U,iBAAiBK,GACtCJ,EAAiBhV,KAAKgV,eAAe/L,EAAMgM,GAC3CzK,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACfiZ,SAACA,UAAUQ,GAAWlkB,KAAKzG,QAC3B6qB,GAAeC,OAASX,GAAYA,EAAWhS,OAAOC,kBACtD2S,EAAetkB,KAAK/F,MAAMib,qBAAuBrG,GAAkB,SAAT5F,EAChE,IAAIub,EAAarjB,EAAQ,GAAKnB,KAAK+Q,UAAU5P,EAAQ,GAErD,IAAK,IAAIjI,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,IAAShX,EAAG,CAC1C,MAAM0kB,EAAQD,EAAOzkB,GACfkR,EAASpK,KAAK+Q,UAAU7X,GACxB8N,EAAasd,EAAe1G,EAAQ,GACpC6G,GAAW5J,OAAczQ,EAAOM,IAChCmT,EAAS7W,EAAWwD,GAASD,EAAOsN,iBAAiBzN,EAAOI,GAAQtR,GACpE4kB,EAAS9W,EAAW0D,GAASmE,GAAS4V,EAAW1a,EAAOyQ,eAAiBzQ,EAAO8N,iBAAiB7K,EAAWhN,KAAK6I,WAAWkB,EAAQK,EAAQ4C,GAAY5C,EAAOM,GAAQxR,GAE7K8N,EAAW+W,KAAOtC,MAAMoC,IAAWpC,MAAMqC,IAAW2G,EACpDzd,EAAW7D,KAAOjK,EAAI,GAAK+H,KAAM2W,IAAIxN,EAAOI,GAASga,EAAWha,IAAW4Z,EACvEF,IACFld,EAAWoD,OAASA,EACpBpD,EAAW6M,IAAM+P,EAASrrB,KAAKW,IAG7B8b,IACFhO,EAAWzN,QAAU0b,GAAiBjV,KAAKwT,0BAA0Bta,EAAG0kB,EAAMnY,OAAS,SAAWwD,IAG/Fqb,GACHtkB,KAAKuV,cAAcqI,EAAO1kB,EAAG8N,EAAYiC,GAG3Cub,EAAapa,CACf,CAEApK,KAAKsV,oBAAoBL,EAAehM,EAAMmM,EAChD,CAKAhD,iBACE,MAAM7I,EAAOvJ,KAAKqK,YACZ9R,EAAOgR,EAAKhR,MAAQ,GAE1B,IAAKyH,KAAKzG,QAAQkqB,SAAU,CAC1B,IAAIxgB,EAAM,EACV,IAAK,IAAI/J,EAAIX,EAAKS,OAAS,EAAGE,GAAK,IAAKA,EACtC+J,EAAMhC,KAAKgC,IAAIA,EAAK1K,EAAKW,GAAG8O,KAAKhI,KAAKwT,0BAA0Bta,IAAM,GAExE,OAAO+J,EAAM,GAAKA,CACnB,CAED,MAAMsK,EAAUhE,EAAKgE,QACfmX,EAASnX,EAAQhU,SAAWgU,EAAQhU,QAAQ8lB,aAAe,EAEjE,IAAK9mB,EAAKS,OACR,OAAO0rB,EAGT,MAAMC,EAAapsB,EAAK,GAAGyP,KAAKhI,KAAKwT,0BAA0B,IACzDoR,EAAYrsB,EAAKA,EAAKS,OAAS,GAAGgP,KAAKhI,KAAKwT,0BAA0Bjb,EAAKS,OAAS,IAC1F,OAAOiI,KAAKgC,IAAIyhB,EAAQC,EAAYC,GAAa,CACnD,E,2LCzGF,SAAS6B,IACP,MAAM,IAAIC,MAAM,kFAClB,CAQA,MAAMC,EAYJ/a,gBACEgb,GAEA/qB,OAAOwL,OAAOsf,EAAgBE,UAAWD,EAC3C,CAIA7mB,YAAYxG,GACVyG,KAAKzG,QAAUA,GAAW,EAC5B,CAGAutB,OAAO,CAEPC,UACE,OAAON,GACT,CAEAhuB,QACE,OAAOguB,GACT,CAEApsB,SACE,OAAOosB,GACT,CAEA7jB,MACE,OAAO6jB,GACT,CAEAO,OACE,OAAOP,GACT,CAEAQ,UACE,OAAOR,GACT,CAEAS,QACE,OAAOT,GACT,EAGF,IAAAU,EAAe,CACbC,MAAOT,GC9GT,SAASU,EAAaC,EAAS7c,EAAMnO,EAAOirB,GAC1C,MAAMpd,WAACA,EAAU5R,KAAEA,UAAM6X,GAAWkX,EAC9B/c,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgB2F,GAAW7X,EAAKS,OAAQ,CAC5E,MAAMwuB,EAAejd,EAAOkd,eAAiBC,IAAgBC,IAC7D,IAAKJ,EACH,OAAOC,EAAajvB,EAAMkS,EAAMnO,GAC3B,GAAI6N,EAAWkC,eAAgB,CAIpC,MAAMub,EAAKrvB,EAAK,GACV2Y,EAA+B,mBAAhB0W,EAAGC,UAA2BD,EAAGC,SAASpd,GAC/D,GAAIyG,EAAO,CACT,MAAM/P,EAAQqmB,EAAajvB,EAAMkS,EAAMnO,EAAQ4U,GACzC5I,EAAMkf,EAAajvB,EAAMkS,EAAMnO,EAAQ4U,GAC7C,MAAO,CAAC4W,GAAI3mB,EAAM2mB,GAAIC,GAAIzf,EAAIyf,GAC/B,CACF,CACF,CAED,MAAO,CAACD,GAAI,EAAGC,GAAIxvB,EAAKS,OAAS,EACnC,CAUA,SAASgvB,EAAyB/tB,EAAOwQ,EAAM9Q,EAAUsuB,EAASV,GAChE,MAAM9e,EAAWxO,EAAMiuB,+BACjB5rB,EAAQ3C,EAAS8Q,GACvB,IAAK,IAAIvR,EAAI,EAAGyP,EAAOF,EAASzP,OAAQE,EAAIyP,IAAQzP,EAAG,CACrD,MAAM0P,MAACA,OAAOrQ,GAAQkQ,EAASvP,IACzB4uB,GAACA,KAAIC,GAAMV,EAAa5e,EAASvP,GAAIuR,EAAMnO,EAAOirB,GACxD,IAAK,IAAIY,EAAIL,EAAIK,GAAKJ,IAAMI,EAAG,CAC7B,MAAM9U,EAAU9a,EAAK4vB,GAChB9U,EAAQ0K,MACXkK,EAAQ5U,EAASzK,EAAOuf,EAE5B,CACF,CACF,CA2BA,SAASC,EAAkBnuB,EAAON,EAAU8Q,EAAM4d,EAAkBC,GAClE,MAAM1mB,EAAQ,GAEd,IAAK0mB,IAAqBruB,EAAMsuB,cAAc5uB,GAC5C,OAAOiI,EAaT,OADAomB,EAAyB/tB,EAAOwQ,EAAM9Q,GATf,SAAS0Z,EAASnK,EAAcN,IAChD0f,IAAqBE,OAAenV,EAASpZ,EAAMkZ,UAAW,KAG/DE,EAAQoV,QAAQ9uB,EAAS+T,EAAG/T,EAASQ,EAAGkuB,IAC1CzmB,EAAM3I,KAAK,CAACoa,UAASnK,eAAcN,SAEvC,IAEgE,GACzDhH,CACT,CAoCA,SAAS8mB,EAAyBzuB,EAAON,EAAU8Q,EAAM8c,EAAWc,EAAkBC,GACpF,IAAI1mB,EAAQ,GACZ,MAAM+mB,EA5ER,SAAkCle,GAChC,MAAMme,GAA6B,IAAtBne,EAAKrO,QAAQ,KACpBysB,GAA6B,IAAtBpe,EAAKrO,QAAQ,KAE1B,OAAO,SAAS0sB,EAAKC,GACnB,MAAMC,EAASJ,EAAO3nB,KAAK2W,IAAIkR,EAAIpb,EAAIqb,EAAIrb,GAAK,EAC1Cub,EAASJ,EAAO5nB,KAAK2W,IAAIkR,EAAI3uB,EAAI4uB,EAAI5uB,GAAK,EAChD,OAAO8G,KAAKioB,KAAKjoB,KAAKkoB,IAAIH,EAAQ,GAAK/nB,KAAKkoB,IAAIF,EAAQ,GAC1D,CACF,CAmEyBG,CAAyB3e,GAChD,IAAI4e,EAAc3X,OAAOC,kBAyBzB,OADAqW,EAAyB/tB,EAAOwQ,EAAM9Q,GAtBtC,SAAwB0Z,EAASnK,EAAcN,GAC7C,MAAM6f,EAAUpV,EAAQoV,QAAQ9uB,EAAS+T,EAAG/T,EAASQ,EAAGkuB,GACxD,GAAId,IAAckB,EAChB,OAGF,MAAMvN,EAAS7H,EAAQiW,eAAejB,GAEtC,OADsBC,GAAoBruB,EAAMsuB,cAAcrN,MACzCuN,EACnB,OAGF,MAAMc,EAAWZ,EAAehvB,EAAUuhB,GACtCqO,EAAWF,GACbznB,EAAQ,CAAC,CAACyR,UAASnK,eAAcN,UACjCygB,EAAcE,GACLA,IAAaF,GAEtBznB,EAAM3I,KAAK,CAACoa,UAASnK,eAAcN,SAEvC,IAGOhH,CACT,CAYA,SAAS4nB,EAAgBvvB,EAAON,EAAU8Q,EAAM8c,EAAWc,EAAkBC,GAC3E,OAAKA,GAAqBruB,EAAMsuB,cAAc5uB,GAI9B,MAAT8Q,GAAiB8c,EAEpBmB,EAAyBzuB,EAAON,EAAU8Q,EAAM8c,EAAWc,EAAkBC,GA1EnF,SAA+BruB,EAAON,EAAU8Q,EAAM4d,GACpD,IAAIzmB,EAAQ,GAYZ,OADAomB,EAAyB/tB,EAAOwQ,EAAM9Q,GATtC,SAAwB0Z,EAASnK,EAAcN,GAC7C,MAAMkY,WAACA,WAAYC,GAAY1N,EAAQoW,SAAS,CAAC,aAAc,YAAapB,IACtE9G,MAACA,IAASmI,OAAkBrW,EAAS,CAAC3F,EAAG/T,EAAS+T,EAAGvT,EAAGR,EAASQ,KAEnEqnB,OAAcD,EAAOT,EAAYC,IACnCnf,EAAM3I,KAAK,CAACoa,UAASnK,eAAcN,SAEvC,IAGOhH,CACT,CA2DM+nB,CAAsB1vB,EAAON,EAAU8Q,EAAM4d,GAJxC,EAMX,CAWA,SAASuB,EAAa3vB,EAAON,EAAU8Q,EAAM8c,EAAWc,GACtD,MAAMzmB,EAAQ,GACRioB,EAAuB,MAATpf,EAAe,WAAa,WAChD,IAAIqf,GAAiB,EAWrB,OATA9B,EAAyB/tB,EAAOwQ,EAAM9Q,GAAU,CAAC0Z,EAASnK,EAAcN,KAClEyK,EAAQwW,GAAalwB,EAAS8Q,GAAO4d,KACvCzmB,EAAM3I,KAAK,CAACoa,UAASnK,eAAcN,UACnCkhB,EAAiBA,GAAkBzW,EAAQoV,QAAQ9uB,EAAS+T,EAAG/T,EAASQ,EAAGkuB,GAC5E,IAKCd,IAAcuC,EACT,GAEFloB,CACT,CAMA,IAAAmoB,EAAe,CAEb/B,2BAGAgC,MAAO,CAYLphB,MAAM3O,EAAOslB,EAAGhmB,EAAS8uB,GACvB,MAAM1uB,GAAWswB,OAAoB1K,EAAGtlB,GAElCwQ,EAAOlR,EAAQkR,MAAQ,IACvB6d,EAAmB/uB,EAAQ+uB,mBAAoB,EAC/C1mB,EAAQrI,EAAQguB,UAClBa,EAAkBnuB,EAAON,EAAU8Q,EAAM4d,EAAkBC,GAC3DkB,EAAgBvvB,EAAON,EAAU8Q,GAAM,EAAO4d,EAAkBC,GAC9DrV,EAAW,GAEjB,OAAKrR,EAAM5I,QAIXiB,EAAMiuB,+BAA+BrnB,SAAS0I,IAC5C,MAAMX,EAAQhH,EAAM,GAAGgH,MACjByK,EAAU9J,EAAKhR,KAAKqQ,GAGtByK,IAAYA,EAAQ0K,MACtB9K,EAASha,KAAK,CAACoa,UAASnK,aAAcK,EAAKX,MAAOA,SAAK,IAIpDqK,GAbE,EAcX,EAYA1F,QAAQtT,EAAOslB,EAAGhmB,EAAS8uB,GACzB,MAAM1uB,GAAWswB,OAAoB1K,EAAGtlB,GAClCwQ,EAAOlR,EAAQkR,MAAQ,KACvB6d,EAAmB/uB,EAAQ+uB,mBAAoB,EACrD,IAAI1mB,EAAQrI,EAAQguB,UAChBa,EAAkBnuB,EAAON,EAAU8Q,EAAM4d,EAAkBC,GAC7DkB,EAAgBvvB,EAAON,EAAU8Q,GAAM,EAAO4d,EAAkBC,GAElE,GAAI1mB,EAAM5I,OAAS,EAAG,CACpB,MAAMkQ,EAAetH,EAAM,GAAGsH,aACxB3Q,EAAO0B,EAAMyU,eAAexF,GAAc3Q,KAChDqJ,EAAQ,GACR,IAAK,IAAI1I,EAAI,EAAGA,EAAIX,EAAKS,SAAUE,EACjC0I,EAAM3I,KAAK,CAACoa,QAAS9a,EAAKW,GAAIgQ,eAAcN,MAAO1P,GAEtD,CAED,OAAO0I,CACT,EAYAgc,OAAM3jB,EAAOslB,EAAGhmB,EAAS8uB,IAIhBD,EAAkBnuB,GAHRgwB,OAAoB1K,EAAGtlB,GAC3BV,EAAQkR,MAAQ,KAEmB4d,EADvB9uB,EAAQ+uB,mBAAoB,GAavD4B,QAAQjwB,EAAOslB,EAAGhmB,EAAS8uB,GACzB,MAAM1uB,GAAWswB,OAAoB1K,EAAGtlB,GAClCwQ,EAAOlR,EAAQkR,MAAQ,KACvB6d,EAAmB/uB,EAAQ+uB,mBAAoB,EACrD,OAAOkB,EAAgBvvB,EAAON,EAAU8Q,EAAMlR,EAAQguB,UAAWc,EAAkBC,EACrF,EAWA5a,GAAEzT,EAAOslB,EAAGhmB,EAAS8uB,IAEZuB,EAAa3vB,GADHgwB,OAAoB1K,EAAGtlB,GACH,IAAKV,EAAQguB,UAAWc,GAY/DluB,GAAEF,EAAOslB,EAAGhmB,EAAS8uB,IAEZuB,EAAa3vB,GADHgwB,OAAoB1K,EAAGtlB,GACH,IAAKV,EAAQguB,UAAWc,KCpWnE,MAAM8B,EAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,EAAiBC,EAAO1wB,GAC/B,OAAO0wB,EAAMlf,QAAOmO,GAAKA,EAAEgR,MAAQ3wB,GACrC,CAEA,SAAS4wB,EAA4BF,EAAO5f,GAC1C,OAAO4f,EAAMlf,QAAOmO,IAAyC,IAApC6Q,EAAiB/tB,QAAQkd,EAAEgR,MAAehR,EAAEkR,IAAI/f,OAASA,GACpF,CAEA,SAASggB,EAAaJ,EAAOhiB,GAC3B,OAAOgiB,EAAMruB,MAAK,CAAC2C,EAAGC,KACpB,MAAM8rB,EAAKriB,EAAUzJ,EAAID,EACnBwa,EAAK9Q,EAAU1J,EAAIC,EACzB,OAAO8rB,EAAGnH,SAAWpK,EAAGoK,OACtBmH,EAAG9hB,MAAQuQ,EAAGvQ,MACd8hB,EAAGnH,OAASpK,EAAGoK,MAAM,GAE3B,CAuCA,SAASoH,GAAcC,EAASC,GAC9B,MAAMnhB,EAlBR,SAAqBkhB,GACnB,MAAMlhB,EAAS,GACf,IAAK,MAAMohB,KAAQF,EAAS,CAC1B,MAAM9hB,MAACA,EAAKwhB,IAAEA,cAAKS,GAAeD,EAClC,IAAKhiB,IAAUqhB,EAAiBa,SAASV,GACvC,SAEF,MAAMW,EAASvhB,EAAOZ,KAAWY,EAAOZ,GAAS,CAACoH,MAAO,EAAGgb,OAAQ,EAAG3H,OAAQ,EAAGvb,KAAM,IACxFijB,EAAO/a,QACP+a,EAAO1H,QAAUwH,CACnB,CACA,OAAOrhB,CACT,CAMiByhB,CAAYP,IACrBQ,aAACA,gBAAcC,GAAiBR,EACtC,IAAI3xB,EAAGyP,EAAM2iB,EACb,IAAKpyB,EAAI,EAAGyP,EAAOiiB,EAAQ5xB,OAAQE,EAAIyP,IAAQzP,EAAG,CAChDoyB,EAASV,EAAQ1xB,GACjB,MAAMqyB,SAACA,GAAYD,EAAOd,IACpB1hB,EAAQY,EAAO4hB,EAAOxiB,OACtBnF,EAASmF,GAASwiB,EAAOP,YAAcjiB,EAAMya,OAC/C+H,EAAOzS,YACTyS,EAAOlQ,MAAQzX,EAASA,EAASynB,EAAeG,GAAYV,EAAOW,eACnEF,EAAOnQ,OAASkQ,IAEhBC,EAAOlQ,MAAQgQ,EACfE,EAAOnQ,OAASxX,EAASA,EAAS0nB,EAAgBE,GAAYV,EAAOY,gBAEzE,CACA,OAAO/hB,CACT,CAsBA,SAASgiB,GAAeC,EAAYxY,EAAWxU,EAAGC,GAChD,OAAOqC,KAAKgC,IAAI0oB,EAAWhtB,GAAIwU,EAAUxU,IAAMsC,KAAKgC,IAAI0oB,EAAW/sB,GAAIuU,EAAUvU,GACnF,CAEA,SAASgtB,GAAiBD,EAAYE,GACpCF,EAAWlZ,IAAMxR,KAAKgC,IAAI0oB,EAAWlZ,IAAKoZ,EAAWpZ,KACrDkZ,EAAW/Y,KAAO3R,KAAKgC,IAAI0oB,EAAW/Y,KAAMiZ,EAAWjZ,MACvD+Y,EAAWhZ,OAAS1R,KAAKgC,IAAI0oB,EAAWhZ,OAAQkZ,EAAWlZ,QAC3DgZ,EAAWjZ,MAAQzR,KAAKgC,IAAI0oB,EAAWjZ,MAAOmZ,EAAWnZ,MAC3D,CAEA,SAASoZ,GAAW3Y,EAAW0X,EAAQS,EAAQ5hB,GAC7C,MAAM4gB,IAACA,MAAKE,GAAOc,EACbK,EAAaxY,EAAUwY,WAG7B,KAAKplB,OAAS+jB,GAAM,CACdgB,EAAOtjB,OAETmL,EAAUmX,IAAQgB,EAAOtjB,MAE3B,MAAMc,EAAQY,EAAO4hB,EAAOxiB,QAAU,CAACd,KAAM,EAAGkI,MAAO,GACvDpH,EAAMd,KAAO/G,KAAKgC,IAAI6F,EAAMd,KAAMsjB,EAAOzS,WAAa2R,EAAIrP,OAASqP,EAAIpP,OACvEkQ,EAAOtjB,KAAOc,EAAMd,KAAOc,EAAMoH,MACjCiD,EAAUmX,IAAQgB,EAAOtjB,IAC1B,CAEGwiB,EAAIuB,YACNH,GAAiBD,EAAYnB,EAAIuB,cAGnC,MAAMC,EAAW/qB,KAAKgC,IAAI,EAAG4nB,EAAOoB,WAAaP,GAAeC,EAAYxY,EAAW,OAAQ,UACzF+Y,EAAYjrB,KAAKgC,IAAI,EAAG4nB,EAAOsB,YAAcT,GAAeC,EAAYxY,EAAW,MAAO,WAC1FiZ,EAAeJ,IAAa7Y,EAAUkZ,EACtCC,EAAgBJ,IAAc/Y,EAAUoZ,EAK9C,OAJApZ,EAAUkZ,EAAIL,EACd7Y,EAAUoZ,EAAIL,EAGPZ,EAAOzS,WACV,CAAC2T,KAAMJ,EAAcK,MAAOH,GAC5B,CAACE,KAAMF,EAAeG,MAAOL,EACnC,CAgBA,SAASM,GAAW7T,EAAY1F,GAC9B,MAAMwY,EAAaxY,EAAUwY,WAE7B,SAASgB,EAAmBC,GAC1B,MAAMC,EAAS,CAACja,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAia,EAAU/rB,SAASypB,IACjBuC,EAAOvC,GAAOrpB,KAAKgC,IAAIkQ,EAAUmX,GAAMqB,EAAWrB,GAAI,IAEjDuC,CACT,CAEA,OACIF,EADG9T,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CAEA,SAASiU,GAASC,EAAO5Z,EAAW0X,EAAQnhB,GAC1C,MAAMsjB,EAAa,GACnB,IAAI9zB,EAAGyP,EAAM2iB,EAAQd,EAAKyC,EAAOC,EAEjC,IAAKh0B,EAAI,EAAGyP,EAAOokB,EAAM/zB,OAAQi0B,EAAQ,EAAG/zB,EAAIyP,IAAQzP,EAAG,CACzDoyB,EAASyB,EAAM7zB,GACfsxB,EAAMc,EAAOd,IAEbA,EAAI9vB,OACF4wB,EAAOlQ,OAASjI,EAAUkZ,EAC1Bf,EAAOnQ,QAAUhI,EAAUoZ,EAC3BG,GAAWpB,EAAOzS,WAAY1F,IAEhC,MAAMqZ,KAACA,QAAMC,GAASX,GAAW3Y,EAAW0X,EAAQS,EAAQ5hB,GAI5DujB,GAAST,GAAQQ,EAAWh0B,OAG5Bk0B,EAAUA,GAAWT,EAEhBjC,EAAIe,UACPyB,EAAW/zB,KAAKqyB,EAEpB,CAEA,OAAO2B,GAASH,GAASE,EAAY7Z,EAAW0X,EAAQnhB,IAAWwjB,CACrE,CAEA,SAASC,GAAW3C,EAAK5X,EAAMH,EAAK2I,EAAOD,GACzCqP,EAAI/X,IAAMA,EACV+X,EAAI5X,KAAOA,EACX4X,EAAI9X,MAAQE,EAAOwI,EACnBoP,EAAI7X,OAASF,EAAM0I,EACnBqP,EAAIpP,MAAQA,EACZoP,EAAIrP,OAASA,CACf,CAEA,SAASiS,GAAWL,EAAO5Z,EAAW0X,EAAQnhB,GAC5C,MAAM2jB,EAAcxC,EAAOyC,QAC3B,IAAI5f,EAACA,IAAGvT,GAAKgZ,EAEb,IAAK,MAAMmY,KAAUyB,EAAO,CAC1B,MAAMvC,EAAMc,EAAOd,IACb1hB,EAAQY,EAAO4hB,EAAOxiB,QAAU,CAACoH,MAAO,EAAGgb,OAAQ,EAAG3H,OAAQ,GAC9DA,EAAS+H,EAAQP,YAAcjiB,EAAMya,QAAW,EACtD,GAAI+H,EAAOzS,WAAY,CACrB,MAAMuC,EAAQjI,EAAUkZ,EAAI9I,EACtBpI,EAASrS,EAAMd,MAAQwiB,EAAIrP,QAC7B9G,OAAQvL,EAAM3H,SAChBhH,EAAI2O,EAAM3H,OAERqpB,EAAIe,SACN4B,GAAW3C,EAAK6C,EAAYza,KAAMzY,EAAG0wB,EAAOoB,WAAaoB,EAAY3a,MAAQ2a,EAAYza,KAAMuI,GAE/FgS,GAAW3C,EAAKrX,EAAUP,KAAO9J,EAAMoiB,OAAQ/wB,EAAGihB,EAAOD,GAE3DrS,EAAM3H,MAAQhH,EACd2O,EAAMoiB,QAAU9P,EAChBjhB,EAAIqwB,EAAI7X,MACH,MACL,MAAMwI,EAAShI,EAAUoZ,EAAIhJ,EACvBnI,EAAQtS,EAAMd,MAAQwiB,EAAIpP,OAC5B/G,OAAQvL,EAAM3H,SAChBuM,EAAI5E,EAAM3H,OAERqpB,EAAIe,SACN4B,GAAW3C,EAAK9c,EAAG2f,EAAY5a,IAAK2I,EAAOyP,EAAOsB,YAAckB,EAAY1a,OAAS0a,EAAY5a,KAEjG0a,GAAW3C,EAAK9c,EAAGyF,EAAUV,IAAM3J,EAAMoiB,OAAQ9P,EAAOD,GAE1DrS,EAAM3H,MAAQuM,EACd5E,EAAMoiB,QAAU/P,EAChBzN,EAAI8c,EAAI9X,KACT,CACH,CAEAS,EAAUzF,EAAIA,EACdyF,EAAUhZ,EAAIA,CAChB,CAwBA,IAAAywB,GAAe,CAQb2C,OAAOtzB,EAAO4H,GACP5H,EAAM8yB,QACT9yB,EAAM8yB,MAAQ,IAIhBlrB,EAAK0pB,SAAW1pB,EAAK0pB,WAAY,EACjC1pB,EAAKlI,SAAWkI,EAAKlI,UAAY,MACjCkI,EAAK0hB,OAAS1hB,EAAK0hB,QAAU,EAE7B1hB,EAAK2rB,QAAU3rB,EAAK2rB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH3rB,KAAKqR,GACHtR,EAAKC,KAAKqR,EACZ,GAEJ,EAEAlZ,EAAM8yB,MAAM9zB,KAAK4I,EACnB,EAOA6rB,UAAUzzB,EAAO0zB,GACf,MAAM/kB,EAAQ3O,EAAM8yB,MAAQ9yB,EAAM8yB,MAAM3wB,QAAQuxB,IAAc,GAChD,IAAV/kB,GACF3O,EAAM8yB,MAAMxW,OAAO3N,EAAO,EAE9B,EAQAtC,UAAUrM,EAAO4H,EAAMtI,GACrBsI,EAAK0pB,SAAWhyB,EAAQgyB,SACxB1pB,EAAKlI,SAAWJ,EAAQI,SACxBkI,EAAK0hB,OAAShqB,EAAQgqB,MACxB,EAUA7oB,OAAOT,EAAOmhB,EAAOD,EAAQyS,GAC3B,IAAK3zB,EACH,OAGF,MAAMqzB,GAAUO,OAAU5zB,EAAMV,QAAQ+xB,OAAOgC,SACzC9B,EAAiBvqB,KAAKgC,IAAImY,EAAQkS,EAAQlS,MAAO,GACjDqQ,EAAkBxqB,KAAKgC,IAAIkY,EAASmS,EAAQnS,OAAQ,GACpD4R,EA5QV,SAA0BA,GACxB,MAAMe,EA1DR,SAAmBf,GACjB,MAAMe,EAAc,GACpB,IAAI50B,EAAGyP,EAAM6hB,EAAKF,EAAKxhB,EAAOiiB,EAE9B,IAAK7xB,EAAI,EAAGyP,GAAQokB,GAAS,IAAI/zB,OAAQE,EAAIyP,IAAQzP,EACnDsxB,EAAMuC,EAAM7zB,KACVS,SAAU2wB,EAAK/wB,SAAUuP,QAAOiiB,cAAc,IAAMP,GACtDsD,EAAY70B,KAAK,CACf2P,MAAO1P,EACPsxB,MACAF,MACAzR,WAAY2R,EAAI/P,eAChB8I,OAAQiH,EAAIjH,OACZza,MAAOA,GAAUwhB,EAAMxhB,EACvBiiB,gBAGJ,OAAO+C,CACT,CAwCsBC,CAAUhB,GACxBxB,EAAWd,EAAaqD,EAAY3iB,QAAO2f,GAAQA,EAAKN,IAAIe,YAAW,GACvE3Y,EAAO6X,EAAaL,EAAiB0D,EAAa,SAAS,GAC3Dpb,EAAQ+X,EAAaL,EAAiB0D,EAAa,UACnDrb,EAAMgY,EAAaL,EAAiB0D,EAAa,QAAQ,GACzDnb,EAAS8X,EAAaL,EAAiB0D,EAAa,WACpDE,EAAmBzD,EAA4BuD,EAAa,KAC5DG,EAAiB1D,EAA4BuD,EAAa,KAEhE,MAAO,CACLvC,WACA2C,WAAYtb,EAAK0E,OAAO7E,GACxB0b,eAAgBzb,EAAM4E,OAAO2W,GAAgB3W,OAAO3E,GAAQ2E,OAAO0W,GACnE7a,UAAWiX,EAAiB0D,EAAa,aACzCM,SAAUxb,EAAK0E,OAAO5E,GAAO4E,OAAO2W,GACpCpV,WAAYpG,EAAI6E,OAAO3E,GAAQ2E,OAAO0W,GAE1C,CA0PkBK,CAAiBp0B,EAAM8yB,OAC/BuB,EAAgBvB,EAAMqB,SACtBG,EAAkBxB,EAAMlU,YAI9B2V,OAAKv0B,EAAM8yB,OAAOvC,IACgB,mBAArBA,EAAIiE,cACbjE,EAAIiE,cAAY,IA+BpB,MAAMC,EAA0BJ,EAAcxrB,QAAO,CAACyf,EAAOuI,IAC3DA,EAAKN,IAAIjxB,UAAwC,IAA7BuxB,EAAKN,IAAIjxB,QAAQG,QAAoB6oB,EAAQA,EAAQ,GAAG,IAAM,EAE9EsI,EAAShvB,OAAO6Y,OAAO,CAC3BuX,WAAY7Q,EACZ+Q,YAAahR,EACbmS,UACA9B,iBACAC,kBACAL,aAAcI,EAAiB,EAAIkD,EACnCrD,cAAeI,EAAkB,IAE7BE,EAAa9vB,OAAOwL,OAAO,GAAIimB,GACrC1B,GAAiBD,GAAYkC,OAAUD,IACvC,MAAMza,EAAYtX,OAAOwL,OAAO,CAC9BskB,aACAU,EAAGb,EACHe,EAAGd,EACH/d,EAAG4f,EAAQ1a,KACXzY,EAAGmzB,EAAQ7a,KACV6a,GAEG5jB,EAASihB,GAAc2D,EAAchX,OAAOiX,GAAkB1D,GAGpEiC,GAASC,EAAMxB,SAAUpY,EAAW0X,EAAQnhB,GAG5CojB,GAASwB,EAAenb,EAAW0X,EAAQnhB,GAGvCojB,GAASyB,EAAiBpb,EAAW0X,EAAQnhB,IAE/CojB,GAASwB,EAAenb,EAAW0X,EAAQnhB,GApRjD,SAA0ByJ,GACxB,MAAMwY,EAAaxY,EAAUwY,WAE7B,SAASgD,EAAUrE,GACjB,MAAMsE,EAAS3tB,KAAKgC,IAAI0oB,EAAWrB,GAAOnX,EAAUmX,GAAM,GAE1D,OADAnX,EAAUmX,IAAQsE,EACXA,CACT,CACAzb,EAAUhZ,GAAKw0B,EAAU,OACzBxb,EAAUzF,GAAKihB,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CA2QIE,CAAiB1b,GAGjBia,GAAWL,EAAMmB,WAAY/a,EAAW0X,EAAQnhB,GAGhDyJ,EAAUzF,GAAKyF,EAAUkZ,EACzBlZ,EAAUhZ,GAAKgZ,EAAUoZ,EAEzBa,GAAWL,EAAMoB,eAAgBhb,EAAW0X,EAAQnhB,GAEpDzP,EAAMkZ,UAAY,CAChBP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAUkZ,EAClC1Z,OAAQQ,EAAUV,IAAMU,EAAUoZ,EAClCpR,OAAQhI,EAAUoZ,EAClBnR,MAAOjI,EAAUkZ,IAInBmC,OAAKzB,EAAM5Z,WAAYmY,IACrB,MAAMd,EAAMc,EAAOd,IACnB3uB,OAAOwL,OAAOmjB,EAAKvwB,EAAMkZ,WACzBqX,EAAI9vB,OAAOyY,EAAUkZ,EAAGlZ,EAAUoZ,EAAG,CAAC3Z,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAC,GAE9E,GC7ba,MAAMmc,GAOnBC,eAAe72B,EAAQumB,GAAa,CAQpCuQ,eAAevb,GACb,OAAO,CACT,CASAjZ,iBAAiBP,EAAOZ,EAAM41B,GAAU,CAQxCC,oBAAoBj1B,EAAOZ,EAAM41B,GAAU,CAK3CE,sBACE,OAAO,CACT,CASAC,eAAe/b,EAAS+H,EAAOD,EAAQsD,GAGrC,OAFArD,EAAQna,KAAKgC,IAAI,EAAGmY,GAAS/H,EAAQ+H,OACrCD,EAASA,GAAU9H,EAAQ8H,OACpB,CACLC,QACAD,OAAQla,KAAKgC,IAAI,EAAGwb,EAAcxd,KAAK+D,MAAMoW,EAAQqD,GAAetD,GAExE,CAMAkU,WAAWn3B,GACT,OAAO,CACT,CAMAo3B,aAAalpB,GAEb,ECrEa,MAAMmpB,WAAsBT,GACzCC,eAAeltB,GAIb,OAAOA,GAAQA,EAAKmO,YAAcnO,EAAKmO,WAAW,OAAS,IAC7D,CACAsf,aAAalpB,GACXA,EAAO7M,QAAQmN,WAAY,CAC7B,ECRF,MAAM8oB,GAAc,WAOdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgB7zB,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAM8zB,KAAuBC,KAA+B,CAACC,SAAS,GAMtE,SAASC,GAAet2B,EAAOZ,EAAM41B,GACnCh1B,EAAM/B,OAAOg3B,oBAAoB71B,EAAM41B,EAAUmB,GACnD,CAcA,SAASI,GAAiBC,EAAUv4B,GAClC,IAAK,MAAMw4B,KAAQD,EACjB,GAAIC,IAASx4B,GAAUw4B,EAAKC,SAASz4B,GACnC,OAAO,CAGb,CAEA,SAAS04B,GAAqB32B,EAAOZ,EAAM41B,GACzC,MAAM/2B,EAAS+B,EAAM/B,OACf24B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMhZ,KAAS+Y,EAClBC,EAAUA,GAAWR,GAAiBxY,EAAMiZ,WAAY/4B,GACxD84B,EAAUA,IAAYR,GAAiBxY,EAAMkZ,aAAch5B,GAEzD84B,GACF/B,OAIJ,OADA4B,EAASM,QAAQh5B,SAAU,CAACi5B,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,SAASS,GAAqBr3B,EAAOZ,EAAM41B,GACzC,MAAM/2B,EAAS+B,EAAM/B,OACf24B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMhZ,KAAS+Y,EAClBC,EAAUA,GAAWR,GAAiBxY,EAAMkZ,aAAch5B,GAC1D84B,EAAUA,IAAYR,GAAiBxY,EAAMiZ,WAAY/4B,GAEvD84B,GACF/B,OAIJ,OADA4B,EAASM,QAAQh5B,SAAU,CAACi5B,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,MAAMU,GAAqB,IAAIpxB,IAC/B,IAAIqxB,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAMl6B,OAAOm6B,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB1wB,SAAQ,CAAC+wB,EAAQ33B,KAC9BA,EAAM43B,0BAA4BH,GACpCE,OAGN,CAgBA,SAASE,GAAqB73B,EAAOZ,EAAM41B,GACzC,MAAM/2B,EAAS+B,EAAM/B,OACf65B,EAAY75B,IAAU85B,OAAe95B,GAC3C,IAAK65B,EACH,OAEF,MAAMH,GAASK,QAAU,CAAC7W,EAAOD,KAC/B,MAAMkR,EAAI0F,EAAUG,YACpBjD,EAAS7T,EAAOD,GACZkR,EAAI0F,EAAUG,aAQhBjD,MAEDz3B,QAGGq5B,EAAW,IAAIsB,gBAAepB,IAClC,MAAM/Y,EAAQ+Y,EAAQ,GAChB3V,EAAQpD,EAAMoa,YAAYhX,MAC1BD,EAASnD,EAAMoa,YAAYjX,OAInB,IAAVC,GAA0B,IAAXD,GAGnByW,EAAOxW,EAAOD,MAKhB,OAHA0V,EAASM,QAAQY,GAhDnB,SAAuC93B,EAAO23B,GACvCL,GAAmBvpB,MACtBxQ,OAAOgD,iBAAiB,SAAUi3B,IAEpCF,GAAmB/uB,IAAIvI,EAAO23B,EAChC,CA4CES,CAA8Bp4B,EAAO23B,GAE9Bf,CACT,CAEA,SAASyB,GAAgBr4B,EAAOZ,EAAMw3B,GAChCA,GACFA,EAAS0B,aAEE,WAATl5B,GAnDN,SAAyCY,GACvCs3B,GAAmBjuB,OAAOrJ,GACrBs3B,GAAmBvpB,MACtBxQ,OAAO03B,oBAAoB,SAAUuC,GAEzC,CA+CIe,CAAgCv4B,EAEpC,CAEA,SAASw4B,GAAqBx4B,EAAOZ,EAAM41B,GACzC,MAAM/2B,EAAS+B,EAAM/B,OACfw6B,GAAQT,QAAWvvB,IAIL,OAAdzI,EAAM6R,KACRmjB,EA1IN,SAAyBvsB,EAAOzI,GAC9B,MAAMZ,EAAOo2B,GAAY/sB,EAAMrJ,OAASqJ,EAAMrJ,MACxCqU,EAACA,EAACvT,EAAEA,IAAK8vB,OAAoBvnB,EAAOzI,GAC1C,MAAO,CACLZ,OACAY,QACA04B,OAAQjwB,EACRgL,OAASnQ,IAANmQ,EAAkBA,EAAI,KACzBvT,OAASoD,IAANpD,EAAkBA,EAAI,KAE7B,CAgIey4B,CAAgBlwB,EAAOzI,MAEjCA,GAIH,OAxJF,SAAqBy2B,EAAMr3B,EAAM41B,GAC/ByB,EAAKl2B,iBAAiBnB,EAAM41B,EAAUmB,GACxC,CAoJEyC,CAAY36B,EAAQmB,EAAMq5B,GAEnBA,CACT,CAMe,MAAMI,WAAoBhE,GAOvCC,eAAe72B,EAAQumB,GAIrB,MAAMhL,EAAUvb,GAAUA,EAAO8X,YAAc9X,EAAO8X,WAAW,MASjE,OAAIyD,GAAWA,EAAQvb,SAAWA,GA3OtC,SAAoBA,EAAQumB,GAC1B,MAAMK,EAAQ5mB,EAAO4mB,MAIfiU,EAAe76B,EAAO86B,aAAa,UACnCC,EAAc/6B,EAAO86B,aAAa,SAsBxC,GAnBA96B,EAAOs3B,IAAe,CACpBzuB,QAAS,CACPoa,OAAQ4X,EACR3X,MAAO6X,EACPnU,MAAO,CACLplB,QAASolB,EAAMplB,QACfyhB,OAAQ2D,EAAM3D,OACdC,MAAO0D,EAAM1D,SAQnB0D,EAAMplB,QAAUolB,EAAMplB,SAAW,QAEjColB,EAAMoU,UAAYpU,EAAMoU,WAAa,aAEjC/C,GAAc8C,GAAc,CAC9B,MAAME,GAAeC,OAAal7B,EAAQ,cACrBqF,IAAjB41B,IACFj7B,EAAOkjB,MAAQ+X,EAElB,CAED,GAAIhD,GAAc4C,GAChB,GAA4B,KAAxB76B,EAAO4mB,MAAM3D,OAIfjjB,EAAOijB,OAASjjB,EAAOkjB,OAASqD,GAAe,OAC1C,CACL,MAAM4U,GAAgBD,OAAal7B,EAAQ,eACrBqF,IAAlB81B,IACFn7B,EAAOijB,OAASkY,EAEnB,CAIL,CA4LMC,CAAWp7B,EAAQumB,GACZhL,GAGF,IACT,CAKAub,eAAevb,GACb,MAAMvb,EAASub,EAAQvb,OACvB,IAAKA,EAAOs3B,IACV,OAAO,EAGT,MAAMzuB,EAAU7I,EAAOs3B,IAAazuB,QACpC,CAAC,SAAU,SAASF,SAAS0D,IAC3B,MAAMjI,EAAQyE,EAAQwD,IAClBsW,OAAcve,GAChBpE,EAAOq7B,gBAAgBhvB,GAEvBrM,EAAOs7B,aAAajvB,EAAMjI,MAI9B,MAAMwiB,EAAQ/d,EAAQ+d,OAAS,GAa/B,OAZAjjB,OAAOC,KAAKgjB,GAAOje,SAASgG,IAC1B3O,EAAO4mB,MAAMjY,GAAOiY,EAAMjY,EAAI,IAQhC3O,EAAOkjB,MAAQljB,EAAOkjB,aAEfljB,EAAOs3B,KACP,CACT,CAQAh1B,iBAAiBP,EAAOZ,EAAM41B,GAE5BjvB,KAAKkvB,oBAAoBj1B,EAAOZ,GAEhC,MAAMo6B,EAAUx5B,EAAMy5B,WAAaz5B,EAAMy5B,SAAW,IAM9CzL,EALW,CACf0L,OAAQ/C,GACRgD,OAAQtC,GACRM,OAAQE,IAEez4B,IAASo5B,GAClCgB,EAAQp6B,GAAQ4uB,EAAQhuB,EAAOZ,EAAM41B,EACvC,CAOAC,oBAAoBj1B,EAAOZ,GACzB,MAAMo6B,EAAUx5B,EAAMy5B,WAAaz5B,EAAMy5B,SAAW,IAC9ChB,EAAQe,EAAQp6B,GAEtB,IAAKq5B,EACH,QAGe,CACfiB,OAAQrB,GACRsB,OAAQtB,GACRV,OAAQU,IAEej5B,IAASk3B,IAC1Bt2B,EAAOZ,EAAMq5B,GACrBe,EAAQp6B,QAAQkE,CAClB,CAEA4xB,sBACE,OAAO33B,OAAOm6B,gBAChB,CAQAvC,eAAel3B,EAAQkjB,EAAOD,EAAQsD,GACpC,OAAO2Q,OAAel3B,EAAQkjB,EAAOD,EAAQsD,EAC/C,CAKA4Q,WAAWn3B,GACT,MAAM65B,GAAYC,OAAe95B,GACjC,SAAU65B,IAAaA,EAAU8B,YACnC,EC1XK,SAASC,GAAgB57B,GAC9B,QAAK67B,UAAiD,oBAApBC,iBAAmC97B,aAAkB87B,gBAC9EzE,GAEFuD,EACT,CCLe,MAAMmB,GAEnBroB,gBAAkB,GAClBA,0BAAuBrO,EAIvBkI,QAAS,EAITyuB,gBAAgB7L,GACd,MAAM3a,EAACA,IAAGvT,GAAK6F,KAAKypB,SAAS,CAAC,IAAK,KAAMpB,GACzC,MAAO,CAAC3a,IAAGvT,IACb,CAEAg6B,WACE,OAAO9P,OAASrkB,KAAK0N,KAAM2W,OAASrkB,KAAK7F,EAC3C,CASAsvB,SAAS3hB,EAAiBssB,GACxB,MAAM7zB,EAAQP,KAAKsH,YACnB,IAAK8sB,IAAU7zB,EAEb,OAAOP,KAET,MAAMq0B,EAA+B,GAIrC,OAHAvsB,EAAMjH,SAAS0D,IACb8vB,EAAI9vB,GAAQhE,EAAMgE,IAAShE,EAAMgE,GAAMkB,SAAWlF,EAAMgE,GAAMgB,IAAMvF,KAAKuE,EAAe,IAEnF8vB,CACT,EC3BK,SAASC,GAASpsB,EAAO9N,GAC9B,MAAMm6B,EAAWrsB,EAAM3O,QAAQa,MACzBo6B,EA8BR,SAA2BtsB,GACzB,MAAM6R,EAAS7R,EAAM3O,QAAQwgB,OACvB0a,EAAavsB,EAAMwsB,YACnBC,EAAWzsB,EAAMwP,QAAU+c,GAAc1a,EAAS,EAAI,GACtD6a,EAAW1sB,EAAM2sB,WAAaJ,EACpC,OAAOxzB,KAAK+D,MAAM/D,KAAKC,IAAIyzB,EAAUC,GACvC,CApC6BE,CAAkB5sB,GACvC6sB,EAAa9zB,KAAKC,IAAIqzB,EAASS,eAAiBR,EAAoBA,GACpES,EAAeV,EAASW,MAAMC,QAgEtC,SAAyB/6B,GACvB,MAAMg7B,EAAS,GACf,IAAIl8B,EAAGyP,EACP,IAAKzP,EAAI,EAAGyP,EAAOvO,EAAMpB,OAAQE,EAAIyP,EAAMzP,IACrCkB,EAAMlB,GAAGg8B,OACXE,EAAOn8B,KAAKC,GAGhB,OAAOk8B,CACT,CAzEgDC,CAAgBj7B,GAAS,GACjEk7B,EAAkBL,EAAaj8B,OAC/Bu8B,EAAQN,EAAa,GACrB3Z,EAAO2Z,EAAaK,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBP,EAEpB,OAwEJ,SAAoB36B,EAAOo7B,EAAUP,EAAc3W,GACjD,IAEIplB,EAFAgX,EAAQ,EACR+M,EAAOgY,EAAa,GAIxB,IADA3W,EAAUrd,KAAKw0B,KAAKnX,GACfplB,EAAI,EAAGA,EAAIkB,EAAMpB,OAAQE,IACxBA,IAAM+jB,IACRuY,EAASv8B,KAAKmB,EAAMlB,IACpBgX,IACA+M,EAAOgY,EAAa/kB,EAAQoO,GAGlC,CAtFIoX,CAAWt7B,EAAOo7B,EAAUP,EAAcK,EAAkBP,GACrDS,EAGT,MAAMlX,EA6BR,SAA0B2W,EAAc76B,EAAO26B,GAC7C,MAAMY,EA6FR,SAAwBvf,GACtB,MAAMwf,EAAMxf,EAAIpd,OAChB,IAAIE,EAAG8tB,EAEP,GAAI4O,EAAM,EACR,OAAO,EAGT,IAAK5O,EAAO5Q,EAAI,GAAIld,EAAI,EAAGA,EAAI08B,IAAO18B,EACpC,GAAIkd,EAAIld,GAAKkd,EAAIld,EAAI,KAAO8tB,EAC1B,OAAO,EAGX,OAAOA,CACT,CA3G2B6O,CAAeZ,GAClC3W,EAAUlkB,EAAMpB,OAAS+7B,EAI/B,IAAKY,EACH,OAAO10B,KAAKgC,IAAIqb,EAAS,GAG3B,MAAMwX,GAAUC,OAAWJ,GAC3B,IAAK,IAAIz8B,EAAI,EAAGyP,EAAOmtB,EAAQ98B,OAAS,EAAGE,EAAIyP,EAAMzP,IAAK,CACxD,MAAMyK,EAASmyB,EAAQ58B,GACvB,GAAIyK,EAAS2a,EACX,OAAO3a,CAEX,CACA,OAAO1C,KAAKgC,IAAIqb,EAAS,EAC3B,CA/CkB0X,CAAiBf,EAAc76B,EAAO26B,GAEtD,GAAIO,EAAkB,EAAG,CACvB,IAAIp8B,EAAGyP,EACP,MAAMstB,EAAkBX,EAAkB,EAAIr0B,KAAKi1B,OAAO5a,EAAOia,IAAUD,EAAkB,IAAM,KAEnG,IADAvX,GAAK3jB,EAAOo7B,EAAUlX,GAASzD,OAAcob,GAAmB,EAAIV,EAAQU,EAAiBV,GACxFr8B,EAAI,EAAGyP,EAAO2sB,EAAkB,EAAGp8B,EAAIyP,EAAMzP,IAChD6kB,GAAK3jB,EAAOo7B,EAAUlX,EAAS2W,EAAa/7B,GAAI+7B,EAAa/7B,EAAI,IAGnE,OADA6kB,GAAK3jB,EAAOo7B,EAAUlX,EAAShD,GAAMT,OAAcob,GAAmB77B,EAAMpB,OAASsiB,EAAO2a,GACrFT,CACR,CAED,OADAzX,GAAK3jB,EAAOo7B,EAAUlX,GACfkX,CACT,CA6EA,SAASzX,GAAK3jB,EAAOo7B,EAAUlX,EAAS6X,EAAYC,GAClD,MAAMj1B,GAAQ0M,OAAesoB,EAAY,GACnC7tB,EAAMrH,KAAKC,KAAI2M,OAAeuoB,EAAUh8B,EAAMpB,QAASoB,EAAMpB,QACnE,IACIA,EAAQE,EAAG+jB,EADX/M,EAAQ,EAWZ,IARAoO,EAAUrd,KAAKw0B,KAAKnX,GAChB8X,IACFp9B,EAASo9B,EAAWD,EACpB7X,EAAUtlB,EAASiI,KAAK+D,MAAMhM,EAASslB,IAGzCrB,EAAO9b,EAEA8b,EAAO,GACZ/M,IACA+M,EAAOhc,KAAKi1B,MAAM/0B,EAAQ+O,EAAQoO,GAGpC,IAAKplB,EAAI+H,KAAKgC,IAAI9B,EAAO,GAAIjI,EAAIoP,EAAKpP,IAChCA,IAAM+jB,IACRuY,EAASv8B,KAAKmB,EAAMlB,IACpBgX,IACA+M,EAAOhc,KAAKi1B,MAAM/0B,EAAQ+O,EAAQoO,GAGxC,CC7IA,MACM+X,GAAiB,CAACnuB,EAAOyQ,EAAMoB,IAAoB,QAATpB,GAA2B,SAATA,EAAkBzQ,EAAMyQ,GAAQoB,EAAS7R,EAAMyQ,GAAQoB,EACnHuc,GAAgB,CAACC,EAAavB,IAAkB/zB,KAAKC,IAAI8zB,GAAiBuB,EAAaA,GAY7F,SAASC,GAAOpgB,EAAKqgB,GACnB,MAAMrB,EAAS,GACTsB,EAAYtgB,EAAIpd,OAASy9B,EACzBb,EAAMxf,EAAIpd,OAChB,IAAIE,EAAI,EAER,KAAOA,EAAI08B,EAAK18B,GAAKw9B,EACnBtB,EAAOn8B,KAAKmd,EAAInV,KAAK+D,MAAM9L,KAE7B,OAAOk8B,CACT,CAOA,SAASuB,GAAoBzuB,EAAOU,EAAOguB,GACzC,MAAM59B,EAASkP,EAAM9N,MAAMpB,OACrB69B,EAAa51B,KAAKC,IAAI0H,EAAO5P,EAAS,GACtCmI,EAAQ+G,EAAM8T,YACd1T,EAAMJ,EAAM+T,UACZ6a,EAAU,KAChB,IACI/c,EADAgd,EAAY7uB,EAAM4P,gBAAgB+e,GAGtC,KAAID,IAEA7c,EADa,IAAX/gB,EACOiI,KAAKgC,IAAI8zB,EAAY51B,EAAOmH,EAAMyuB,GACxB,IAAVnuB,GACCV,EAAM4P,gBAAgB,GAAKif,GAAa,GAExCA,EAAY7uB,EAAM4P,gBAAgB+e,EAAa,IAAM,EAEjEE,GAAaF,EAAajuB,EAAQmR,GAAUA,EAGxCgd,EAAY51B,EAAQ21B,GAAWC,EAAYzuB,EAAMwuB,IAIvD,OAAOC,CACT,CAuBA,SAASC,GAAkBz9B,GACzB,OAAOA,EAAQ09B,UAAY19B,EAAQk7B,WAAa,CAClD,CAKA,SAASyC,GAAe39B,EAAS49B,GAC/B,IAAK59B,EAAQG,QACX,OAAO,EAGT,MAAM09B,GAAOC,QAAO99B,EAAQ69B,KAAMD,GAC5B7J,GAAUO,OAAUt0B,EAAQ+zB,SAGlC,QAFcvmB,OAAQxN,EAAQM,MAAQN,EAAQM,KAAKb,OAAS,GAE5Co+B,EAAKE,WAAchK,EAAQnS,MAC7C,CAiBA,SAASoc,GAAWC,EAAO79B,EAAU0O,GACnC,IAAIgsB,GAAMoD,QAAmBD,GAI7B,OAHInvB,GAAyB,UAAb1O,IAA2B0O,GAAwB,UAAb1O,KACpD06B,EApHiB,CAACmD,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAoHhFE,CAAarD,IAEdA,CACT,CAuCe,MAAMsD,WAAc1D,GAGjCl0B,YAAYsE,GACViW,QAGAta,KAAK6K,GAAKxG,EAAIwG,GAEd7K,KAAK3G,KAAOgL,EAAIhL,KAEhB2G,KAAKzG,aAAUgE,EAEfyC,KAAK8L,IAAMzH,EAAIyH,IAEf9L,KAAK/F,MAAQoK,EAAIpK,MAIjB+F,KAAKyS,SAAMlV,EAEXyC,KAAK2S,YAASpV,EAEdyC,KAAK4S,UAAOrV,EAEZyC,KAAK0S,WAAQnV,EAEbyC,KAAKob,WAAQ7d,EAEbyC,KAAKmb,YAAS5d,EACdyC,KAAK43B,SAAW,CACdhlB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGV3S,KAAKiiB,cAAW1kB,EAEhByC,KAAKkiB,eAAY3kB,EAEjByC,KAAK63B,gBAAat6B,EAElByC,KAAK83B,mBAAgBv6B,EAErByC,KAAK+3B,iBAAcx6B,EAEnByC,KAAKg4B,kBAAez6B,EAIpByC,KAAKyK,UAAOlN,EAEZyC,KAAKi4B,mBAAgB16B,EACrByC,KAAKkB,SAAM3D,EACXyC,KAAKiD,SAAM1F,EACXyC,KAAKk4B,YAAS36B,EAEdyC,KAAK5F,MAAQ,GAEb4F,KAAKm4B,eAAiB,KAEtBn4B,KAAKo4B,YAAc,KAEnBp4B,KAAKq4B,YAAc,KACnBr4B,KAAK0X,QAAU,EACf1X,KAAK60B,WAAa,EAClB70B,KAAKs4B,kBAAoB,GAEzBt4B,KAAKgc,iBAAcze,EAEnByC,KAAKic,eAAY1e,EACjByC,KAAKynB,gBAAiB,EACtBznB,KAAKu4B,cAAWh7B,EAChByC,KAAKw4B,cAAWj7B,EAChByC,KAAKy4B,mBAAgBl7B,EACrByC,KAAK04B,mBAAgBn7B,EACrByC,KAAK24B,aAAe,EACpB34B,KAAK44B,aAAe,EACpB54B,KAAKmX,OAAS,GACdnX,KAAK64B,mBAAoB,EACzB74B,KAAK0M,cAAWnP,CAClB,CAMAupB,KAAKvtB,GACHyG,KAAKzG,QAAUA,EAAQu/B,WAAW94B,KAAKgQ,cAEvChQ,KAAKyK,KAAOlR,EAAQkR,KAGpBzK,KAAKw4B,SAAWx4B,KAAKvH,MAAMc,EAAQ2H,KACnClB,KAAKu4B,SAAWv4B,KAAKvH,MAAMc,EAAQ0J,KACnCjD,KAAK04B,cAAgB14B,KAAKvH,MAAMc,EAAQw/B,cACxC/4B,KAAKy4B,cAAgBz4B,KAAKvH,MAAMc,EAAQy/B,aAC1C,CAQAvgC,MAAMob,EAAKjL,GACT,OAAOiL,CACT,CAOA5B,gBACE,IAAIumB,SAACA,EAAQD,SAAEA,EAAQG,cAAEA,gBAAeD,GAAiBz4B,KAKzD,OAJAw4B,GAAWS,OAAgBT,EAAU9mB,OAAOC,mBAC5C4mB,GAAWU,OAAgBV,EAAU7mB,OAAOE,mBAC5C8mB,GAAgBO,OAAgBP,EAAehnB,OAAOC,mBACtD8mB,GAAgBQ,OAAgBR,EAAe/mB,OAAOE,mBAC/C,CACL1Q,KAAK+3B,OAAgBT,EAAUE,GAC/Bz1B,KAAKg2B,OAAgBV,EAAUE,GAC/B1mB,YAAY3I,OAASovB,GACrBxmB,YAAY5I,OAASmvB,GAEzB,CAQAlnB,UAAUC,GAER,IACIJ,GADAhQ,IAACA,MAAK+B,aAAK8O,aAAYC,GAAchS,KAAKiS,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAAC9Q,MAAK+B,OAGf,MAAMi2B,EAAQl5B,KAAKiK,0BACnB,IAAK,IAAI/Q,EAAI,EAAGyP,EAAOuwB,EAAMlgC,OAAQE,EAAIyP,IAAQzP,EAC/CgY,EAAQgoB,EAAMhgC,GAAGiR,WAAWkH,UAAUrR,KAAMsR,GACvCS,IACH7Q,EAAMD,KAAKC,IAAIA,EAAKgQ,EAAMhQ,MAEvB8Q,IACH/O,EAAMhC,KAAKgC,IAAIA,EAAKiO,EAAMjO,MAQ9B,OAHA/B,EAAM8Q,GAAc9Q,EAAM+B,EAAMA,EAAM/B,EACtC+B,EAAM8O,GAAc7Q,EAAM+B,EAAM/B,EAAM+B,EAE/B,CACL/B,KAAK+3B,OAAgB/3B,GAAK+3B,OAAgBh2B,EAAK/B,IAC/C+B,KAAKg2B,OAAgBh2B,GAAKg2B,OAAgB/3B,EAAK+B,IAEnD,CAOA8oB,aACE,MAAO,CACLnZ,KAAM5S,KAAK+3B,aAAe,EAC1BtlB,IAAKzS,KAAK63B,YAAc,EACxBnlB,MAAO1S,KAAKg4B,cAAgB,EAC5BrlB,OAAQ3S,KAAK83B,eAAiB,EAElC,CAOAqB,WACE,OAAOn5B,KAAK5F,KACd,CAKAsW,YACE,MAAMnY,EAAOyH,KAAK/F,MAAM1B,KACxB,OAAOyH,KAAKzG,QAAQD,SAAW0G,KAAKya,eAAiBliB,EAAK6gC,QAAU7gC,EAAK8gC,UAAY9gC,EAAKe,QAAU,EACtG,CAKAggC,cAAcnmB,EAAYnT,KAAK/F,MAAMkZ,WAEnC,OADcnT,KAAKo4B,cAAgBp4B,KAAKo4B,YAAcp4B,KAAKu5B,mBAAmBpmB,GAEhF,CAGAsb,eACEzuB,KAAKmX,OAAS,GACdnX,KAAK64B,mBAAoB,CAC3B,CAMAW,gBACEl4B,OAAKtB,KAAKzG,QAAQigC,aAAc,CAACx5B,MACnC,CAUAtF,OAAOunB,EAAUC,EAAWuX,GAC1B,MAAMvf,YAACA,EAAWwf,MAAEA,EAAOt/B,MAAOm6B,GAAYv0B,KAAKzG,QAC7CogC,EAAapF,EAASoF,WAG5B35B,KAAKw5B,eAGLx5B,KAAKiiB,SAAWA,EAChBjiB,KAAKkiB,UAAYA,EACjBliB,KAAK43B,SAAW6B,EAAU59B,OAAOwL,OAAO,CACtCuL,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACP8mB,GAEHz5B,KAAK5F,MAAQ,KACb4F,KAAKq4B,YAAc,KACnBr4B,KAAKm4B,eAAiB,KACtBn4B,KAAKo4B,YAAc,KAGnBp4B,KAAK45B,sBACL55B,KAAK65B,gBACL75B,KAAK85B,qBAEL95B,KAAK60B,WAAa70B,KAAKya,eACnBza,KAAKob,MAAQqe,EAAQ7mB,KAAO6mB,EAAQ/mB,MACpC1S,KAAKmb,OAASse,EAAQhnB,IAAMgnB,EAAQ9mB,OAGnC3S,KAAK64B,oBACR74B,KAAK+5B,mBACL/5B,KAAKg6B,sBACLh6B,KAAKi6B,kBACLj6B,KAAKk4B,QAASgC,OAAUl6B,KAAM05B,EAAOxf,GACrCla,KAAK64B,mBAAoB,GAG3B74B,KAAKm6B,mBAELn6B,KAAK5F,MAAQ4F,KAAKo6B,cAAgB,GAGlCp6B,KAAKq6B,kBAIL,MAAMC,EAAkBX,EAAa35B,KAAK5F,MAAMpB,OAChDgH,KAAKu6B,sBAAsBD,EAAkB9D,GAAOx2B,KAAK5F,MAAOu/B,GAAc35B,KAAK5F,OAMnF4F,KAAKsG,YAGLtG,KAAKw6B,+BACLx6B,KAAKy6B,yBACLz6B,KAAK06B,8BAGDnG,EAAS76B,UAAY66B,EAASD,UAAgC,SAApBC,EAASoG,UACrD36B,KAAK5F,MAAQk6B,GAASt0B,KAAMA,KAAK5F,OACjC4F,KAAKq4B,YAAc,KACnBr4B,KAAK46B,iBAGHN,GAEFt6B,KAAKu6B,sBAAsBv6B,KAAK5F,OAGlC4F,KAAK66B,YACL76B,KAAK86B,MACL96B,KAAK+6B,WAIL/6B,KAAKg7B,aACP,CAKA10B,YACE,IACImW,EAAYE,EADZse,EAAgBj7B,KAAKzG,QAAQ8O,QAG7BrI,KAAKya,gBACPgC,EAAazc,KAAK4S,KAClB+J,EAAW3c,KAAK0S,QAEhB+J,EAAazc,KAAKyS,IAClBkK,EAAW3c,KAAK2S,OAEhBsoB,GAAiBA,GAEnBj7B,KAAKgc,YAAcS,EACnBzc,KAAKic,UAAYU,EACjB3c,KAAKynB,eAAiBwT,EACtBj7B,KAAK0X,QAAUiF,EAAWF,EAC1Bzc,KAAKk7B,eAAiBl7B,KAAKzG,QAAQ4hC,aACrC,CAEAH,eACE15B,OAAKtB,KAAKzG,QAAQyhC,YAAa,CAACh7B,MAClC,CAIA45B,uBACEt4B,OAAKtB,KAAKzG,QAAQqgC,oBAAqB,CAAC55B,MAC1C,CACA65B,gBAEM75B,KAAKya,gBAEPza,KAAKob,MAAQpb,KAAKiiB,SAClBjiB,KAAK4S,KAAO,EACZ5S,KAAK0S,MAAQ1S,KAAKob,QAElBpb,KAAKmb,OAASnb,KAAKkiB,UAGnBliB,KAAKyS,IAAM,EACXzS,KAAK2S,OAAS3S,KAAKmb,QAIrBnb,KAAK+3B,YAAc,EACnB/3B,KAAK63B,WAAa,EAClB73B,KAAKg4B,aAAe,EACpBh4B,KAAK83B,cAAgB,CACvB,CACAgC,sBACEx4B,OAAKtB,KAAKzG,QAAQugC,mBAAoB,CAAC95B,MACzC,CAEAo7B,WAAWxf,GACT5b,KAAK/F,MAAMohC,cAAczf,EAAM5b,KAAKgQ,eACpC1O,OAAKtB,KAAKzG,QAAQqiB,GAAO,CAAC5b,MAC5B,CAGA+5B,mBACE/5B,KAAKo7B,WAAW,mBAClB,CACApB,sBAAsB,CACtBC,kBACEj6B,KAAKo7B,WAAW,kBAClB,CAGAjB,mBACEn6B,KAAKo7B,WAAW,mBAClB,CAIAhB,aACE,MAAO,EACT,CACAC,kBACEr6B,KAAKo7B,WAAW,kBAClB,CAEAE,+BACEh6B,OAAKtB,KAAKzG,QAAQ+hC,4BAA6B,CAACt7B,MAClD,CAKAu7B,mBAAmBnhC,GACjB,MAAMm6B,EAAWv0B,KAAKzG,QAAQa,MAC9B,IAAIlB,EAAGyP,EAAM1G,EACb,IAAK/I,EAAI,EAAGyP,EAAOvO,EAAMpB,OAAQE,EAAIyP,EAAMzP,IACzC+I,EAAO7H,EAAMlB,GACb+I,EAAK9I,OAAQmI,OAAKizB,EAASiH,SAAU,CAACv5B,EAAK3F,MAAOpD,EAAGkB,GAAQ4F,KAEjE,CACAy7B,8BACEn6B,OAAKtB,KAAKzG,QAAQkiC,2BAA4B,CAACz7B,MACjD,CAIAw6B,gCACEl5B,OAAKtB,KAAKzG,QAAQihC,6BAA8B,CAACx6B,MACnD,CACAy6B,yBACE,MAAMlhC,EAAUyG,KAAKzG,QACfg7B,EAAWh7B,EAAQa,MACnBshC,EAAWpF,GAAct2B,KAAK5F,MAAMpB,OAAQO,EAAQa,MAAM46B,eAC1D2G,EAAcpH,EAASoH,aAAe,EACtCC,EAAcrH,EAASqH,YAC7B,IACIC,EAAW3Z,EAAW4Z,EADtB7D,EAAgB0D,EAGpB,IAAK37B,KAAK+7B,eAAiBxH,EAAS76B,SAAWiiC,GAAeC,GAAeF,GAAY,IAAM17B,KAAKya,eAElG,YADAza,KAAKi4B,cAAgB0D,GAIvB,MAAMK,EAAah8B,KAAKi8B,iBAClBC,EAAgBF,EAAWG,OAAO/gB,MAClCghB,EAAiBJ,EAAWK,QAAQlhB,OAIpC8G,GAAWqa,OAAYt8B,KAAK/F,MAAMmhB,MAAQ8gB,EAAe,EAAGl8B,KAAKiiB,UACvE4Z,EAAYtiC,EAAQwgB,OAAS/Z,KAAKiiB,SAAWyZ,EAAWzZ,GAAYyZ,EAAW,GAG3EQ,EAAgB,EAAIL,IACtBA,EAAY5Z,GAAYyZ,GAAYniC,EAAQwgB,OAAS,GAAM,IAC3DmI,EAAYliB,KAAKkiB,UAAY8U,GAAkBz9B,EAAQygB,MACvDua,EAASjH,QAAU4J,GAAe39B,EAAQK,MAAOoG,KAAK/F,MAAMV,QAAQ69B,MACpE0E,EAAmB76B,KAAKioB,KAAKgT,EAAgBA,EAAgBE,EAAiBA,GAC9EnE,GAAgBsE,OAAUt7B,KAAKC,IAC7BD,KAAKu7B,MAAKF,QAAaN,EAAWK,QAAQlhB,OAAS,GAAK0gB,GAAW,EAAI,IACvE56B,KAAKu7B,MAAKF,OAAYpa,EAAY4Z,GAAkB,EAAI,IAAM76B,KAAKu7B,MAAKF,OAAYF,EAAiBN,GAAkB,EAAI,MAE7H7D,EAAgBh3B,KAAKgC,IAAI04B,EAAa16B,KAAKC,IAAI06B,EAAa3D,KAG9Dj4B,KAAKi4B,cAAgBA,CACvB,CACAyC,+BACEp5B,OAAKtB,KAAKzG,QAAQmhC,4BAA6B,CAAC16B,MAClD,CACA46B,gBAAgB,CAIhBC,aACEv5B,OAAKtB,KAAKzG,QAAQshC,UAAW,CAAC76B,MAChC,CACA86B,MAEE,MAAMzV,EAAU,CACdjK,MAAO,EACPD,OAAQ,IAGJlhB,MAACA,EAAOV,SAAUa,MAAOm6B,EAAU36B,MAAO6iC,EAAWziB,KAAM0iB,IAAa18B,KACxEtG,EAAUsG,KAAK+7B,aACfthB,EAAeza,KAAKya,eAE1B,GAAI/gB,EAAS,CACX,MAAMijC,EAAczF,GAAeuF,EAAWxiC,EAAMV,QAAQ69B,MAU5D,GATI3c,GACF4K,EAAQjK,MAAQpb,KAAKiiB,SACrBoD,EAAQlK,OAAS6b,GAAkB0F,GAAYC,IAE/CtX,EAAQlK,OAASnb,KAAKkiB,UACtBmD,EAAQjK,MAAQ4b,GAAkB0F,GAAYC,GAI5CpI,EAAS76B,SAAWsG,KAAK5F,MAAMpB,OAAQ,CACzC,MAAMu8B,MAACA,OAAOja,SAAM6gB,UAAQE,GAAWr8B,KAAKi8B,iBACtCW,EAAiC,EAAnBrI,EAASjH,QACvBuP,GAAe7c,OAAUhgB,KAAKi4B,eAC9BhX,EAAMhgB,KAAKggB,IAAI4b,GACf1b,EAAMlgB,KAAKkgB,IAAI0b,GAErB,GAAIpiB,EAAc,CAEhB,MAAMqiB,EAAcvI,EAASwI,OAAS,EAAI5b,EAAMgb,EAAO/gB,MAAQ6F,EAAMob,EAAQlhB,OAC7EkK,EAAQlK,OAASla,KAAKC,IAAIlB,KAAKkiB,UAAWmD,EAAQlK,OAAS2hB,EAAcF,EACpE,MAGL,MAAMI,EAAazI,EAASwI,OAAS,EAAI9b,EAAMkb,EAAO/gB,MAAQ+F,EAAMkb,EAAQlhB,OAE5EkK,EAAQjK,MAAQna,KAAKC,IAAIlB,KAAKiiB,SAAUoD,EAAQjK,MAAQ4hB,EAAaJ,EACtE,CACD58B,KAAKi9B,kBAAkB1H,EAAOja,EAAM6F,EAAKF,EAC1C,CACF,CAEDjhB,KAAKk9B,iBAEDziB,GACFza,KAAKob,MAAQpb,KAAK0X,QAAUzd,EAAMmhB,MAAQpb,KAAK43B,SAAShlB,KAAO5S,KAAK43B,SAASllB,MAC7E1S,KAAKmb,OAASkK,EAAQlK,SAEtBnb,KAAKob,MAAQiK,EAAQjK,MACrBpb,KAAKmb,OAASnb,KAAK0X,QAAUzd,EAAMkhB,OAASnb,KAAK43B,SAASnlB,IAAMzS,KAAK43B,SAASjlB,OAElF,CAEAsqB,kBAAkB1H,EAAOja,EAAM6F,EAAKF,GAClC,MAAO7mB,OAAOo9B,MAACA,UAAOlK,GAAQ3zB,SAAEA,GAAYqG,KAAKzG,QAC3C4jC,EAAmC,IAAvBn9B,KAAKi4B,cACjBmF,EAAgC,QAAbzjC,GAAoC,MAAdqG,KAAKyK,KAEpD,GAAIzK,KAAKya,eAAgB,CACvB,MAAM4iB,EAAar9B,KAAK8X,gBAAgB,GAAK9X,KAAK4S,KAC5C0qB,EAAct9B,KAAK0S,MAAQ1S,KAAK8X,gBAAgB9X,KAAK5F,MAAMpB,OAAS,GAC1E,IAAI++B,EAAc,EACdC,EAAe,EAIfmF,EACEC,GACFrF,EAAc9W,EAAMsU,EAAMna,MAC1B4c,EAAe7W,EAAM7F,EAAKH,SAE1B4c,EAAc5W,EAAMoU,EAAMpa,OAC1B6c,EAAe/W,EAAM3F,EAAKF,OAET,UAAVoc,EACTQ,EAAe1c,EAAKF,MACD,QAAVoc,EACTO,EAAcxC,EAAMna,MACD,UAAVoc,IACTO,EAAcxC,EAAMna,MAAQ,EAC5B4c,EAAe1c,EAAKF,MAAQ,GAI9Bpb,KAAK+3B,YAAc92B,KAAKgC,KAAK80B,EAAcsF,EAAa/P,GAAWttB,KAAKob,OAASpb,KAAKob,MAAQiiB,GAAa,GAC3Gr9B,KAAKg4B,aAAe/2B,KAAKgC,KAAK+0B,EAAesF,EAAchQ,GAAWttB,KAAKob,OAASpb,KAAKob,MAAQkiB,GAAc,EAC1G,MACL,IAAIzF,EAAavc,EAAKH,OAAS,EAC3B2c,EAAgBvC,EAAMpa,OAAS,EAErB,UAAVqc,GACFK,EAAa,EACbC,EAAgBvC,EAAMpa,QACH,QAAVqc,IACTK,EAAavc,EAAKH,OAClB2c,EAAgB,GAGlB93B,KAAK63B,WAAaA,EAAavK,EAC/BttB,KAAK83B,cAAgBA,EAAgBxK,CACtC,CACH,CAMA4P,iBACMl9B,KAAK43B,WACP53B,KAAK43B,SAAShlB,KAAO3R,KAAKgC,IAAIjD,KAAK+3B,YAAa/3B,KAAK43B,SAAShlB,MAC9D5S,KAAK43B,SAASnlB,IAAMxR,KAAKgC,IAAIjD,KAAK63B,WAAY73B,KAAK43B,SAASnlB,KAC5DzS,KAAK43B,SAASllB,MAAQzR,KAAKgC,IAAIjD,KAAKg4B,aAAch4B,KAAK43B,SAASllB,OAChE1S,KAAK43B,SAASjlB,OAAS1R,KAAKgC,IAAIjD,KAAK83B,cAAe93B,KAAK43B,SAASjlB,QAEtE,CAEAooB,YACEz5B,OAAKtB,KAAKzG,QAAQwhC,SAAU,CAAC/6B,MAC/B,CAMAya,eACE,MAAMhQ,KAACA,WAAM9Q,GAAYqG,KAAKzG,QAC9B,MAAoB,QAAbI,GAAmC,WAAbA,GAAkC,MAAT8Q,CACxD,CAIA8yB,aACE,OAAOv9B,KAAKzG,QAAQgyB,QACtB,CAMAgP,sBAAsBngC,GAMpB,IAAIlB,EAAGyP,EACP,IANA3I,KAAKs7B,8BAELt7B,KAAKu7B,mBAAmBnhC,GAInBlB,EAAI,EAAGyP,EAAOvO,EAAMpB,OAAQE,EAAIyP,EAAMzP,KACrC2hB,OAAczgB,EAAMlB,GAAGC,SACzBiB,EAAMmc,OAAOrd,EAAG,GAChByP,IACAzP,KAIJ8G,KAAKy7B,4BACP,CAMAQ,iBACE,IAAID,EAAah8B,KAAKq4B,YAEtB,IAAK2D,EAAY,CACf,MAAMrC,EAAa35B,KAAKzG,QAAQa,MAAMu/B,WACtC,IAAIv/B,EAAQ4F,KAAK5F,MACbu/B,EAAav/B,EAAMpB,SACrBoB,EAAQo8B,GAAOp8B,EAAOu/B,IAGxB35B,KAAKq4B,YAAc2D,EAAah8B,KAAKw9B,mBAAmBpjC,EAAOA,EAAMpB,OAAQgH,KAAKzG,QAAQa,MAAM46B,cACjG,CAED,OAAOgH,CACT,CAQAwB,mBAAmBpjC,EAAOpB,EAAQg8B,GAChC,MAAMlpB,IAACA,EAAKwsB,kBAAmBmF,GAAUz9B,KACnC09B,EAAS,GACTC,EAAU,GACVjH,EAAYz1B,KAAK+D,MAAMhM,EAASs9B,GAAct9B,EAAQg8B,IAC5D,IAEI97B,EAAGivB,EAAGyV,EAAMzkC,EAAO0kC,EAAUC,EAAY5pB,EAAOojB,EAAYlc,EAAOD,EAAQ4iB,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAK/kC,EAAI,EAAGA,EAAIF,EAAQE,GAAKw9B,EAAW,CAQtC,GAPAv9B,EAAQiB,EAAMlB,GAAGC,MACjB0kC,EAAW79B,KAAKk+B,wBAAwBhlC,GACxC4S,EAAIsrB,KAAO0G,EAAaD,EAASM,OACjCjqB,EAAQupB,EAAOK,GAAcL,EAAOK,IAAe,CAACvlC,KAAM,GAAI6lC,GAAI,IAClE9G,EAAauG,EAASvG,WACtBlc,EAAQD,EAAS,GAEZN,OAAc1hB,KAAW4N,OAAQ5N,IAG/B,IAAI4N,OAAQ5N,GAEjB,IAAKgvB,EAAI,EAAGyV,EAAOzkC,EAAMH,OAAQmvB,EAAIyV,IAAQzV,EAC3C4V,EAAc5kC,EAAMgvB,IAEftN,OAAckjB,KAAiBh3B,OAAQg3B,KAC1C3iB,GAAQijB,OAAavyB,EAAKoI,EAAM3b,KAAM2b,EAAMkqB,GAAIhjB,EAAO2iB,GACvD5iB,GAAUmc,QATdlc,GAAQijB,OAAavyB,EAAKoI,EAAM3b,KAAM2b,EAAMkqB,GAAIhjB,EAAOjiB,GACvDgiB,EAASmc,EAYXoG,EAAOzkC,KAAKmiB,GACZuiB,EAAQ1kC,KAAKkiB,GACb6iB,EAAkB/8B,KAAKgC,IAAImY,EAAO4iB,GAClCC,EAAmBh9B,KAAKgC,IAAIkY,EAAQ8iB,EACtC,EA/wBJ,SAAwBR,EAAQzkC,IAC9Bw1B,OAAKiP,GAASvpB,IACZ,MAAMkqB,EAAKlqB,EAAMkqB,GACXE,EAAQF,EAAGplC,OAAS,EAC1B,IAAIE,EACJ,GAAIolC,EAAQtlC,EAAQ,CAClB,IAAKE,EAAI,EAAGA,EAAIolC,IAASplC,SAChBgb,EAAM3b,KAAK6lC,EAAGllC,IAEvBklC,EAAG7nB,OAAO,EAAG+nB,EACd,IAEL,CAowBIC,CAAed,EAAQzkC,GAEvB,MAAMmjC,EAASuB,EAAOthC,QAAQ4hC,GACxB3B,EAAUsB,EAAQvhC,QAAQ6hC,GAE1BO,EAAWC,IAAS,CAACrjB,MAAOsiB,EAAOe,IAAQ,EAAGtjB,OAAQwiB,EAAQc,IAAQ,IAE5E,MAAO,CACLlJ,MAAOiJ,EAAQ,GACfljB,KAAMkjB,EAAQxlC,EAAS,GACvBmjC,OAAQqC,EAAQrC,GAChBE,QAASmC,EAAQnC,GACjBqB,SACAC,UAEJ,CAOArrB,iBAAiBhW,GACf,OAAOA,CACT,CASAub,iBAAiBvb,EAAOsM,GACtB,OAAOwI,GACT,CAQAwL,iBAAiB8hB,GAAO,CAQxB5mB,gBAAgBlP,GACd,MAAMxO,EAAQ4F,KAAK5F,MACnB,OAAIwO,EAAQ,GAAKA,EAAQxO,EAAMpB,OAAS,EAC/B,KAEFgH,KAAK6X,iBAAiBzd,EAAMwO,GAAOtM,MAC5C,CAQAogB,mBAAmBiiB,GACb3+B,KAAKynB,iBACPkX,EAAU,EAAIA,GAGhB,MAAMD,EAAQ1+B,KAAKgc,YAAc2iB,EAAU3+B,KAAK0X,QAChD,OAAOknB,OAAY5+B,KAAKk7B,gBAAiB2D,OAAY7+B,KAAK/F,MAAOykC,EAAO,GAAKA,EAC/E,CAMAI,mBAAmBJ,GACjB,MAAMC,GAAWD,EAAQ1+B,KAAKgc,aAAehc,KAAK0X,QAClD,OAAO1X,KAAKynB,eAAiB,EAAIkX,EAAUA,CAC7C,CAOAnkB,eACE,OAAOxa,KAAK6X,iBAAiB7X,KAAK++B,eACpC,CAKAA,eACE,MAAM79B,IAACA,EAAG+B,IAAEA,GAAOjD,KAEnB,OAAOkB,EAAM,GAAK+B,EAAM,EAAIA,EAC1B/B,EAAM,GAAK+B,EAAM,EAAI/B,EACrB,CACJ,CAKA8O,WAAWpH,GACT,MAAMxO,EAAQ4F,KAAK5F,OAAS,GAE5B,GAAIwO,GAAS,GAAKA,EAAQxO,EAAMpB,OAAQ,CACtC,MAAMiJ,EAAO7H,EAAMwO,GACnB,OAAO3G,EAAKyK,WACbzK,EAAKyK,SAr1BV,SAA2BgH,EAAQ9K,EAAO3G,GACxC,OAAO0R,OAAcD,EAAQ,CAC3BzR,OACA2G,QACAvP,KAAM,QAEV,CA+0BqB2lC,CAAkBh/B,KAAKgQ,aAAcpH,EAAO3G,GAC5D,CACD,OAAOjC,KAAK0M,WACZ1M,KAAK0M,UA/1BmBgH,EA+1BW1T,KAAK/F,MAAM+V,aA/1Bd9H,EA+1B4BlI,MA91BvD2T,OAAcD,EAAQ,CAC3BxL,QACA7O,KAAM,YAHV,IAA4Bqa,EAAQxL,CAg2BlC,CAMAwsB,YACE,MAAMuK,EAAcj/B,KAAKzG,QAAQa,MAG3B8kC,GAAMlf,OAAUhgB,KAAKi4B,eACrBhX,EAAMhgB,KAAK2W,IAAI3W,KAAKggB,IAAIie,IACxB/d,EAAMlgB,KAAK2W,IAAI3W,KAAKkgB,IAAI+d,IAExBlD,EAAah8B,KAAKi8B,iBAClB3O,EAAU2R,EAAYE,iBAAmB,EACzC9S,EAAI2P,EAAaA,EAAWG,OAAO/gB,MAAQkS,EAAU,EACrDf,EAAIyP,EAAaA,EAAWK,QAAQlhB,OAASmS,EAAU,EAG7D,OAAOttB,KAAKya,eACR8R,EAAItL,EAAMoL,EAAIlL,EAAMkL,EAAIpL,EAAMsL,EAAIpL,EAClCoL,EAAIpL,EAAMkL,EAAIpL,EAAMsL,EAAItL,EAAMoL,EAAIlL,CACxC,CAMA4a,aACE,MAAMriC,EAAUsG,KAAKzG,QAAQG,QAE7B,MAAgB,SAAZA,IACOA,EAGJsG,KAAKiK,0BAA0BjR,OAAS,CACjD,CAKAomC,sBAAsBjsB,GACpB,MAAM1I,EAAOzK,KAAKyK,KACZxQ,EAAQ+F,KAAK/F,MACbV,EAAUyG,KAAKzG,SACfygB,KAACA,EAAIrgB,SAAEA,SAAU+qB,GAAUnrB,EAC3BwgB,EAASC,EAAKD,OACdU,EAAeza,KAAKya,eAEpB8b,EADQv2B,KAAK5F,MACOpB,QAAU+gB,EAAS,EAAI,GAC3CslB,EAAKrI,GAAkBhd,GACvBpY,EAAQ,GAER09B,EAAa5a,EAAOoU,WAAW94B,KAAKgQ,cACpCuvB,EAAYD,EAAW5lC,QAAU4lC,EAAWlkB,MAAQ,EACpDokB,EAAgBD,EAAY,EAC5BE,EAAmB,SAASf,GAChC,OAAOG,OAAY5kC,EAAOykC,EAAOa,EACnC,EACA,IAAIG,EAAaxmC,EAAG69B,EAAW4I,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAbxmC,EACF+lC,EAAcD,EAAiBz/B,KAAK2S,QACpCktB,EAAM7/B,KAAK2S,OAAS0sB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBtsB,EAAUV,KAAO+sB,EACvCW,EAAKhtB,EAAUR,YACV,GAAiB,WAAbhZ,EACT+lC,EAAcD,EAAiBz/B,KAAKyS,KACpCwtB,EAAK9sB,EAAUV,IACf0tB,EAAKV,EAAiBtsB,EAAUR,QAAU6sB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM//B,KAAKyS,IAAM4sB,OACZ,GAAiB,SAAb1lC,EACT+lC,EAAcD,EAAiBz/B,KAAK0S,OACpCktB,EAAM5/B,KAAK0S,MAAQ2sB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBtsB,EAAUP,MAAQ4sB,EACxCU,EAAK/sB,EAAUT,WACV,GAAiB,UAAb/Y,EACT+lC,EAAcD,EAAiBz/B,KAAK4S,MACpCotB,EAAK7sB,EAAUP,KACfstB,EAAKT,EAAiBtsB,EAAUT,OAAS8sB,EACzCI,EAAMF,EAAcF,EACpBM,EAAM9/B,KAAK4S,KAAOysB,OACb,GAAa,MAAT50B,EAAc,CACvB,GAAiB,WAAb9Q,EACF+lC,EAAcD,GAAkBtsB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACnE,IAAIpM,OAAS5M,GAAW,CAC7B,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvBV,EAAcD,EAAiBz/B,KAAK/F,MAAMT,OAAO4mC,GAAgBvoB,iBAAiBvb,GACnF,CAED2jC,EAAK9sB,EAAUV,IACf0tB,EAAKhtB,EAAUR,OACfktB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACP,SAAa,MAAT50B,EAAc,CACvB,GAAiB,WAAb9Q,EACF+lC,EAAcD,GAAkBtsB,EAAUP,KAAOO,EAAUT,OAAS,QAC/D,IAAInM,OAAS5M,GAAW,CAC7B,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvBV,EAAcD,EAAiBz/B,KAAK/F,MAAMT,OAAO4mC,GAAgBvoB,iBAAiBvb,GACnF,CAEDsjC,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK7sB,EAAUP,KACfstB,EAAK/sB,EAAUT,KAChB,CAED,MAAM2tB,GAAQxyB,OAAetU,EAAQa,MAAM46B,cAAeuB,GACpD+J,EAAOr/B,KAAKgC,IAAI,EAAGhC,KAAKw0B,KAAKc,EAAc8J,IACjD,IAAKnnC,EAAI,EAAGA,EAAIq9B,EAAar9B,GAAKonC,EAAM,CACtC,MAAM7sB,EAAUzT,KAAKgQ,WAAW9W,GAC1BqnC,EAAcvmB,EAAK8e,WAAWrlB,GAC9B+sB,EAAoB9b,EAAOoU,WAAWrlB,GAEtC2L,EAAYmhB,EAAYnhB,UACxBqhB,EAAYF,EAAY38B,MACxB88B,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WAErChF,EAAY0E,EAAY1E,UACxBiF,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBAEzCjK,EAAYJ,GAAoB32B,KAAM9G,EAAG6gB,QAGvBxc,IAAdw5B,IAIJ4I,GAAmBd,OAAY5kC,EAAO88B,EAAW3X,GAE7C3E,EACFmlB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxB/9B,EAAM3I,KAAK,CACT2mC,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACA/kB,MAAOgE,EACPxb,MAAO68B,EACPC,aACAE,mBACA/E,YACAiF,YACAC,iBACAC,yBAEJ,CAKA,OAHAhhC,KAAK24B,aAAepC,EACpBv2B,KAAK44B,aAAe8G,EAEb99B,CACT,CAKA23B,mBAAmBpmB,GACjB,MAAM1I,EAAOzK,KAAKyK,KACZlR,EAAUyG,KAAKzG,SACfI,SAACA,EAAUS,MAAO6kC,GAAe1lC,EACjCkhB,EAAeza,KAAKya,eACpBrgB,EAAQ4F,KAAK5F,OACbo9B,MAACA,aAAOyJ,UAAY3T,EAAOyP,OAAEA,GAAUkC,EACvCI,EAAKrI,GAAkBz9B,EAAQygB,MAC/BknB,EAAiB7B,EAAK/R,EACtB6T,EAAkBpE,GAAUzP,EAAU4T,EACtC9iB,IAAY4B,OAAUhgB,KAAKi4B,eAC3Br2B,EAAQ,GACd,IAAI1I,EAAGyP,EAAM1G,EAAM9I,EAAOuU,EAAGvT,EAAGinC,EAAW1C,EAAOtH,EAAME,EAAY+J,EAAWC,EAC3EC,EAAe,SAEnB,GAAiB,QAAb5nC,EACFQ,EAAI6F,KAAK2S,OAASwuB,EAClBC,EAAYphC,KAAKwhC,+BACZ,GAAiB,WAAb7nC,EACTQ,EAAI6F,KAAKyS,IAAM0uB,EACfC,EAAYphC,KAAKwhC,+BACZ,GAAiB,SAAb7nC,EAAqB,CAC9B,MAAM06B,EAAMr0B,KAAKyhC,wBAAwBpC,GACzC+B,EAAY/M,EAAI+M,UAChB1zB,EAAI2mB,EAAI3mB,CACH,SAAiB,UAAb/T,EAAsB,CAC/B,MAAM06B,EAAMr0B,KAAKyhC,wBAAwBpC,GACzC+B,EAAY/M,EAAI+M,UAChB1zB,EAAI2mB,EAAI3mB,CACH,SAAa,MAATjD,EAAc,CACvB,GAAiB,WAAb9Q,EACFQ,GAAMgZ,EAAUV,IAAMU,EAAUR,QAAU,EAAKuuB,OAC1C,IAAI36B,OAAS5M,GAAW,CAC7B,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvBjmC,EAAI6F,KAAK/F,MAAMT,OAAO4mC,GAAgBvoB,iBAAiBvb,GAAS4kC,CACjE,CACDE,EAAYphC,KAAKwhC,yBACZ,SAAa,MAAT/2B,EAAc,CACvB,GAAiB,WAAb9Q,EACF+T,GAAMyF,EAAUP,KAAOO,EAAUT,OAAS,EAAKwuB,OAC1C,IAAI36B,OAAS5M,GAAW,CAC7B,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvB1yB,EAAI1N,KAAK/F,MAAMT,OAAO4mC,GAAgBvoB,iBAAiBvb,EACxD,CACD8kC,EAAYphC,KAAKyhC,wBAAwBpC,GAAI+B,SAC9C,CAEY,MAAT32B,IACY,UAAV+sB,EACF+J,EAAe,MACI,QAAV/J,IACT+J,EAAe,WAInB,MAAMvF,EAAah8B,KAAKi8B,iBACxB,IAAK/iC,EAAI,EAAGyP,EAAOvO,EAAMpB,OAAQE,EAAIyP,IAAQzP,EAAG,CAC9C+I,EAAO7H,EAAMlB,GACbC,EAAQ8I,EAAK9I,MAEb,MAAMonC,EAActB,EAAYnG,WAAW94B,KAAKgQ,WAAW9W,IAC3DwlC,EAAQ1+B,KAAK8X,gBAAgB5e,GAAK+lC,EAAYyC,YAC9CtK,EAAOp3B,KAAKk+B,wBAAwBhlC,GACpCo+B,EAAaF,EAAKE,WAClB+J,GAAYt6B,OAAQ5N,GAASA,EAAMH,OAAS,EAC5C,MAAM2oC,EAAYN,EAAY,EACxBz9B,EAAQ28B,EAAY38B,MACpBg+B,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IA4CIC,EA5CAC,EAAgBb,EA8CpB,GA5CI3mB,GACF/M,EAAIgxB,EAEc,UAAd0C,IAEAa,EADE/oC,IAAMyP,EAAO,EACE3I,KAAKzG,QAAQ8O,QAAoB,OAAV,QACzB,IAANnP,EACQ8G,KAAKzG,QAAQ8O,QAAmB,QAAT,OAExB,UAMhBi5B,EAFa,QAAb3nC,EACiB,SAAfsnC,GAAsC,IAAb7iB,GACbijB,EAAY/J,EAAaA,EAAa,EAC5B,WAAf2J,GACKjF,EAAWK,QAAQlhB,OAAS,EAAIwmB,EAAYrK,EAAaA,GAEzD0E,EAAWK,QAAQlhB,OAASmc,EAAa,EAItC,SAAf2J,GAAsC,IAAb7iB,EACdkZ,EAAa,EACF,WAAf2J,EACIjF,EAAWK,QAAQlhB,OAAS,EAAIwmB,EAAYrK,EAE5C0E,EAAWK,QAAQlhB,OAASkmB,EAAY/J,EAGrDyF,IACFuE,IAAc,GAEC,IAAbljB,GAAmBmiB,EAAY2B,oBACjCx0B,GAAK4pB,EAAc,EAAKr2B,KAAKkgB,IAAI/C,MAGnCjkB,EAAIukC,EACJ4C,GAAc,EAAID,GAAa/J,EAAa,GAK1CiJ,EAAY2B,kBAAmB,CACjC,MAAMC,GAAetU,OAAU0S,EAAY6B,iBACrCjnB,EAAS6gB,EAAW2B,QAAQzkC,GAC5BkiB,EAAQ4gB,EAAW0B,OAAOxkC,GAEhC,IAAIuZ,EAAM6uB,EAAaa,EAAa1vB,IAChCG,EAAO,EAAIuvB,EAAavvB,KAE5B,OAAQ2uB,GACR,IAAK,SACH9uB,GAAO0I,EAAS,EAChB,MACF,IAAK,SACH1I,GAAO0I,EAMT,OAAQimB,GACR,IAAK,SACHxuB,GAAQwI,EAAQ,EAChB,MACF,IAAK,QACHxI,GAAQwI,EAMV4mB,EAAW,CACTpvB,OACAH,MACA2I,MAAOA,EAAQ+mB,EAAa/mB,MAC5BD,OAAQA,EAASgnB,EAAahnB,OAE9BvX,MAAO28B,EAAY8B,cAEtB,CAEDzgC,EAAM3I,KAAK,CACTE,QACAi+B,OACAkK,aACA/nC,QAAS,CACP6kB,WACAxa,QACAg+B,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CAAC50B,EAAGvT,GACjB6nC,aAGN,CAEA,OAAOpgC,CACT,CAEA4/B,0BACE,MAAM7nC,SAACA,QAAUS,GAAS4F,KAAKzG,QAG/B,KAFkBymB,OAAUhgB,KAAKi4B,eAG/B,MAAoB,QAAbt+B,EAAqB,OAAS,QAGvC,IAAI69B,EAAQ,SAUZ,MARoB,UAAhBp9B,EAAMo9B,MACRA,EAAQ,OACiB,QAAhBp9B,EAAMo9B,MACfA,EAAQ,QACiB,UAAhBp9B,EAAMo9B,QACfA,EAAQ,SAGHA,CACT,CAEAiK,wBAAwBpC,GACtB,MAAM1lC,SAACA,EAAUS,OAAO6mC,WAACA,SAAYlE,UAAQzP,IAAYttB,KAAKzG,QAExD2nC,EAAiB7B,EAAK/R,EACtB6O,EAFan8B,KAAKi8B,iBAEEE,OAAO/gB,MAEjC,IAAIgmB,EACA1zB,EA0DJ,MAxDiB,SAAb/T,EACEojC,GACFrvB,EAAI1N,KAAK0S,MAAQ4a,EAEE,SAAf2T,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZ1zB,GAAMyuB,EAAS,IAEfiF,EAAY,QACZ1zB,GAAKyuB,KAGPzuB,EAAI1N,KAAK0S,MAAQwuB,EAEE,SAAfD,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZ1zB,GAAMyuB,EAAS,IAEfiF,EAAY,OACZ1zB,EAAI1N,KAAK4S,OAGS,UAAbjZ,EACLojC,GACFrvB,EAAI1N,KAAK4S,KAAO0a,EAEG,SAAf2T,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZ1zB,GAAMyuB,EAAS,IAEfiF,EAAY,OACZ1zB,GAAKyuB,KAGPzuB,EAAI1N,KAAK4S,KAAOsuB,EAEG,SAAfD,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZ1zB,GAAKyuB,EAAS,IAEdiF,EAAY,QACZ1zB,EAAI1N,KAAK0S,QAIb0uB,EAAY,QAGP,CAACA,YAAW1zB,IACrB,CAKA60B,oBACE,GAAIviC,KAAKzG,QAAQa,MAAM2iC,OACrB,OAGF,MAAM9iC,EAAQ+F,KAAK/F,MACbN,EAAWqG,KAAKzG,QAAQI,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC8Y,IAAK,EAAGG,KAAM5S,KAAK4S,KAAMD,OAAQ1Y,EAAMkhB,OAAQzI,MAAO1S,KAAK0S,OAClD,QAAb/Y,GAAmC,WAAbA,EACnB,CAAC8Y,IAAKzS,KAAKyS,IAAKG,KAAM,EAAGD,OAAQ3S,KAAK2S,OAAQD,MAAOzY,EAAMmhB,YADlE,CAGJ,CAKAonB,iBACE,MAAM12B,IAACA,EAAKvS,SAASylB,gBAACA,GAAgBpM,KAAEA,EAAIH,IAAEA,QAAK2I,SAAOD,GAAUnb,KAChEgf,IACFlT,EAAI22B,OACJ32B,EAAIiT,UAAYC,EAChBlT,EAAI42B,SAAS9vB,EAAMH,EAAK2I,EAAOD,GAC/BrP,EAAI62B,UAER,CAEA7lB,qBAAqBxgB,GACnB,MAAM0d,EAAOha,KAAKzG,QAAQygB,KAC1B,IAAKha,KAAK+7B,eAAiB/hB,EAAKtgB,QAC9B,OAAO,EAET,MACMkP,EADQ5I,KAAK5F,MACCwoC,WAAUpwB,GAAKA,EAAElW,QAAUA,IAC/C,GAAIsM,GAAS,EAAG,CAEd,OADaoR,EAAK8e,WAAW94B,KAAKgQ,WAAWpH,IACjCwW,SACb,CACD,OAAO,CACT,CAKAyjB,SAAS1vB,GACP,MAAM6G,EAAOha,KAAKzG,QAAQygB,KACpBlO,EAAM9L,KAAK8L,IACXlK,EAAQ5B,KAAKm4B,iBAAmBn4B,KAAKm4B,eAAiBn4B,KAAKo/B,sBAAsBjsB,IACvF,IAAIja,EAAGyP,EAEP,MAAMm6B,EAAW,CAACC,EAAIC,EAAIlkB,KACnBA,EAAM1D,OAAU0D,EAAMlb,QAG3BkI,EAAI22B,OACJ32B,EAAIsT,UAAYN,EAAM1D,MACtBtP,EAAImT,YAAcH,EAAMlb,MACxBkI,EAAIm3B,YAAYnkB,EAAM4hB,YAAc,IACpC50B,EAAIo3B,eAAiBpkB,EAAM8hB,iBAE3B90B,EAAIq3B,YACJr3B,EAAIs3B,OAAOL,EAAGr1B,EAAGq1B,EAAG5oC,GACpB2R,EAAIu3B,OAAOL,EAAGt1B,EAAGs1B,EAAG7oC,GACpB2R,EAAIw3B,SACJx3B,EAAI62B,UAAO,EAGb,GAAI3oB,EAAKtgB,QACP,IAAKR,EAAI,EAAGyP,EAAO/G,EAAM5I,OAAQE,EAAIyP,IAAQzP,EAAG,CAC9C,MAAM2I,EAAOD,EAAM1I,GAEf8gB,EAAKupB,iBACPT,EACE,CAACp1B,EAAG7L,EAAKm+B,GAAI7lC,EAAG0H,EAAKo+B,IACrB,CAACvyB,EAAG7L,EAAKq+B,GAAI/lC,EAAG0H,EAAKs+B,IACrBt+B,GAIAmY,EAAKid,WACP6L,EACE,CAACp1B,EAAG7L,EAAK+9B,IAAKzlC,EAAG0H,EAAKg+B,KACtB,CAACnyB,EAAG7L,EAAKi+B,IAAK3lC,EAAG0H,EAAKk+B,KACtB,CACEn8B,MAAO/B,EAAKi/B,UACZ1lB,MAAOvZ,EAAKg6B,UACZ6E,WAAY7+B,EAAKk/B,eACjBH,iBAAkB/+B,EAAKm/B,sBAI/B,CAEJ,CAKAwC,aACE,MAAMvpC,MAACA,MAAO6R,EAAKvS,SAASmrB,OAACA,EAAM1K,KAAEA,IAASha,KACxCs/B,EAAa5a,EAAOoU,WAAW94B,KAAKgQ,cACpCuvB,EAAY7a,EAAOhrB,QAAU4lC,EAAWlkB,MAAQ,EACtD,IAAKmkB,EACH,OAEF,MAAMkE,EAAgBzpB,EAAK8e,WAAW94B,KAAKgQ,WAAW,IAAIoP,UACpDsgB,EAAc1/B,KAAK44B,aACzB,IAAIoH,EAAIE,EAAID,EAAIE,EAEZngC,KAAKya,gBACPulB,GAAKnB,OAAY5kC,EAAO+F,KAAK4S,KAAM2sB,GAAaA,EAAY,EAC5DW,GAAKrB,OAAY5kC,EAAO+F,KAAK0S,MAAO+wB,GAAiBA,EAAgB,EACrExD,EAAKE,EAAKT,IAEVO,GAAKpB,OAAY5kC,EAAO+F,KAAKyS,IAAK8sB,GAAaA,EAAY,EAC3DY,GAAKtB,OAAY5kC,EAAO+F,KAAK2S,OAAQ8wB,GAAiBA,EAAgB,EACtEzD,EAAKE,EAAKR,GAEZ5zB,EAAI22B,OACJ32B,EAAIsT,UAAYkgB,EAAWlkB,MAC3BtP,EAAImT,YAAcqgB,EAAW17B,MAE7BkI,EAAIq3B,YACJr3B,EAAIs3B,OAAOpD,EAAIC,GACfn0B,EAAIu3B,OAAOnD,EAAIC,GACfr0B,EAAIw3B,SAEJx3B,EAAI62B,SACN,CAKAe,WAAWvwB,GAGT,IAFoBnT,KAAKzG,QAAQa,MAEhBV,QACf,OAGF,MAAMoS,EAAM9L,KAAK8L,IAEXoH,EAAOlT,KAAKuiC,oBACdrvB,IACFywB,OAAS73B,EAAKoH,GAGhB,MAAMtR,EAAQ5B,KAAKs5B,cAAcnmB,GACjC,IAAK,MAAMtR,KAAQD,EAAO,CACxB,MAAMgiC,EAAoB/hC,EAAKtI,QACzBskC,EAAWh8B,EAAKu1B,KAChBj+B,EAAQ0I,EAAK1I,MACbgB,EAAI0H,EAAKy/B,YACfuC,OAAW/3B,EAAK3S,EAAO,EAAGgB,EAAG0jC,EAAU+F,EACzC,CAEI1wB,IACF4wB,OAAWh4B,EAEf,CAKAi4B,YACE,MAAMj4B,IAACA,EAAKvS,SAASI,SAACA,EAAQC,MAAEA,EAAKyO,QAAEA,IAAYrI,KAEnD,IAAKpG,EAAMF,QACT,OAGF,MAAM09B,GAAOC,QAAOz9B,EAAMw9B,MACpB9J,GAAUO,OAAUj0B,EAAM0zB,SAC1BkK,EAAQ59B,EAAM49B,MACpB,IAAIzd,EAASqd,EAAKE,WAAa,EAEd,WAAb39B,GAAsC,WAAbA,IAAyB4M,OAAS5M,IAC7DogB,GAAUuT,EAAQ3a,QACd5L,OAAQnN,EAAMC,QAChBkgB,GAAUqd,EAAKE,YAAc19B,EAAMC,KAAKb,OAAS,KAGnD+gB,GAAUuT,EAAQ7a,IAGpB,MAAMuxB,OAACA,SAAQC,WAAQhiB,EAAQ7D,SAAEA,GAh8CrC,SAAmBlW,EAAO6R,EAAQpgB,EAAU69B,GAC1C,MAAM/kB,IAACA,EAAGG,KAAEA,EAAID,OAAEA,EAAMD,MAAEA,EAAKzY,MAAEA,GAASiO,GACpCiL,UAACA,SAAW3Z,GAAUS,EAC5B,IACIgoB,EAAU+hB,EAAQC,EADlB7lB,EAAW,EAEf,MAAMjD,EAASxI,EAASF,EAClB2I,EAAQ1I,EAAQE,EAEtB,GAAI1K,EAAMuS,eAAgB,CAGxB,GAFAupB,GAASE,QAAe1M,EAAO5kB,EAAMF,IAEjCnM,OAAS5M,GAAW,CACtB,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvB6D,EAASzqC,EAAO4mC,GAAgBvoB,iBAAiBvb,GAAS6e,EAASpB,CAC9D,MACLkqB,EADsB,WAAbtqC,GACCwZ,EAAUR,OAASQ,EAAUV,KAAO,EAAI0I,EAASpB,EAElDsc,GAAenuB,EAAOvO,EAAUogB,GAE3CkI,EAAWvP,EAAQE,CACd,MACL,IAAIrM,OAAS5M,GAAW,CACtB,MAAMymC,EAAiBvkC,OAAOC,KAAKnC,GAAU,GACvC2C,EAAQ3C,EAASymC,GACvB4D,EAASxqC,EAAO4mC,GAAgBvoB,iBAAiBvb,GAAS8e,EAAQrB,CAC7D,MACLiqB,EADsB,WAAbrqC,GACCwZ,EAAUP,KAAOO,EAAUT,OAAS,EAAI0I,EAAQrB,EAEjDsc,GAAenuB,EAAOvO,EAAUogB,GAE3CkqB,GAASC,QAAe1M,EAAO7kB,EAAQF,GACvC2L,EAAwB,SAAbzkB,GAAuBioB,IAAUA,GAC7C,CACD,MAAO,CAACoiB,SAAQC,SAAQhiB,WAAU7D,WACpC,CA65CiD+lB,CAAUnkC,KAAM+Z,EAAQpgB,EAAU69B,IAE/EqM,OAAW/3B,EAAKlS,EAAMC,KAAM,EAAG,EAAGu9B,EAAM,CACtCxzB,MAAOhK,EAAMgK,MACbqe,WACA7D,WACAgjB,UAAW7J,GAAWC,EAAO79B,EAAU0O,GACvCk5B,aAAc,SACde,YAAa,CAAC0B,EAAQC,IAE1B,CAEAniC,KAAKqR,GACEnT,KAAK+7B,eAIV/7B,KAAKwiC,iBACLxiC,KAAK6iC,SAAS1vB,GACdnT,KAAKwjC,aACLxjC,KAAK+jC,YACL/jC,KAAK0jC,WAAWvwB,GAClB,CAMAqa,UACE,MAAMplB,EAAOpI,KAAKzG,QACZ6qC,EAAKh8B,EAAKhO,OAASgO,EAAKhO,MAAMqzB,GAAK,EACnC4W,GAAKx2B,OAAezF,EAAK4R,MAAQ5R,EAAK4R,KAAKyT,GAAG,GAC9C6W,GAAKz2B,OAAezF,EAAKsc,QAAUtc,EAAKsc,OAAO+I,EAAG,GAExD,OAAKztB,KAAK+7B,cAAgB/7B,KAAK8B,OAAS61B,GAAM9Q,UAAU/kB,KAUjD,CAAC,CACN2rB,EAAG4W,EACHviC,KAAOqR,IACLnT,KAAKwiC,iBACLxiC,KAAK6iC,SAAS1vB,GACdnT,KAAK+jC,WAAS,GAEf,CACDtW,EAAG6W,EACHxiC,KAAM,KACJ9B,KAAKwjC,YAAU,GAEhB,CACD/V,EAAG2W,EACHtiC,KAAOqR,IACLnT,KAAK0jC,WAAWvwB,MAvBX,CAAC,CACNsa,EAAG2W,EACHtiC,KAAOqR,IACLnT,KAAK8B,KAAKqR,KAuBlB,CAOAlJ,wBAAwB5Q,GACtB,MAAM6/B,EAAQl5B,KAAK/F,MAAMiuB,+BACnBqc,EAASvkC,KAAKyK,KAAO,SACrB2qB,EAAS,GACf,IAAIl8B,EAAGyP,EAEP,IAAKzP,EAAI,EAAGyP,EAAOuwB,EAAMlgC,OAAQE,EAAIyP,IAAQzP,EAAG,CAC9C,MAAMqQ,EAAO2vB,EAAMhgC,GACfqQ,EAAKg7B,KAAYvkC,KAAK6K,IAAQxR,GAAQkQ,EAAKlQ,OAASA,GACtD+7B,EAAOn8B,KAAKsQ,EAEhB,CACA,OAAO6rB,CACT,CAOA8I,wBAAwBt1B,GACtB,MAAMR,EAAOpI,KAAKzG,QAAQa,MAAM0+B,WAAW94B,KAAKgQ,WAAWpH,IAC3D,OAAOyuB,QAAOjvB,EAAKgvB,KACrB,CAKAoN,aACE,MAAMC,EAAWzkC,KAAKk+B,wBAAwB,GAAG5G,WACjD,OAAQt3B,KAAKya,eAAiBza,KAAKob,MAAQpb,KAAKmb,QAAUspB,CAC5D,EC9pDa,MAAMC,GACnB3kC,YAAY1G,EAAMsrC,EAAOC,GACvB5kC,KAAK3G,KAAOA,EACZ2G,KAAK2kC,MAAQA,EACb3kC,KAAK4kC,SAAWA,EAChB5kC,KAAK4B,MAAQ/F,OAAOgpC,OAAO,KAC7B,CAEAC,UAAUzrC,GACR,OAAOwC,OAAOgrB,UAAUke,cAAczjC,KAAKtB,KAAK3G,KAAKwtB,UAAWxtB,EAAKwtB,UACvE,CAMA/uB,SAAS+J,GACP,MAAMmjC,EAAQnpC,OAAOopC,eAAepjC,GACpC,IAAIqjC,GAyFR,SAA2BF,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAzFQG,CAAkBH,KAEpBE,EAAcllC,KAAKlI,SAASktC,IAG9B,MAAMpjC,EAAQ5B,KAAK4B,MACbiJ,EAAKhJ,EAAKgJ,GACV85B,EAAQ3kC,KAAK2kC,MAAQ,IAAM95B,EAEjC,IAAKA,EACH,MAAM,IAAI6b,MAAM,2BAA6B7kB,GAG/C,OAAIgJ,KAAMjJ,IAKVA,EAAMiJ,GAAMhJ,EAsChB,SAA0BA,EAAM8iC,EAAOO,GAErC,MAAME,GAAeC,QAAMxpC,OAAOgpC,OAAO,MAAO,CAC9CK,EAAcz+B,IAASpE,IAAI6iC,GAAe,GAC1Cz+B,IAASpE,IAAIsiC,GACb9iC,EAAK4E,WAGPA,IAASjE,IAAImiC,EAAOS,GAEhBvjC,EAAKyjC,eASX,SAAuBX,EAAOY,GAC5B1pC,OAAOC,KAAKypC,GAAQ1kC,SAAQ2kC,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAcvjC,MAC3B0jC,EAAc,CAACjB,GAAOrtB,OAAOmuB,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAM5jC,MACnB8jC,EAAcF,EAAMD,KAAK,KAC/Bp/B,IAASw/B,MAAML,EAAaD,EAAYK,EAAaD,KAEzD,CAlBIG,CAAcvB,EAAO9iC,EAAKyjC,eAGxBzjC,EAAKskC,aACP1/B,IAAS2/B,SAASzB,EAAO9iC,EAAKskC,YAElC,CAtDIE,CAAiBxkC,EAAM8iC,EAAOO,GAC1BllC,KAAK4kC,UACPn+B,IAASm+B,SAAS/iC,EAAKgJ,GAAIhJ,EAAKykC,YANzB3B,CAUX,CAMAtiC,IAAIwI,GACF,OAAO7K,KAAK4B,MAAMiJ,EACpB,CAKA07B,WAAW1kC,GACT,MAAMD,EAAQ5B,KAAK4B,MACbiJ,EAAKhJ,EAAKgJ,GACV85B,EAAQ3kC,KAAK2kC,MAEf95B,KAAMjJ,UACDA,EAAMiJ,GAGX85B,GAAS95B,KAAMpE,IAASk+B,YACnBl+B,IAASk+B,GAAO95B,GACnB7K,KAAK4kC,iBACA0B,KAAUz7B,GAGvB,ECtEK,MAAM27B,GACXzmC,cACEC,KAAKymC,YAAc,IAAI/B,GAAc/4B,EAAmB,YAAY,GACpE3L,KAAKiT,SAAW,IAAIyxB,GAAczQ,GAAS,YAC3Cj0B,KAAK0e,QAAU,IAAIgmB,GAAc7oC,OAAQ,WACzCmE,KAAKxG,OAAS,IAAIkrC,GAAc/M,GAAO,UAGvC33B,KAAK0mC,iBAAmB,CAAC1mC,KAAKymC,YAAazmC,KAAKxG,OAAQwG,KAAKiT,SAC/D,CAKArQ,OAAO6T,GACLzW,KAAK2mC,MAAM,WAAYlwB,EACzB,CAEApT,UAAUoT,GACRzW,KAAK2mC,MAAM,aAAclwB,EAC3B,CAKAmwB,kBAAkBnwB,GAChBzW,KAAK2mC,MAAM,WAAYlwB,EAAMzW,KAAKymC,YACpC,CAKAx5B,eAAewJ,GACbzW,KAAK2mC,MAAM,WAAYlwB,EAAMzW,KAAKiT,SACpC,CAKA4zB,cAAcpwB,GACZzW,KAAK2mC,MAAM,WAAYlwB,EAAMzW,KAAK0e,QACpC,CAKAooB,aAAarwB,GACXzW,KAAK2mC,MAAM,WAAYlwB,EAAMzW,KAAKxG,OACpC,CAMAutC,cAAcl8B,GACZ,OAAO7K,KAAKgnC,KAAKn8B,EAAI7K,KAAKymC,YAAa,aACzC,CAMAjgB,WAAW3b,GACT,OAAO7K,KAAKgnC,KAAKn8B,EAAI7K,KAAKiT,SAAU,UACtC,CAMAg0B,UAAUp8B,GACR,OAAO7K,KAAKgnC,KAAKn8B,EAAI7K,KAAK0e,QAAS,SACrC,CAMAwoB,SAASr8B,GACP,OAAO7K,KAAKgnC,KAAKn8B,EAAI7K,KAAKxG,OAAQ,QACpC,CAKA2tC,qBAAqB1wB,GACnBzW,KAAK2mC,MAAM,aAAclwB,EAAMzW,KAAKymC,YACtC,CAKAW,kBAAkB3wB,GAChBzW,KAAK2mC,MAAM,aAAclwB,EAAMzW,KAAKiT,SACtC,CAKAo0B,iBAAiB5wB,GACfzW,KAAK2mC,MAAM,aAAclwB,EAAMzW,KAAK0e,QACtC,CAKA4oB,gBAAgB7wB,GACdzW,KAAK2mC,MAAM,aAAclwB,EAAMzW,KAAKxG,OACtC,CAKAmtC,MAAMzgC,EAAQuQ,EAAM8wB,GAClB,IAAI9wB,GAAM5V,SAAQ2mC,IAChB,MAAMC,EAAMF,GAAiBvnC,KAAK0nC,oBAAoBF,GAClDD,GAAiBE,EAAI3C,UAAU0C,IAASC,IAAQznC,KAAK0e,SAAW8oB,EAAI38B,GACtE7K,KAAK2nC,MAAMzhC,EAAQuhC,EAAKD,IAMxBhZ,OAAKgZ,GAAK3lC,IAOR,MAAM+lC,EAAUL,GAAiBvnC,KAAK0nC,oBAAoB7lC,GAC1D7B,KAAK2nC,MAAMzhC,EAAQ0hC,EAAS/lC,KAC9B,GAGN,CAKA8lC,MAAMzhC,EAAQqgB,EAAUshB,GACtB,MAAMC,GAAcC,QAAY7hC,IAChC5E,OAAKumC,EAAU,SAAWC,GAAc,GAAID,GAC5CthB,EAASrgB,GAAQ2hC,IACjBvmC,OAAKumC,EAAU,QAAUC,GAAc,GAAID,EAC7C,CAKAH,oBAAoBruC,GAClB,IAAK,IAAIH,EAAI,EAAGA,EAAI8G,KAAK0mC,iBAAiB1tC,OAAQE,IAAK,CACrD,MAAMuuC,EAAMznC,KAAK0mC,iBAAiBxtC,GAClC,GAAIuuC,EAAI3C,UAAUzrC,GAChB,OAAOouC,CAEX,CAEA,OAAOznC,KAAK0e,OACd,CAKAsoB,KAAKn8B,EAAI08B,EAAeluC,GACtB,MAAMwI,EAAO0lC,EAAcllC,IAAIwI,GAC/B,QAAatN,IAATsE,EACF,MAAM,IAAI6kB,MAAM,IAAM7b,EAAK,yBAA2BxR,EAAO,KAE/D,OAAOwI,CACT,EAKF,IAAA0kB,GAA+B,IAAIigB,GCtKpB,MAAMwB,GACnBjoC,cACEC,KAAKioC,MAAQ,EACf,CAYAC,OAAOjuC,EAAOkuC,EAAM1xB,EAAMtL,GACX,eAATg9B,IACFnoC,KAAKioC,MAAQjoC,KAAKooC,mBAAmBnuC,GAAO,GAC5C+F,KAAKM,QAAQN,KAAKioC,MAAOhuC,EAAO,YAGlC,MAAMksC,EAAch7B,EAASnL,KAAKqoC,aAAapuC,GAAOkR,OAAOA,GAAUnL,KAAKqoC,aAAapuC,GACnFm7B,EAASp1B,KAAKM,QAAQ6lC,EAAalsC,EAAOkuC,EAAM1xB,GAMtD,MAJa,iBAAT0xB,IACFnoC,KAAKM,QAAQ6lC,EAAalsC,EAAO,QACjC+F,KAAKM,QAAQN,KAAKioC,MAAOhuC,EAAO,cAE3Bm7B,CACT,CAKA90B,QAAQ6lC,EAAalsC,EAAOkuC,EAAM1xB,GAChCA,EAAOA,GAAQ,GACf,IAAK,MAAM6xB,KAAcnC,EAAa,CACpC,MAAMoC,EAASD,EAAWC,OACpBriC,EAASqiC,EAAOJ,GAChBtd,EAAS,CAAC5wB,EAAOwc,EAAM6xB,EAAW/uC,SACxC,IAA6C,KAAzCivC,OAAatiC,EAAQ2kB,EAAQ0d,IAAqB9xB,EAAKgyB,WACzD,OAAO,CAEX,CAEA,OAAO,CACT,CAEAC,cAMO7tB,OAAc7a,KAAKmX,UACtBnX,KAAK2oC,UAAY3oC,KAAKmX,OACtBnX,KAAKmX,YAAS5Z,EAElB,CAMA8qC,aAAapuC,GACX,GAAI+F,KAAKmX,OACP,OAAOnX,KAAKmX,OAGd,MAAMgvB,EAAcnmC,KAAKmX,OAASnX,KAAKooC,mBAAmBnuC,GAI1D,OAFA+F,KAAK4oC,oBAAoB3uC,GAElBksC,CACT,CAEAiC,mBAAmBnuC,EAAO0N,GACxB,MAAMvB,EAASnM,GAASA,EAAMmM,OACxB7M,GAAUsU,OAAezH,EAAO7M,SAAW6M,EAAO7M,QAAQmlB,QAAS,IACnEA,EAqBV,SAAoBtY,GAClB,MAAMyiC,EAAW,GACXnqB,EAAU,GACV5iB,EAAOD,OAAOC,KAAKyqB,GAAS7H,QAAQ9c,OAC1C,IAAK,IAAI1I,EAAI,EAAGA,EAAI4C,EAAK9C,OAAQE,IAC/BwlB,EAAQzlB,KAAKstB,GAAS0gB,UAAUnrC,EAAK5C,KAGvC,MAAM4vC,EAAQ1iC,EAAOsY,SAAW,GAChC,IAAK,IAAIxlB,EAAI,EAAGA,EAAI4vC,EAAM9vC,OAAQE,IAAK,CACrC,MAAMqvC,EAASO,EAAM5vC,IAEW,IAA5BwlB,EAAQtiB,QAAQmsC,KAClB7pB,EAAQzlB,KAAKsvC,GACbM,EAASN,EAAO19B,KAAM,EAE1B,CAEA,MAAO,CAAC6T,UAASmqB,WACnB,CAxCoBE,CAAW3iC,GAE3B,OAAmB,IAAZ7M,GAAsBoO,EAkDjC,SAA2B1N,GAAOykB,QAACA,EAAOmqB,SAAEA,GAAWtvC,EAASoO,GAC9D,MAAMytB,EAAS,GACT3hB,EAAUxZ,EAAM+V,aAEtB,IAAK,MAAMu4B,KAAU7pB,EAAS,CAC5B,MAAM7T,EAAK09B,EAAO19B,GACZzC,EAAO4gC,GAAQzvC,EAAQsR,GAAKlD,GACrB,OAATS,GAGJgtB,EAAOn8B,KAAK,CACVsvC,SACAhvC,QAAS0vC,GAAWhvC,EAAMmM,OAAQ,CAACmiC,SAAQO,MAAOD,EAASh+B,IAAMzC,EAAMqL,IAE3E,CAEA,OAAO2hB,CACT,CAnE4C8T,CAAkBjvC,EAAOykB,EAASnlB,EAASoO,GAAhD,EACrC,CAMAihC,oBAAoB3uC,GAClB,MAAMkvC,EAAsBnpC,KAAK2oC,WAAa,GACxCxC,EAAcnmC,KAAKmX,OACnB6P,EAAO,CAACroB,EAAGC,IAAMD,EAAEwM,QAAOuC,IAAM9O,EAAEwqC,MAAKjvC,GAAKuT,EAAE66B,OAAO19B,KAAO1Q,EAAEouC,OAAO19B,OAC3E7K,KAAKM,QAAQ0mB,EAAKmiB,EAAqBhD,GAAclsC,EAAO,QAC5D+F,KAAKM,QAAQ0mB,EAAKmf,EAAagD,GAAsBlvC,EAAO,QAC9D,EA2BF,SAAS+uC,GAAQzvC,EAASoO,GACxB,OAAKA,IAAmB,IAAZpO,GAGI,IAAZA,EACK,GAEFA,EALE,IAMX,CAqBA,SAAS0vC,GAAW7iC,GAAQmiC,OAACA,EAAMO,MAAEA,GAAQ1gC,EAAMqL,GACjD,MAAM3X,EAAOsK,EAAOijC,gBAAgBd,GAC9B14B,EAASzJ,EAAO0J,gBAAgB1H,EAAMtM,GAK5C,OAJIgtC,GAASP,EAAO9hC,UAElBoJ,EAAO5W,KAAKsvC,EAAO9hC,UAEdL,EAAO2J,eAAeF,EAAQ4D,EAAS,CAAC,IAAK,CAElD61B,YAAY,EACZC,WAAW,EACXC,SAAS,GAEb,CClLO,SAASC,GAAapwC,EAAME,GACjC,MAAMmwC,EAAkBjjC,IAAS/N,SAASW,IAAS,GAEnD,QADwBE,EAAQb,UAAY,IAAIW,IAAS,IACnC4U,WAAa1U,EAAQ0U,WAAay7B,EAAgBz7B,WAAa,GACvF,CAyBO,SAAS07B,GAAc9+B,EAAI++B,GAChC,GAAW,MAAP/+B,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,EAXX,IAA0BlR,EAkBxB,GAJAkR,EAAK++B,EAAan/B,OAbD,SADO9Q,EAeFiwC,EAAajwC,WAdI,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYKkR,EAAG7R,OAAS,GAAK2wC,GAAc9+B,EAAG,GAAGg/B,cAAeD,GAGvD,OAAO/+B,EAGT,MAAM,IAAI6b,MAAM,6BAA6B9K,0DAC/C,CA8CA,SAASkuB,GAAY1jC,GACnB,MAAM7M,EAAU6M,EAAO7M,UAAY6M,EAAO7M,QAAU,IAEpDA,EAAQmlB,SAAU7Q,OAAetU,EAAQmlB,QAAS,IAClDnlB,EAAQC,OAhDV,SAA0B4M,EAAQ7M,GAChC,MAAMwwC,EAAgBzD,KAAUlgC,EAAO/M,OAAS,CAACG,OAAQ,IACnDwwC,EAAezwC,EAAQC,QAAU,GACjCywC,EAAiBR,GAAarjC,EAAO/M,KAAME,GAC3CC,EAASqC,OAAOgpC,OAAO,MAqC7B,OAlCAhpC,OAAOC,KAAKkuC,GAAcnpC,SAAQgK,IAChC,MAAMq/B,EAAYF,EAAan/B,GAC/B,KAAKtE,OAAS2jC,GACZ,OAAO98B,QAAQ+8B,MAAM,0CAA0Ct/B,KAEjE,GAAIq/B,EAAUE,OACZ,OAAOh9B,QAAQC,KAAK,kDAAkDxC,KAExE,MAAMJ,EAAOk/B,GAAc9+B,EAAIq/B,GACzBG,EA7CV,SAAmC5/B,EAAMwD,GACvC,OAAOxD,IAASwD,EAAY,UAAY,SAC1C,CA2CsBq8B,CAA0B7/B,EAAMw/B,GAC5CM,EAAsBR,EAAcvwC,QAAU,GACpDA,EAAOqR,IAAM2/B,QAAQ3uC,OAAOgpC,OAAO,MAAO,CAAC,CAACp6B,QAAOy/B,EAAWK,EAAoB9/B,GAAO8/B,EAAoBF,IAAW,IAI1HjkC,EAAO7N,KAAKG,SAASmI,SAAQ0M,IAC3B,MAAMlU,EAAOkU,EAAQlU,MAAQ+M,EAAO/M,KAC9B4U,EAAYV,EAAQU,WAAaw7B,GAAapwC,EAAME,GAEpDgxC,GADkBjE,KAAUjtC,IAAS,IACCG,QAAU,GACtDqC,OAAOC,KAAKyuC,GAAqB1pC,SAAQ4pC,IACvC,MAAMhgC,EAnEZ,SAAmCI,EAAIoD,GACrC,IAAIxD,EAAOI,EAMX,MALW,YAAPA,EACFJ,EAAOwD,EACS,YAAPpD,IACTJ,EAAqB,MAAdwD,EAAoB,IAAM,KAE5BxD,CACT,CA2DmBigC,CAA0BD,EAAWx8B,GAC5CpD,EAAK0C,EAAQ9C,EAAO,WAAaA,EACvCjR,EAAOqR,GAAMrR,EAAOqR,IAAOhP,OAAOgpC,OAAO,OACzC2F,QAAQhxC,EAAOqR,GAAK,CAAC,CAACJ,QAAOu/B,EAAan/B,GAAK0/B,EAAoBE,IAAW,GAChF,IAIF5uC,OAAOC,KAAKtC,GAAQqH,SAAQgG,IAC1B,MAAMqB,EAAQ1O,EAAOqN,IACrB2jC,QAAQtiC,EAAO,CAACzB,IAASjN,OAAO0O,EAAM7O,MAAOoN,IAASyB,OAAM,IAGvD1O,CACT,CAMmBmxC,CAAiBvkC,EAAQ7M,EAC5C,CAEA,SAASqxC,GAASryC,GAIhB,OAHAA,EAAOA,GAAQ,IACVG,SAAWH,EAAKG,UAAY,GACjCH,EAAKe,OAASf,EAAKe,QAAU,GACtBf,CACT,CAWA,MAAMsyC,GAAW,IAAI1qC,IACf2qC,GAAa,IAAIC,IAEvB,SAASC,GAAW72B,EAAU82B,GAC5B,IAAInvC,EAAO+uC,GAASxoC,IAAI8R,GAMxB,OALKrY,IACHA,EAAOmvC,IACPJ,GAASroC,IAAI2R,EAAUrY,GACvBgvC,GAAWloC,IAAI9G,IAEVA,CACT,CAEA,MAAMovC,GAAa,CAAC1oC,EAAK6X,EAAKxT,KAC5B,MAAMuB,GAAO0I,OAAiBuJ,EAAKxT,QACtBtJ,IAAT6K,GACF5F,EAAII,IAAIwF,IAIG,MAAM+iC,GACnBprC,YAAYqG,GACVpG,KAAKorC,QA/BT,SAAoBhlC,GAMlB,OALAA,EAASA,GAAU,IACZ7N,KAAOqyC,GAASxkC,EAAO7N,MAE9BuxC,GAAY1jC,GAELA,CACT,CAwBmBilC,CAAWjlC,GAC1BpG,KAAKsrC,YAAc,IAAInrC,IACvBH,KAAKurC,eAAiB,IAAIprC,GAC5B,CAEIqrC,eACF,OAAOxrC,KAAKorC,QAAQI,QACtB,CAEInyC,WACF,OAAO2G,KAAKorC,QAAQ/xC,IACtB,CAEIA,SAAKA,GACP2G,KAAKorC,QAAQ/xC,KAAOA,CACtB,CAEId,WACF,OAAOyH,KAAKorC,QAAQ7yC,IACtB,CAEIA,SAAKA,GACPyH,KAAKorC,QAAQ7yC,KAAOqyC,GAASryC,EAC/B,CAEIgB,cACF,OAAOyG,KAAKorC,QAAQ7xC,OACtB,CAEIA,YAAQA,GACVyG,KAAKorC,QAAQ7xC,QAAUA,CACzB,CAEImlB,cACF,OAAO1e,KAAKorC,QAAQ1sB,OACtB,CAEAhkB,SACE,MAAM0L,EAASpG,KAAKorC,QACpBprC,KAAKyrC,aACL3B,GAAY1jC,EACd,CAEAqlC,aACEzrC,KAAKsrC,YAAYI,QACjB1rC,KAAKurC,eAAeG,OACtB,CAQA97B,iBAAiB+7B,GACf,OAAOX,GAAWW,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,MAEN,CASA92B,0BAA0B82B,EAAa/2B,GACrC,OAAOo2B,GAAW,GAAGW,gBAA0B/2B,KAC7C,IAAM,CACJ,CACE,YAAY+2B,iBAA2B/2B,IACvC,eAAeA,KAGjB,CACE,YAAY+2B,IACZ,MAGR,CAUAr3B,wBAAwBq3B,EAAa13B,GACnC,OAAO+2B,GAAW,GAAGW,KAAe13B,KAClC,IAAM,CAAC,CACL,YAAY03B,cAAwB13B,IACpC,YAAY03B,IACZ,YAAY13B,IACZ,MAEN,CAOAo1B,gBAAgBd,GACd,MAAM19B,EAAK09B,EAAO19B,GAElB,OAAOmgC,GAAW,GADLhrC,KAAK3G,eACkBwR,KAClC,IAAM,CAAC,CACL,WAAWA,OACR09B,EAAOqD,wBAA0B,MAE1C,CAKAC,cAAcC,EAAWC,GACvB,MAAMT,EAActrC,KAAKsrC,YACzB,IAAIp3B,EAAQo3B,EAAYjpC,IAAIypC,GAK5B,OAJK53B,IAAS63B,IACZ73B,EAAQ,IAAI/T,IACZmrC,EAAY9oC,IAAIspC,EAAW53B,IAEtBA,CACT,CAQApE,gBAAgBg8B,EAAWE,EAAUD,GACnC,MAAMxyC,QAACA,EAAOF,KAAEA,GAAQ2G,KAClBkU,EAAQlU,KAAK6rC,cAAcC,EAAWC,GACtCtgC,EAASyI,EAAM7R,IAAI2pC,GACzB,GAAIvgC,EACF,OAAOA,EAGT,MAAMoE,EAAS,IAAIk7B,IAEnBiB,EAASnrC,SAAQ/E,IACXgwC,IACFj8B,EAAOjN,IAAIkpC,GACXhwC,EAAK+E,SAAQgG,GAAOqkC,GAAWr7B,EAAQi8B,EAAWjlC,MAEpD/K,EAAK+E,SAAQgG,GAAOqkC,GAAWr7B,EAAQtW,EAASsN,KAChD/K,EAAK+E,SAAQgG,GAAOqkC,GAAWr7B,EAAQy2B,KAAUjtC,IAAS,GAAIwN,KAC9D/K,EAAK+E,SAAQgG,GAAOqkC,GAAWr7B,EAAQpJ,IAAUI,KACjD/K,EAAK+E,SAAQgG,GAAOqkC,GAAWr7B,EAAQs2B,KAAat/B,QAGtD,MAAMwjB,EAAQnb,MAAMrU,KAAKgV,GAOzB,OANqB,IAAjBwa,EAAMrxB,QACRqxB,EAAMpxB,KAAK4C,OAAOgpC,OAAO,OAEvBiG,GAAWjoC,IAAImpC,IACjB93B,EAAM1R,IAAIwpC,EAAU3hB,GAEfA,CACT,CAMA4hB,oBACE,MAAM1yC,QAACA,EAAOF,KAAEA,GAAQ2G,KAExB,MAAO,CACLzG,EACA+sC,KAAUjtC,IAAS,GACnBoN,IAAS/N,SAASW,IAAS,GAC3B,CAACA,QACDoN,IACA0/B,KAEJ,CASA1xB,oBAAoB5E,EAAQ2E,EAAOf,EAASc,EAAW,CAAC,KACtD,MAAM6gB,EAAS,CAAChuB,SAAS,IACnB8kC,SAACA,EAAQC,YAAEA,GAAeC,GAAYpsC,KAAKurC,eAAgB17B,EAAQ0E,GACzE,IAAIhb,EAAU2yC,EACd,GAkDJ,SAAqBxZ,EAAOle,GAC1B,MAAM63B,aAACA,EAAYC,YAAEA,IAAejE,QAAa3V,GAEjD,IAAK,MAAMnuB,KAAQiQ,EAAO,CACxB,MAAM80B,EAAa+C,EAAa9nC,GAC1BglC,EAAY+C,EAAY/nC,GACxBjI,GAASitC,GAAaD,IAAe5W,EAAMnuB,GACjD,GAAK+kC,KAAeiD,QAAWjwC,IAAUkwC,GAAYlwC,KAC/CitC,IAAaxiC,OAAQzK,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CA/DQmwC,CAAYP,EAAU13B,GAAQ,CAChC4gB,EAAOhuB,SAAU,EACjBqM,GAAU84B,QAAW94B,GAAWA,IAAYA,EAE5C,MAAMi5B,EAAc1sC,KAAK+P,eAAeF,EAAQ4D,EAAS04B,GACzD5yC,GAAUozC,QAAeT,EAAUz4B,EAASi5B,EAC7C,CAED,IAAK,MAAMnoC,KAAQiQ,EACjB4gB,EAAO7wB,GAAQhL,EAAQgL,GAEzB,OAAO6wB,CACT,CAQArlB,eAAeF,EAAQ4D,EAASc,EAAW,CAAC,IAAKq4B,GAC/C,MAAMV,SAACA,GAAYE,GAAYpsC,KAAKurC,eAAgB17B,EAAQ0E,GAC5D,OAAOhO,OAASkN,IACZk5B,QAAeT,EAAUz4B,OAASlW,EAAWqvC,GAC7CV,CACN,EAGF,SAASE,GAAYS,EAAeh9B,EAAQ0E,GAC1C,IAAIL,EAAQ24B,EAAcxqC,IAAIwN,GACzBqE,IACHA,EAAQ,IAAI/T,IACZ0sC,EAAcrqC,IAAIqN,EAAQqE,IAE5B,MAAMC,EAAWI,EAASsxB,OAC1B,IAAIp6B,EAASyI,EAAM7R,IAAI8R,GACvB,IAAK1I,EAAQ,CAEXA,EAAS,CACPygC,UAFeY,QAAgBj9B,EAAQ0E,GAGvC43B,YAAa53B,EAASpJ,QAAO4hC,IAAMA,EAAElD,cAAc7e,SAAS,YAE9D9W,EAAM1R,IAAI2R,EAAU1I,EACrB,CACD,OAAOA,CACT,CAEA,MAAM+gC,GAAclwC,IAASiK,OAASjK,IACjCT,OAAO+K,oBAAoBtK,GAAOwG,QAAO,CAACC,EAAK8D,IAAQ9D,IAAOwpC,QAAWjwC,EAAMuK,MAAO,GCzW3F,MAAMmmC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBtzC,EAAU8Q,GACtC,MAAoB,QAAb9Q,GAAmC,WAAbA,IAAgE,IAAtCqzC,GAAgB5wC,QAAQzC,IAA6B,MAAT8Q,CACrG,CAEA,SAASyiC,GAAcC,EAAIC,GACzB,OAAO,SAASzuC,EAAGC,GACjB,OAAOD,EAAEwuC,KAAQvuC,EAAEuuC,GACfxuC,EAAEyuC,GAAMxuC,EAAEwuC,GACVzuC,EAAEwuC,GAAMvuC,EAAEuuC,EAChB,CACF,CAEA,SAASE,GAAqB55B,GAC5B,MAAMxZ,EAAQwZ,EAAQxZ,MAChBuM,EAAmBvM,EAAMV,QAAQmN,UAEvCzM,EAAMohC,cAAc,gBACpBmN,OAAahiC,GAAoBA,EAAiB8mC,WAAY,CAAC75B,GAAUxZ,EAC3E,CAEA,SAASszC,GAAoB95B,GAC3B,MAAMxZ,EAAQwZ,EAAQxZ,MAChBuM,EAAmBvM,EAAMV,QAAQmN,WACvC8hC,OAAahiC,GAAoBA,EAAiBgnC,WAAY,CAAC/5B,GAAUxZ,EAC3E,CAMA,SAASwzC,GAAU5rC,GAYjB,OAXIkyB,UAAqC,iBAATlyB,EAC9BA,EAAO1J,SAASC,eAAeyJ,GACtBA,GAAQA,EAAK7I,SAEtB6I,EAAOA,EAAK,IAGVA,GAAQA,EAAK3J,SAEf2J,EAAOA,EAAK3J,QAEP2J,CACT,CAEA,MAAM6rC,GAAY,GACZC,GAAY9mC,IAChB,MAAM3O,EAASu1C,GAAU5mC,GACzB,OAAOhL,OAAOqL,OAAOwmC,IAAWviC,QAAQzM,GAAMA,EAAExG,SAAWA,IAAQgK,KAAG,EAGxE,SAAS0rC,GAAgBvzB,EAAKlZ,EAAOgV,GACnC,MAAMra,EAAOD,OAAOC,KAAKue,GACzB,IAAK,MAAMxT,KAAO/K,EAAM,CACtB,MAAM+xC,GAAUhnC,EAChB,GAAIgnC,GAAU1sC,EAAO,CACnB,MAAM7E,EAAQ+d,EAAIxT,UACXwT,EAAIxT,IACPsP,EAAO,GAAK03B,EAAS1sC,KACvBkZ,EAAIwzB,EAAS13B,GAAQ7Z,EAExB,CACH,CACF,CA+BA,MAAMzE,GAEJ+T,gBAAkBnF,IAClBmF,iBAAmB8hC,GACnB9hC,iBAAmB06B,KACnB16B,gBAAkB2a,GAClB3a,e,QACAA,gBAAkB+hC,GAElB/hC,mBAAmBhK,GACjB2kB,GAAS3jB,OAAOhB,GAChBksC,IACF,CAEAliC,qBAAqBhK,GACnB2kB,GAASljB,UAAUzB,GACnBksC,IACF,CAGA/tC,YAAY8B,EAAMksC,GAChB,MAAM3nC,EAASpG,KAAKoG,OAAS,IAAI+kC,GAAO4C,GAClCC,EAAgBP,GAAU5rC,GAC1BosC,EAAgBN,GAASK,GAC/B,GAAIC,EACF,MAAM,IAAIvnB,MACR,4CAA+CunB,EAAcpjC,GAA7D,kDACgDojC,EAAc/1C,OAAO2S,GAAK,oBAI9E,MAAMtR,EAAU6M,EAAO2J,eAAe3J,EAAO6lC,oBAAqBjsC,KAAKgQ,cAEvEhQ,KAAKwrC,SAAW,IAAKplC,EAAOolC,UAAY1X,GAAgBka,IACxDhuC,KAAKwrC,SAASlc,aAAalpB,GAE3B,MAAMqN,EAAUzT,KAAKwrC,SAASzc,eAAeif,EAAez0C,EAAQklB,aAC9DvmB,EAASub,GAAWA,EAAQvb,OAC5BijB,EAASjjB,GAAUA,EAAOijB,OAC1BC,EAAQljB,GAAUA,EAAOkjB,MAE/Bpb,KAAK6K,IAAKqjC,UACVluC,KAAK8L,IAAM2H,EACXzT,KAAK9H,OAASA,EACd8H,KAAKob,MAAQA,EACbpb,KAAKmb,OAASA,EACdnb,KAAKmuC,SAAW50C,EAIhByG,KAAKouC,aAAepuC,KAAKye,YACzBze,KAAKwtB,QAAU,GACfxtB,KAAKquC,UAAY,GACjBruC,KAAKsK,aAAU/M,EACfyC,KAAK+sB,MAAQ,GACb/sB,KAAK6xB,6BAA0Bt0B,EAC/ByC,KAAKmT,eAAY5V,EACjByC,KAAK+B,QAAU,GACf/B,KAAKsuC,gBAAa/wC,EAClByC,KAAKuuC,WAAa,GAElBvuC,KAAKwuC,0BAAuBjxC,EAC5ByC,KAAKyuC,gBAAkB,GACvBzuC,KAAKxG,OAAS,GACdwG,KAAK0uC,SAAW,IAAI1G,GACpBhoC,KAAK0zB,SAAW,GAChB1zB,KAAK2uC,eAAiB,GACtB3uC,KAAK4uC,UAAW,EAChB5uC,KAAKkV,yBAAsB3X,EAC3ByC,KAAK0M,cAAWnP,EAChByC,KAAK6uC,WAAYC,SAAS7lC,GAAQjJ,KAAKtF,OAAOuO,IAAO1P,EAAQw1C,aAAe,GAC5E/uC,KAAK0W,aAAe,GAGpBg3B,GAAU1tC,KAAK6K,IAAM7K,KAEhByT,GAAYvb,GASjBqL,EAASd,OAAOzC,KAAM,WAAYqtC,IAClC9pC,EAASd,OAAOzC,KAAM,WAAYutC,IAElCvtC,KAAKgvC,cACDhvC,KAAK4uC,UACP5uC,KAAKtF,UATL0S,QAAQ+8B,MAAM,oEAWlB,CAEI1rB,kBACF,MAAOllB,SAASklB,YAACA,EAAWwwB,oBAAEA,GAAoB7zB,MAAEA,SAAOD,EAAMizB,aAAEA,GAAgBpuC,KACnF,OAAK6a,OAAc4D,GAKfwwB,GAAuBb,EAElBA,EAIFjzB,EAASC,EAAQD,EAAS,KATxBsD,CAUX,CAEIlmB,WACF,OAAOyH,KAAKoG,OAAO7N,IACrB,CAEIA,SAAKA,GACPyH,KAAKoG,OAAO7N,KAAOA,CACrB,CAEIgB,cACF,OAAOyG,KAAKmuC,QACd,CAEI50C,YAAQA,GACVyG,KAAKoG,OAAO7M,QAAUA,CACxB,CAEIgtB,eACF,OAAOA,EACT,CAKAyoB,cAeE,OAbAhvC,KAAKq7B,cAAc,cAEfr7B,KAAKzG,QAAQ21C,WACflvC,KAAK4xB,UAELud,QAAYnvC,KAAMA,KAAKzG,QAAQo4B,kBAGjC3xB,KAAKovC,aAGLpvC,KAAKq7B,cAAc,aAEZr7B,IACT,CAEA0rC,QAEE,OADA2D,QAAYrvC,KAAK9H,OAAQ8H,KAAK8L,KACvB9L,IACT,CAEAmD,OAEE,OADAI,EAASJ,KAAKnD,MACPA,IACT,CAOA4xB,OAAOxW,EAAOD,GACP5X,EAAS5B,QAAQ3B,MAGpBA,KAAKsvC,kBAAoB,CAACl0B,QAAOD,UAFjCnb,KAAKuvC,QAAQn0B,EAAOD,EAIxB,CAEAo0B,QAAQn0B,EAAOD,GACb,MAAM5hB,EAAUyG,KAAKzG,QACfrB,EAAS8H,KAAK9H,OACdumB,EAAcllB,EAAQ01C,qBAAuBjvC,KAAKye,YAClD+wB,EAAUxvC,KAAKwrC,SAASpc,eAAel3B,EAAQkjB,EAAOD,EAAQsD,GAC9DgxB,EAAWl2C,EAAQo4B,kBAAoB3xB,KAAKwrC,SAASrc,sBACrDlmB,EAAOjJ,KAAKob,MAAQ,SAAW,SAErCpb,KAAKob,MAAQo0B,EAAQp0B,MACrBpb,KAAKmb,OAASq0B,EAAQr0B,OACtBnb,KAAKouC,aAAepuC,KAAKye,aACpB0wB,QAAYnvC,KAAMyvC,GAAU,KAIjCzvC,KAAKq7B,cAAc,SAAU,CAACrzB,KAAMwnC,KAEpChH,OAAajvC,EAAQm2C,SAAU,CAAC1vC,KAAMwvC,GAAUxvC,MAE5CA,KAAK4uC,UACH5uC,KAAK6uC,UAAU5lC,IAEjBjJ,KAAK2vC,SAGX,CAEAC,sBACE,MACMC,EADU7vC,KAAKzG,QACSC,QAAU,IAExCg1B,OAAKqhB,GAAe,CAACC,EAAavL,KAChCuL,EAAYjlC,GAAK05B,IAErB,CAKAwL,sBACE,MAAMx2C,EAAUyG,KAAKzG,QACfy2C,EAAYz2C,EAAQC,OACpBA,EAASwG,KAAKxG,OACdy2C,EAAUp0C,OAAOC,KAAKtC,GAAQsJ,QAAO,CAACuX,EAAKxP,KAC/CwP,EAAIxP,IAAM,EACHwP,IACN,IACH,IAAIzY,EAAQ,GAERouC,IACFpuC,EAAQA,EAAM0V,OACZzb,OAAOC,KAAKk0C,GAAWtyC,KAAKmN,IAC1B,MAAM++B,EAAeoG,EAAUnlC,GACzBJ,EAAOk/B,GAAc9+B,EAAI++B,GACzBsG,EAAoB,MAATzlC,EACXgQ,EAAwB,MAAThQ,EACrB,MAAO,CACLlR,QAASqwC,EACTuG,UAAWD,EAAW,YAAcz1B,EAAe,SAAW,OAC9D21B,MAAOF,EAAW,eAAiBz1B,EAAe,WAAa,SACjE,OAKN+T,OAAK5sB,GAAQC,IACX,MAAM+nC,EAAe/nC,EAAKtI,QACpBsR,EAAK++B,EAAa/+B,GAClBJ,EAAOk/B,GAAc9+B,EAAI++B,GACzByG,GAAYxiC,OAAe+7B,EAAavwC,KAAMwI,EAAKuuC,YAE3B7yC,IAA1BqsC,EAAajwC,UAA0BszC,GAAqBrD,EAAajwC,SAAU8Q,KAAUwiC,GAAqBprC,EAAKsuC,aACzHvG,EAAajwC,SAAWkI,EAAKsuC,WAG/BF,EAAQplC,IAAM,EACd,IAAI3C,EAAQ,KACZ,GAAI2C,KAAMrR,GAAUA,EAAOqR,GAAIxR,OAASg3C,EACtCnoC,EAAQ1O,EAAOqR,OACV,CAEL3C,EAAQ,IADWqe,GAAS2gB,SAASmJ,GAC7B,CAAe,CACrBxlC,KACAxR,KAAMg3C,EACNvkC,IAAK9L,KAAK8L,IACV7R,MAAO+F,OAETxG,EAAO0O,EAAM2C,IAAM3C,CACpB,CAEDA,EAAM4e,KAAK8iB,EAAcrwC,OAG3Bi1B,OAAKyhB,GAAS,CAACK,EAAYzlC,KACpBylC,UACI92C,EAAOqR,EAAG,KAIrB2jB,OAAKh1B,GAAS0O,IACZ0iB,GAAQtkB,UAAUtG,KAAMkI,EAAOA,EAAM3O,SACrCqxB,GAAQ2C,OAAOvtB,KAAMkI,KAEzB,CAKAqoC,kBACE,MAAM9nC,EAAWzI,KAAKquC,UAChBr4B,EAAUhW,KAAKzH,KAAKG,SAASM,OAC7B+c,EAAUtN,EAASzP,OAGzB,GADAyP,EAASzM,MAAK,CAAC2C,EAAGC,IAAMD,EAAEiK,MAAQhK,EAAEgK,QAChCmN,EAAUC,EAAS,CACrB,IAAK,IAAI9c,EAAI8c,EAAS9c,EAAI6c,IAAW7c,EACnC8G,KAAKwwC,oBAAoBt3C,GAE3BuP,EAAS8N,OAAOP,EAASD,EAAUC,EACpC,CACDhW,KAAKyuC,gBAAkBhmC,EAASgoC,MAAM,GAAGz0C,KAAKkxC,GAAc,QAAS,SACvE,CAKAwD,8BACE,MAAOrC,UAAW5lC,EAAUlQ,MAAMG,SAACA,IAAasH,KAC5CyI,EAASzP,OAASN,EAASM,eACtBgH,KAAKsK,QAEd7B,EAAS5H,SAAQ,CAAC0I,EAAMX,KACmC,IAArDlQ,EAASyS,QAAOuC,GAAKA,IAAMnE,EAAKqa,WAAU5qB,QAC5CgH,KAAKwwC,oBAAoB5nC,KAG/B,CAEA+nC,2BACE,MAAMC,EAAiB,GACjBl4C,EAAWsH,KAAKzH,KAAKG,SAC3B,IAAIQ,EAAGyP,EAIP,IAFA3I,KAAK0wC,8BAEAx3C,EAAI,EAAGyP,EAAOjQ,EAASM,OAAQE,EAAIyP,EAAMzP,IAAK,CACjD,MAAMqU,EAAU7U,EAASQ,GACzB,IAAIqQ,EAAOvJ,KAAK0O,eAAexV,GAC/B,MAAMG,EAAOkU,EAAQlU,MAAQ2G,KAAKoG,OAAO/M,KAazC,GAXIkQ,EAAKlQ,MAAQkQ,EAAKlQ,OAASA,IAC7B2G,KAAKwwC,oBAAoBt3C,GACzBqQ,EAAOvJ,KAAK0O,eAAexV,IAE7BqQ,EAAKlQ,KAAOA,EACZkQ,EAAK0E,UAAYV,EAAQU,WAAaw7B,GAAapwC,EAAM2G,KAAKzG,SAC9DgQ,EAAKsnC,MAAQtjC,EAAQsjC,OAAS,EAC9BtnC,EAAKX,MAAQ1P,EACbqQ,EAAKpQ,MAAQ,GAAKoU,EAAQpU,MAC1BoQ,EAAKunC,QAAU9wC,KAAKogB,iBAAiBlnB,GAEjCqQ,EAAKY,WACPZ,EAAKY,WAAWmD,YAAYpU,GAC5BqQ,EAAKY,WAAW4C,iBACX,CACL,MAAMgkC,EAAkBxqB,GAASwgB,cAAc1tC,IACzCuT,mBAACA,kBAAoBC,GAAmBpG,IAAS/N,SAASW,GAChEwC,OAAOwL,OAAO0pC,EAAiB,CAC7BlkC,gBAAiB0Z,GAASC,WAAW3Z,GACrCD,mBAAoBA,GAAsB2Z,GAASC,WAAW5Z,KAEhErD,EAAKY,WAAa,IAAI4mC,EAAgB/wC,KAAM9G,GAC5C03C,EAAe33C,KAAKsQ,EAAKY,WAC1B,CACH,CAGA,OADAnK,KAAKuwC,kBACEK,CACT,CAMAI,kBACExiB,OAAKxuB,KAAKzH,KAAKG,UAAU,CAAC6U,EAASrE,KACjClJ,KAAK0O,eAAexF,GAAciB,WAAW0E,OAAK,GACjD7O,KACL,CAKA6O,QACE7O,KAAKgxC,iBACLhxC,KAAKq7B,cAAc,QACrB,CAEA3gC,OAAOuO,GACL,MAAM7C,EAASpG,KAAKoG,OAEpBA,EAAO1L,SACP,MAAMnB,EAAUyG,KAAKmuC,SAAW/nC,EAAO2J,eAAe3J,EAAO6lC,oBAAqBjsC,KAAKgQ,cACjFihC,EAAgBjxC,KAAKkV,qBAAuB3b,EAAQmN,UAU1D,GARA1G,KAAKkxC,gBACLlxC,KAAKmxC,sBACLnxC,KAAKoxC,uBAILpxC,KAAK0uC,SAAShG,cAEuD,IAAjE1oC,KAAKq7B,cAAc,eAAgB,CAACpyB,OAAMw/B,YAAY,IACxD,OAIF,MAAMmI,EAAiB5wC,KAAK2wC,2BAE5B3wC,KAAKq7B,cAAc,wBAGnB,IAAIzN,EAAa,EACjB,IAAK,IAAI10B,EAAI,EAAGyP,EAAO3I,KAAKzH,KAAKG,SAASM,OAAQE,EAAIyP,EAAMzP,IAAK,CAC/D,MAAMiR,WAACA,GAAcnK,KAAK0O,eAAexV,GACnC2V,GAASoiC,IAAwD,IAAvCL,EAAex0C,QAAQ+N,GAGvDA,EAAWmF,sBAAsBT,GACjC+e,EAAa3sB,KAAKgC,KAAKkH,EAAWiI,iBAAkBwb,EACtD,CACAA,EAAa5tB,KAAKqxC,YAAc93C,EAAQ+xB,OAAOgmB,YAAc1jB,EAAa,EAC1E5tB,KAAKuxC,cAAc3jB,GAGdqjB,IAGHziB,OAAKoiB,GAAiBzmC,IACpBA,EAAW0E,OAAK,IAIpB7O,KAAKwxC,gBAAgBvoC,GAGrBjJ,KAAKq7B,cAAc,cAAe,CAACpyB,SAEnCjJ,KAAKwtB,QAAQxxB,KAAKkxC,GAAc,IAAK,SAGrC,MAAMnrC,QAACA,EAAOusC,WAAEA,GAActuC,KAC1BsuC,EACFtuC,KAAKyxC,cAAcnD,GAAY,GACtBvsC,EAAQ/I,QACjBgH,KAAK0xC,mBAAmB3vC,EAASA,GAAS,GAG5C/B,KAAK2vC,QACP,CAKAuB,iBACE1iB,OAAKxuB,KAAKxG,QAAS0O,IACjB0iB,GAAQ8C,UAAU1tB,KAAMkI,MAG1BlI,KAAK4vC,sBACL5vC,KAAK+vC,qBACP,CAKAoB,sBACE,MAAM53C,EAAUyG,KAAKzG,QACfo4C,EAAiB,IAAI5G,IAAIlvC,OAAOC,KAAKkE,KAAKuuC,aAC1CqD,EAAY,IAAI7G,IAAIxxC,EAAQs4C,SAE7BC,QAAUH,EAAgBC,MAAgB5xC,KAAKwuC,uBAAyBj1C,EAAQ21C,aAEnFlvC,KAAK+xC,eACL/xC,KAAKovC,aAET,CAKAgC,uBACE,MAAMzC,eAACA,GAAkB3uC,KACnBgyC,EAAUhyC,KAAKiyC,0BAA4B,GACjD,IAAK,MAAM/rC,OAACA,EAAM/E,MAAEA,QAAO+O,KAAU8hC,EAAS,CAE5CpE,GAAgBe,EAAgBxtC,EADR,oBAAX+E,GAAgCgK,EAAQA,EAEvD,CACF,CAKA+hC,yBACE,MAAMv7B,EAAe1W,KAAK0W,aAC1B,IAAKA,IAAiBA,EAAa1d,OACjC,OAGFgH,KAAK0W,aAAe,GACpB,MAAMw7B,EAAelyC,KAAKzH,KAAKG,SAASM,OAClCm5C,EAAW1T,GAAQ,IAAIsM,IAC3Br0B,EACGvL,QAAOzM,GAAKA,EAAE,KAAO+/B,IACrB/gC,KAAI,CAACgB,EAAGxF,IAAMA,EAAI,IAAMwF,EAAE6X,OAAO,GAAGsvB,KAAK,QAGxCuM,EAAYD,EAAQ,GAC1B,IAAK,IAAIj5C,EAAI,EAAGA,EAAIg5C,EAAch5C,IAChC,KAAK44C,QAAUM,EAAWD,EAAQj5C,IAChC,OAGJ,OAAOgW,MAAMrU,KAAKu3C,GACf10C,KAAIgB,GAAKA,EAAEgnC,MAAM,OACjBhoC,KAAIiB,IAAM,CAACuH,OAAQvH,EAAE,GAAIwC,OAAQxC,EAAE,GAAIuR,OAAQvR,EAAE,MACtD,CAOA4yC,cAAc3jB,GACZ,IAA+D,IAA3D5tB,KAAKq7B,cAAc,eAAgB,CAACoN,YAAY,IAClD,OAGF7d,GAAQlwB,OAAOsF,KAAMA,KAAKob,MAAOpb,KAAKmb,OAAQyS,GAE9C,MAAM1a,EAAOlT,KAAKmT,UACZk/B,EAASn/B,EAAKkI,OAAS,GAAKlI,EAAKiI,QAAU,EAEjDnb,KAAKwtB,QAAU,IACfgB,OAAKxuB,KAAK+sB,OAAQvC,IACZ6nB,GAA2B,cAAjB7nB,EAAI7wB,WAOd6wB,EAAIlkB,WACNkkB,EAAIlkB,YAENtG,KAAKwtB,QAAQv0B,QAAQuxB,EAAIgD,WAAO,GAC/BxtB,MAEHA,KAAKwtB,QAAQ3sB,SAAQ,CAACgB,EAAM+G,KAC1B/G,EAAKywC,KAAO1pC,KAGd5I,KAAKq7B,cAAc,cACrB,CAOAmW,gBAAgBvoC,GACd,IAA6E,IAAzEjJ,KAAKq7B,cAAc,uBAAwB,CAACpyB,OAAMw/B,YAAY,IAAlE,CAIA,IAAK,IAAIvvC,EAAI,EAAGyP,EAAO3I,KAAKzH,KAAKG,SAASM,OAAQE,EAAIyP,IAAQzP,EAC5D8G,KAAK0O,eAAexV,GAAGiR,WAAW7D,YAGpC,IAAK,IAAIpN,EAAI,EAAGyP,EAAO3I,KAAKzH,KAAKG,SAASM,OAAQE,EAAIyP,IAAQzP,EAC5D8G,KAAKuyC,eAAer5C,GAAGqzC,QAAWtjC,GAAQA,EAAK,CAACC,aAAchQ,IAAM+P,GAGtEjJ,KAAKq7B,cAAc,sBAAuB,CAACpyB,QAXzC,CAYJ,CAOAspC,eAAe3pC,EAAOK,GACpB,MAAMM,EAAOvJ,KAAK0O,eAAe9F,GAC3B6N,EAAO,CAAClN,OAAMX,QAAOK,OAAMw/B,YAAY,IAEW,IAApDzoC,KAAKq7B,cAAc,sBAAuB5kB,KAI9ClN,EAAKY,WAAW5I,QAAQ0H,GAExBwN,EAAKgyB,YAAa,EAClBzoC,KAAKq7B,cAAc,qBAAsB5kB,GAC3C,CAEAk5B,UACiE,IAA3D3vC,KAAKq7B,cAAc,eAAgB,CAACoN,YAAY,MAIhDllC,EAASV,IAAI7C,MACXA,KAAK4uC,WAAarrC,EAAS5B,QAAQ3B,OACrCuD,EAASpC,MAAMnB,OAGjBA,KAAK8B,OACLurC,GAAqB,CAACpzC,MAAO+F,QAEjC,CAEA8B,OACE,IAAI5I,EACJ,GAAI8G,KAAKsvC,kBAAmB,CAC1B,MAAMl0B,MAACA,SAAOD,GAAUnb,KAAKsvC,kBAC7BtvC,KAAKuvC,QAAQn0B,EAAOD,GACpBnb,KAAKsvC,kBAAoB,IAC1B,CAGD,GAFAtvC,KAAK0rC,QAED1rC,KAAKob,OAAS,GAAKpb,KAAKmb,QAAU,EACpC,OAGF,IAA6D,IAAzDnb,KAAKq7B,cAAc,aAAc,CAACoN,YAAY,IAChD,OAMF,MAAM+J,EAASxyC,KAAKwtB,QACpB,IAAKt0B,EAAI,EAAGA,EAAIs5C,EAAOx5C,QAAUw5C,EAAOt5C,GAAGu0B,GAAK,IAAKv0B,EACnDs5C,EAAOt5C,GAAG4I,KAAK9B,KAAKmT,WAMtB,IAHAnT,KAAKyyC,gBAGEv5C,EAAIs5C,EAAOx5C,SAAUE,EAC1Bs5C,EAAOt5C,GAAG4I,KAAK9B,KAAKmT,WAGtBnT,KAAKq7B,cAAc,YACrB,CAKA3yB,uBAAuBF,GACrB,MAAMC,EAAWzI,KAAKyuC,gBAChBrZ,EAAS,GACf,IAAIl8B,EAAGyP,EAEP,IAAKzP,EAAI,EAAGyP,EAAOF,EAASzP,OAAQE,EAAIyP,IAAQzP,EAAG,CACjD,MAAMqQ,EAAOd,EAASvP,GACjBsP,IAAiBe,EAAKunC,SACzB1b,EAAOn8B,KAAKsQ,EAEhB,CAEA,OAAO6rB,CACT,CAMAlN,+BACE,OAAOloB,KAAK0I,wBAAuB,EACrC,CAOA+pC,gBACE,IAAqE,IAAjEzyC,KAAKq7B,cAAc,qBAAsB,CAACoN,YAAY,IACxD,OAGF,MAAMhgC,EAAWzI,KAAKkoB,+BACtB,IAAK,IAAIhvB,EAAIuP,EAASzP,OAAS,EAAGE,GAAK,IAAKA,EAC1C8G,KAAK0yC,aAAajqC,EAASvP,IAG7B8G,KAAKq7B,cAAc,oBACrB,CAOAqX,aAAanpC,GACX,MAAMuC,EAAM9L,KAAK8L,IACXiH,EAAOxJ,EAAKgJ,MACZogC,GAAW5/B,EAAKF,SAChBK,EAvrBV,SAAwB3J,GACtB,MAAM+E,OAACA,SAAQE,GAAUjF,EACzB,GAAI+E,GAAUE,EACZ,MAAO,CACLoE,KAAMtE,EAAOsE,KACbF,MAAOpE,EAAOoE,MACdD,IAAKjE,EAAOiE,IACZE,OAAQnE,EAAOmE,OAGrB,CA6qBiBigC,CAAerpC,IAASvJ,KAAKmT,UACpCsD,EAAO,CACXlN,OACAX,MAAOW,EAAKX,MACZ6/B,YAAY,IAGwC,IAAlDzoC,KAAKq7B,cAAc,oBAAqB5kB,KAIxCk8B,IACFhP,OAAS73B,EAAK,CACZ8G,MAAoB,IAAdG,EAAKH,KAAiB,EAAIM,EAAKN,KAAOG,EAAKH,KACjDF,OAAsB,IAAfK,EAAKL,MAAkB1S,KAAKob,MAAQlI,EAAKR,MAAQK,EAAKL,MAC7DD,KAAkB,IAAbM,EAAKN,IAAgB,EAAIS,EAAKT,IAAMM,EAAKN,IAC9CE,QAAwB,IAAhBI,EAAKJ,OAAmB3S,KAAKmb,OAASjI,EAAKP,OAASI,EAAKJ,SAIrEpJ,EAAKY,WAAWrI,OAEZ6wC,IACF7O,OAAWh4B,GAGb2K,EAAKgyB,YAAa,EAClBzoC,KAAKq7B,cAAc,mBAAoB5kB,GACzC,CAOA8R,cAAc3K,GACZ,OAAO4K,OAAe5K,EAAO5d,KAAKmT,UAAWnT,KAAKqxC,YACpD,CAEAwB,0BAA0BtzB,EAAGtW,EAAM1P,EAAS8uB,GAC1C,MAAMniB,EAAS6jB,EAAYC,MAAM/gB,GACjC,MAAsB,mBAAX/C,EACFA,EAAOlG,KAAMuf,EAAGhmB,EAAS8uB,GAG3B,EACT,CAEA3Z,eAAexF,GACb,MAAMqE,EAAUvN,KAAKzH,KAAKG,SAASwQ,GAC7BT,EAAWzI,KAAKquC,UACtB,IAAI9kC,EAAOd,EAAS0C,QAAOuC,GAAKA,GAAKA,EAAEkW,WAAarW,IAASrL,MAoB7D,OAlBKqH,IACHA,EAAO,CACLlQ,KAAM,KACNd,KAAM,GACNgV,QAAS,KACTpD,WAAY,KACZqH,OAAQ,KACR5D,QAAS,KACTxU,QAAS,KACTy3C,MAAOtjC,GAAWA,EAAQsjC,OAAS,EACnCjoC,MAAOM,EACP0a,SAAUrW,EACVjC,QAAS,GACT8E,SAAS,GAEX3H,EAASxP,KAAKsQ,IAGTA,CACT,CAEAyG,aACE,OAAOhQ,KAAK0M,WAAa1M,KAAK0M,UAAWiH,OAAc,KAAM,CAAC1Z,MAAO+F,KAAM3G,KAAM,UACnF,CAEAksB,yBACE,OAAOvlB,KAAKkoB,+BAA+BlvB,MAC7C,CAEAonB,iBAAiBlX,GACf,MAAMqE,EAAUvN,KAAKzH,KAAKG,SAASwQ,GACnC,IAAKqE,EACH,OAAO,EAGT,MAAMhE,EAAOvJ,KAAK0O,eAAexF,GAIjC,MAA8B,kBAAhBK,EAAKiI,QAAwBjI,EAAKiI,QAAUjE,EAAQiE,MACpE,CAEAshC,qBAAqB5pC,EAAc4nC,GACpB9wC,KAAK0O,eAAexF,GAC5BsI,QAAUs/B,CACjB,CAEArxB,qBAAqB7W,GACnB5I,KAAK2uC,eAAe/lC,IAAU5I,KAAK2uC,eAAe/lC,EACpD,CAEA2T,kBAAkB3T,GAChB,OAAQ5I,KAAK2uC,eAAe/lC,EAC9B,CAKAmqC,kBAAkB7pC,EAAc0K,EAAWk9B,GACzC,MAAM7nC,EAAO6nC,EAAU,OAAS,OAC1BvnC,EAAOvJ,KAAK0O,eAAexF,GAC3B3I,EAAQgJ,EAAKY,WAAWwK,wBAAmBpX,EAAW0L,IAExDoL,OAAQT,IACVrK,EAAKhR,KAAKqb,GAAWpC,QAAUs/B,EAC/B9wC,KAAKtF,WAELsF,KAAK8yC,qBAAqB5pC,EAAc4nC,GAExCvwC,EAAM7F,OAAO6O,EAAM,CAACunC,YACpB9wC,KAAKtF,QAAQoR,GAAQA,EAAI5C,eAAiBA,EAAeD,OAAO1L,IAEpE,CAEAy1C,KAAK9pC,EAAc0K,GACjB5T,KAAK+yC,kBAAkB7pC,EAAc0K,GAAW,EAClD,CAEAq/B,KAAK/pC,EAAc0K,GACjB5T,KAAK+yC,kBAAkB7pC,EAAc0K,GAAW,EAClD,CAKA48B,oBAAoBtnC,GAClB,MAAMK,EAAOvJ,KAAKquC,UAAUnlC,GACxBK,GAAQA,EAAKY,YACfZ,EAAKY,WAAW2E,kBAEX9O,KAAKquC,UAAUnlC,EACxB,CAEAgqC,QACE,IAAIh6C,EAAGyP,EAIP,IAHA3I,KAAKmD,OACLI,EAASF,OAAOrD,MAEX9G,EAAI,EAAGyP,EAAO3I,KAAKzH,KAAKG,SAASM,OAAQE,EAAIyP,IAAQzP,EACxD8G,KAAKwwC,oBAAoBt3C,EAE7B,CAEAi6C,UACEnzC,KAAKq7B,cAAc,iBACnB,MAAMnjC,OAACA,EAAM4T,IAAEA,GAAO9L,KAEtBA,KAAKkzC,QACLlzC,KAAKoG,OAAOqlC,aAERvzC,IACF8H,KAAK+xC,gBACL1C,QAAYn3C,EAAQ4T,GACpB9L,KAAKwrC,SAASxc,eAAeljB,GAC7B9L,KAAK9H,OAAS,KACd8H,KAAK8L,IAAM,aAGN4hC,GAAU1tC,KAAK6K,IAEtB7K,KAAKq7B,cAAc,eACrB,CAEA+X,iBAAiB38B,GACf,OAAOzW,KAAK9H,OAAOm7C,aAAa58B,EAClC,CAKA24B,aACEpvC,KAAKszC,iBACDtzC,KAAKzG,QAAQ21C,WACflvC,KAAKuzC,uBAELvzC,KAAK4uC,UAAW,CAEpB,CAKA0E,iBACE,MAAM5yC,EAAYV,KAAKuuC,WACjB/C,EAAWxrC,KAAKwrC,SAEhBgI,EAAO,CAACn6C,EAAM41B,KAClBuc,EAAShxC,iBAAiBwF,KAAM3G,EAAM41B,GACtCvuB,EAAUrH,GAAQ41B,GAGdA,EAAW,CAAC1P,EAAG7R,EAAGvT,KACtBolB,EAAEK,QAAUlS,EACZ6R,EAAEM,QAAU1lB,EACZ6F,KAAKyxC,cAAclyB,KAGrBiP,OAAKxuB,KAAKzG,QAAQs4C,QAASx4C,GAASm6C,EAAKn6C,EAAM41B,IACjD,CAKAskB,uBACOvzC,KAAKwuC,uBACRxuC,KAAKwuC,qBAAuB,IAE9B,MAAM9tC,EAAYV,KAAKwuC,qBACjBhD,EAAWxrC,KAAKwrC,SAEhBgI,EAAO,CAACn6C,EAAM41B,KAClBuc,EAAShxC,iBAAiBwF,KAAM3G,EAAM41B,GACtCvuB,EAAUrH,GAAQ41B,GAEdwkB,EAAU,CAACp6C,EAAM41B,KACjBvuB,EAAUrH,KACZmyC,EAAStc,oBAAoBlvB,KAAM3G,EAAM41B,UAClCvuB,EAAUrH,GAClB,EAGG41B,EAAW,CAAC7T,EAAOD,KACnBnb,KAAK9H,QACP8H,KAAK4xB,OAAOxW,EAAOD,IAIvB,IAAIu4B,EACJ,MAAM9E,EAAW,KACf6E,EAAQ,SAAU7E,GAElB5uC,KAAK4uC,UAAW,EAChB5uC,KAAK4xB,SAEL4hB,EAAK,SAAUvkB,GACfukB,EAAK,SAAUE,IAGjBA,EAAW,KACT1zC,KAAK4uC,UAAW,EAEhB6E,EAAQ,SAAUxkB,GAGlBjvB,KAAKkzC,QACLlzC,KAAKuvC,QAAQ,EAAG,GAEhBiE,EAAK,SAAU5E,IAGbpD,EAASnc,WAAWrvB,KAAK9H,QAC3B02C,IAEA8E,GAEJ,CAKA3B,gBACEvjB,OAAKxuB,KAAKuuC,YAAY,CAACtf,EAAU51B,KAC/B2G,KAAKwrC,SAAStc,oBAAoBlvB,KAAM3G,EAAM41B,MAEhDjvB,KAAKuuC,WAAa,IAElB/f,OAAKxuB,KAAKwuC,sBAAsB,CAACvf,EAAU51B,KACzC2G,KAAKwrC,SAAStc,oBAAoBlvB,KAAM3G,EAAM41B,MAEhDjvB,KAAKwuC,0BAAuBjxC,CAC9B,CAEAo2C,iBAAiB/xC,EAAOqH,EAAMksB,GAC5B,MAAMye,EAASze,EAAU,MAAQ,SACjC,IAAI5rB,EAAM1H,EAAM3I,EAAGyP,EAOnB,IALa,YAATM,IACFM,EAAOvJ,KAAK0O,eAAe9M,EAAM,GAAGsH,cACpCK,EAAKY,WAAW,IAAMypC,EAAS,wBAG5B16C,EAAI,EAAGyP,EAAO/G,EAAM5I,OAAQE,EAAIyP,IAAQzP,EAAG,CAC9C2I,EAAOD,EAAM1I,GACb,MAAMiR,EAAatI,GAAQ7B,KAAK0O,eAAe7M,EAAKqH,cAAciB,WAC9DA,GACFA,EAAWypC,EAAS,cAAc/xC,EAAKwR,QAASxR,EAAKqH,aAAcrH,EAAK+G,MAE5E,CACF,CAMAirC,oBACE,OAAO7zC,KAAK+B,SAAW,EACzB,CAMA+xC,kBAAkBC,GAChB,MAAMC,EAAah0C,KAAK+B,SAAW,GAC7B0D,EAASsuC,EAAer2C,KAAI,EAAEwL,eAAcN,YAChD,MAAMW,EAAOvJ,KAAK0O,eAAexF,GACjC,IAAKK,EACH,MAAM,IAAImd,MAAM,6BAA+Bxd,GAGjD,MAAO,CACLA,eACAmK,QAAS9J,EAAKhR,KAAKqQ,GACnBA,QACF,MAEeqrC,QAAexuC,EAAQuuC,KAGtCh0C,KAAK+B,QAAU0D,EAEfzF,KAAKsuC,WAAa,KAClBtuC,KAAK0xC,mBAAmBjsC,EAAQuuC,GAEpC,CAWA3Y,cAAc8M,EAAM1xB,EAAMtL,GACxB,OAAOnL,KAAK0uC,SAASxG,OAAOloC,KAAMmoC,EAAM1xB,EAAMtL,EAChD,CAOAgC,gBAAgB+mC,GACd,OAA6E,IAAtEl0C,KAAK0uC,SAASv3B,OAAOhM,QAAO4hC,GAAKA,EAAExE,OAAO19B,KAAOqpC,IAAUl7C,MACpE,CAKA04C,mBAAmBjsC,EAAQuuC,EAAYG,GACrC,MAAMC,EAAep0C,KAAKzG,QAAQ86C,MAC5BrtB,EAAO,CAACroB,EAAGC,IAAMD,EAAEwM,QAAOuC,IAAM9O,EAAEwqC,MAAKjvC,GAAKuT,EAAExE,eAAiB/O,EAAE+O,cAAgBwE,EAAE9E,QAAUzO,EAAEyO,UAC/F0rC,EAActtB,EAAKgtB,EAAYvuC,GAC/B8uC,EAAYJ,EAAS1uC,EAASuhB,EAAKvhB,EAAQuuC,GAE7CM,EAAYt7C,QACdgH,KAAK2zC,iBAAiBW,EAAaF,EAAanrC,MAAM,GAGpDsrC,EAAUv7C,QAAUo7C,EAAanrC,MACnCjJ,KAAK2zC,iBAAiBY,EAAWH,EAAanrC,MAAM,EAExD,CAKAwoC,cAAclyB,EAAG40B,GACf,MAAM19B,EAAO,CACX/T,MAAO6c,EACP40B,SACA1L,YAAY,EACZ+L,YAAax0C,KAAKuoB,cAAchJ,IAE5Bk1B,EAAelM,IAAYA,EAAOhvC,QAAQs4C,QAAU7xC,KAAKzG,QAAQs4C,QAAQ7mB,SAASzL,EAAEoT,OAAOt5B,MAEjG,IAA6D,IAAzD2G,KAAKq7B,cAAc,cAAe5kB,EAAMg+B,GAC1C,OAGF,MAAMvnB,EAAUltB,KAAK00C,aAAan1B,EAAG40B,EAAQ19B,EAAK+9B,aASlD,OAPA/9B,EAAKgyB,YAAa,EAClBzoC,KAAKq7B,cAAc,aAAc5kB,EAAMg+B,IAEnCvnB,GAAWzW,EAAKyW,UAClBltB,KAAK2vC,SAGA3vC,IACT,CAUA00C,aAAan1B,EAAG40B,EAAQK,GACtB,MAAOzyC,QAASiyC,EAAa,GAAEz6C,QAAEA,GAAWyG,KAetCqoB,EAAmB8rB,EACnB1uC,EAASzF,KAAK20C,mBAAmBp1B,EAAGy0B,EAAYQ,EAAansB,GAC7DusB,GAAUC,QAAct1B,GACxBu1B,EAnnCV,SAA4Bv1B,EAAGu1B,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAXj1B,EAAElmB,KAGlBu7C,EACKE,EAEFv1B,EALE,IAMX,CA2mCsBw1B,CAAmBx1B,EAAGvf,KAAKsuC,WAAYkG,EAAaI,GAElEJ,IAGFx0C,KAAKsuC,WAAa,MAGlB9F,OAAajvC,EAAQy7C,QAAS,CAACz1B,EAAG9Z,EAAQzF,MAAOA,MAE7C40C,IACFpM,OAAajvC,EAAQ+lB,QAAS,CAACC,EAAG9Z,EAAQzF,MAAOA,OAIrD,MAAMktB,IAAW+mB,QAAexuC,EAAQuuC,GAQxC,OAPI9mB,GAAWinB,KACbn0C,KAAK+B,QAAU0D,EACfzF,KAAK0xC,mBAAmBjsC,EAAQuuC,EAAYG,IAG9Cn0C,KAAKsuC,WAAawG,EAEX5nB,CACT,CAUAynB,mBAAmBp1B,EAAGy0B,EAAYQ,EAAansB,GAC7C,GAAe,aAAX9I,EAAElmB,KACJ,MAAO,GAGT,IAAKm7C,EAEH,OAAOR,EAGT,MAAMI,EAAep0C,KAAKzG,QAAQ86C,MAClC,OAAOr0C,KAAK6yC,0BAA0BtzB,EAAG60B,EAAanrC,KAAMmrC,EAAc/rB,EAC5E,EAIF,SAASylB,KACP,OAAOtf,OAAK32B,GAAM61C,WAAYzzC,GAAUA,EAAMy0C,SAAShG,cACzD,CCpuCA,SAASuM,GAAkBlyB,EAAiBrD,EAAqBC,EAAqBu1B,GACpF,MAAMC,GARiB74C,EAQGymB,EAAIxpB,QAAQ67C,cAP/BC,QAAkB/4C,EAAO,CAAC,aAAc,WAAY,aAAc,cAD3E,IAAyBA,EASvB,MAAMg5C,GAAiB31B,EAAcD,GAAe,EAC9C61B,EAAat0C,KAAKC,IAAIo0C,EAAeJ,EAAax1B,EAAc,GAShE81B,EAAqBh6B,IACzB,MAAMi6B,GAAiB91B,EAAc1e,KAAKC,IAAIo0C,EAAe95B,IAAQ05B,EAAa,EAClF,OAAO5Y,OAAY9gB,EAAK,EAAGva,KAAKC,IAAIo0C,EAAeG,KAGrD,MAAO,CACLC,WAAYF,EAAkBL,EAAEO,YAChCC,SAAUH,EAAkBL,EAAEQ,UAC9BC,YAAYtZ,OAAY6Y,EAAES,WAAY,EAAGL,GACzCM,UAAUvZ,OAAY6Y,EAAEU,SAAU,EAAGN,GAEzC,CAKA,SAASO,GAAWn4C,EAAWo4C,EAAeroC,EAAWvT,GACvD,MAAO,CACLuT,EAAGA,EAAI/P,EAAIsD,KAAKggB,IAAI80B,GACpB57C,EAAGA,EAAIwD,EAAIsD,KAAKkgB,IAAI40B,GAExB,CAiBA,SAASC,GACPlqC,EACAuH,EACA0G,EACAuE,EACAhW,EACA0c,GAEA,MAAMtX,EAACA,IAAGvT,EAAG2mB,WAAY3f,EAAK80C,YAAEA,EAAav2B,YAAaw2B,GAAU7iC,EAE9DsM,EAAc1e,KAAKgC,IAAIoQ,EAAQsM,YAAcrB,EAAUvE,EAASk8B,EAAa,GAC7Ev2B,EAAcw2B,EAAS,EAAIA,EAAS53B,EAAUvE,EAASk8B,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAMC,EAAQ9tC,EAAMnH,EAEpB,GAAImd,EAAS,CAIX,MAEM+3B,IAFuBH,EAAS,EAAIA,EAAS53B,EAAU,IAChCqB,EAAc,EAAIA,EAAcrB,EAAU,IACI,EAE3E63B,GAAiBC,GAD4B,IAAvBC,EAA2BD,EAASC,GAAuBA,EAAqB/3B,GAAW83B,IACvE,CAC3C,CAED,MACME,GAAeF,EADRn1C,KAAKgC,IAAI,KAAOmzC,EAAQz2B,EAAc5F,EAAS+H,KAAMnC,GAC7B,EAC/BmB,EAAa3f,EAAQm1C,EAAcH,EACnCp1B,EAAWzY,EAAMguC,EAAcH,GAC/BT,WAACA,WAAYC,aAAUC,EAAUC,SAAEA,GAAYZ,GAAkB5hC,EAASqM,EAAaC,EAAaoB,EAAWD,GAE/Gy1B,EAA2B52B,EAAc+1B,EACzCc,EAAyB72B,EAAcg2B,EACvCc,EAA0B31B,EAAa40B,EAAaa,EACpDG,EAAwB31B,EAAW40B,EAAWa,EAE9CG,EAA2Bj3B,EAAck2B,EACzCgB,EAAyBl3B,EAAcm2B,EACvCgB,EAA0B/1B,EAAa80B,EAAae,EACpDG,EAAwB/1B,EAAW80B,EAAWe,EAIpD,GAFA9qC,EAAIq3B,YAEAne,EAAU,CAEZ,MAAM+xB,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJA5qC,EAAIiX,IAAIrV,EAAGvT,EAAGwlB,EAAa82B,EAAyBM,GACpDjrC,EAAIiX,IAAIrV,EAAGvT,EAAGwlB,EAAao3B,EAAuBL,GAG9Cf,EAAW,EAAG,CAChB,MAAMqB,EAAUlB,GAAWU,EAAwBE,EAAuBhpC,EAAGvT,GAC7E2R,EAAIiX,IAAIi0B,EAAQtpC,EAAGspC,EAAQ78C,EAAGw7C,EAAUe,EAAuB31B,EAAWa,IAC3E,CAGD,MAAMq1B,EAAKnB,GAAWc,EAAwB71B,EAAUrT,EAAGvT,GAI3D,GAHA2R,EAAIu3B,OAAO4T,EAAGvpC,EAAGupC,EAAG98C,GAGhB07C,EAAW,EAAG,CAChB,MAAMmB,EAAUlB,GAAWc,EAAwBE,EAAuBppC,EAAGvT,GAC7E2R,EAAIiX,IAAIi0B,EAAQtpC,EAAGspC,EAAQ78C,EAAG07C,EAAU90B,EAAWa,IAASk1B,EAAwB71C,KAAK6gB,GAC1F,CAGD,MAAMo1B,GAA0Bn2B,EAAY80B,EAAWn2B,GAAiBoB,EAAc80B,EAAal2B,IAAiB,EAKpH,GAJA5T,EAAIiX,IAAIrV,EAAGvT,EAAGulB,EAAaqB,EAAY80B,EAAWn2B,EAAcw3B,GAAuB,GACvFprC,EAAIiX,IAAIrV,EAAGvT,EAAGulB,EAAaw3B,EAAuBp2B,EAAc80B,EAAal2B,GAAc,GAGvFk2B,EAAa,EAAG,CAClB,MAAMoB,EAAUlB,GAAWa,EAA0BE,EAAyBnpC,EAAGvT,GACjF2R,EAAIiX,IAAIi0B,EAAQtpC,EAAGspC,EAAQ78C,EAAGy7C,EAAYiB,EAA0B51C,KAAK6gB,GAAIhB,EAAac,IAC3F,CAGD,MAAMu1B,EAAKrB,GAAWS,EAA0Bz1B,EAAYpT,EAAGvT,GAI/D,GAHA2R,EAAIu3B,OAAO8T,EAAGzpC,EAAGypC,EAAGh9C,GAGhBu7C,EAAa,EAAG,CAClB,MAAMsB,EAAUlB,GAAWS,EAA0BE,EAAyB/oC,EAAGvT,GACjF2R,EAAIiX,IAAIi0B,EAAQtpC,EAAGspC,EAAQ78C,EAAGu7C,EAAY50B,EAAac,IAAS60B,EACjE,CACI,MACL3qC,EAAIs3B,OAAO11B,EAAGvT,GAEd,MAAMi9C,EAAcn2C,KAAKggB,IAAIw1B,GAA2B92B,EAAcjS,EAChE2pC,EAAcp2C,KAAKkgB,IAAIs1B,GAA2B92B,EAAcxlB,EACtE2R,EAAIu3B,OAAO+T,EAAaC,GAExB,MAAMC,EAAYr2C,KAAKggB,IAAIy1B,GAAyB/2B,EAAcjS,EAC5D6pC,EAAYt2C,KAAKkgB,IAAIu1B,GAAyB/2B,EAAcxlB,EAClE2R,EAAIu3B,OAAOiU,EAAWC,EACvB,CAEDzrC,EAAI0rC,WACN,CAyBA,SAAShU,GACP13B,EACAuH,EACA0G,EACAuE,EACA0G,GAEA,MAAMyyB,YAACA,aAAa32B,gBAAYzC,EAAa9kB,QAAEA,GAAW8Z,GACpDgM,YAACA,kBAAaq4B,GAAmBn+C,EACjCo+C,EAAgC,UAAxBp+C,EAAQ4pB,YAEtB,IAAK9D,EACH,OAGEs4B,GACF7rC,EAAIsT,UAA0B,EAAdC,EAChBvT,EAAI8rC,SAAWF,GAAmB,UAElC5rC,EAAIsT,UAAYC,EAChBvT,EAAI8rC,SAAWF,GAAmB,SAGpC,IAAI32B,EAAW1N,EAAQ0N,SACvB,GAAI02B,EAAa,CACfzB,GAAQlqC,EAAKuH,EAAS0G,EAAQuE,EAASyC,EAAUiE,GACjD,IAAK,IAAI9rB,EAAI,EAAGA,EAAIu+C,IAAev+C,EACjC4S,EAAIw3B,SAED7nB,MAAM4C,KACT0C,EAAWD,GAAczC,EAAgB8B,KAAOA,KAEnD,CAEGw3B,GA1ON,SAAiB7rC,EAA+BuH,EAAqB0N,GACnE,MAAMD,WAACA,cAAYm1B,IAAavoC,IAAGvT,cAAGwlB,cAAaD,GAAerM,EAClE,IAAIwkC,EAAc5B,EAAct2B,EAIhC7T,EAAIq3B,YACJr3B,EAAIiX,IAAIrV,EAAGvT,EAAGwlB,EAAamB,EAAa+2B,EAAa92B,EAAW82B,GAC5Dn4B,EAAcu2B,GAChB4B,EAAc5B,EAAcv2B,EAC5B5T,EAAIiX,IAAIrV,EAAGvT,EAAGulB,EAAaqB,EAAW82B,EAAa/2B,EAAa+2B,GAAa,IAE7E/rC,EAAIiX,IAAIrV,EAAGvT,EAAG87C,EAAal1B,EAAWa,IAASd,EAAac,KAE9D9V,EAAI0rC,YACJ1rC,EAAIiH,MACN,CA2NI+kC,CAAQhsC,EAAKuH,EAAS0N,GAGnB02B,IACHzB,GAAQlqC,EAAKuH,EAAS0G,EAAQuE,EAASyC,EAAUiE,GACjDlZ,EAAIw3B,SAER,CAUe,MAAMyU,WAAmB9jB,GAEtCroB,UAAY,MAEZA,gBAAkB,CAChBuX,YAAa,SACbjE,YAAa,OACbw4B,qBAAiBn6C,EACjB63C,aAAc,EACd/1B,YAAa,EACbtF,OAAQ,EACRuE,QAAS,EACTiD,WAAOhkB,EACPynB,UAAU,GAGZpZ,qBAAuB,CACrBoT,gBAAiB,mBAWnBjf,YAAYsE,GACViW,QAEAta,KAAKzG,aAAUgE,EACfyC,KAAKqe,mBAAgB9gB,EACrByC,KAAK8gB,gBAAavjB,EAClByC,KAAK+gB,cAAWxjB,EAChByC,KAAK0f,iBAAcniB,EACnByC,KAAK2f,iBAAcpiB,EACnByC,KAAKi2C,YAAc,EACnBj2C,KAAKy3C,YAAc,EAEfpzC,GACFxI,OAAOwL,OAAOrH,KAAMqE,EAExB,CAEAokB,QAAQuvB,EAAgBC,EAAgB5vB,GACtC,MAAMzK,EAAQ5d,KAAKypB,SAAS,CAAC,IAAK,KAAMpB,IAClC9G,MAACA,EAAKgI,SAAEA,IAAYG,OAAkB9L,EAAO,CAAClQ,EAAGsqC,EAAQ79C,EAAG89C,KAC5Dn3B,WAACA,WAAYC,cAAUrB,EAAWC,YAAEA,EAAWtB,cAAEA,GAAiBre,KAAKypB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCpB,GACG6vB,EAAUl4C,KAAKzG,QAAQ+kB,QAAU,EAEjC65B,GADiBtqC,OAAewQ,EAAe0C,EAAWD,IACxBX,MAAOqB,OAAcD,EAAOT,EAAYC,GAC1Eq3B,GAAeC,QAAW9uB,EAAU7J,EAAcw4B,EAASv4B,EAAcu4B,GAE/E,OAAQC,GAAiBC,CAC3B,CAEA9uB,eAAejB,GACb,MAAM3a,EAACA,EAACvT,EAAEA,EAAC2mB,WAAEA,WAAYC,cAAUrB,cAAaC,GAAe3f,KAAKypB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,eACCpB,IACGtO,OAACA,UAAQuE,GAAWte,KAAKzG,QACzB++C,GAAax3B,EAAaC,GAAY,EACtCw3B,GAAc74B,EAAcC,EAAcrB,EAAUvE,GAAU,EACpE,MAAO,CACLrM,EAAGA,EAAIzM,KAAKggB,IAAIq3B,GAAaC,EAC7Bp+C,EAAGA,EAAI8G,KAAKkgB,IAAIm3B,GAAaC,EAEjC,CAEArkB,gBAAgB7L,GACd,OAAOroB,KAAKspB,eAAejB,EAC7B,CAEAvmB,KAAKgK,GACH,MAAMvS,QAACA,EAAO8kB,cAAEA,GAAiBre,KAC3B+Z,GAAUxgB,EAAQwgB,QAAU,GAAK,EACjCuE,GAAW/kB,EAAQ+kB,SAAW,GAAK,EACnC0G,EAAWzrB,EAAQyrB,SAIzB,GAHAhlB,KAAKi2C,YAAuC,UAAxB18C,EAAQ4pB,YAA2B,IAAO,EAC9DnjB,KAAKy3C,YAAcp5B,EAAgB8B,IAAMlf,KAAK+D,MAAMqZ,EAAgB8B,KAAO,EAErD,IAAlB9B,GAAuBre,KAAK0f,YAAc,GAAK1f,KAAK2f,YAAc,EACpE,OAGF7T,EAAI22B,OAEJ,MAAM6V,GAAat4C,KAAK8gB,WAAa9gB,KAAK+gB,UAAY,EACtDjV,EAAI0sC,UAAUv3C,KAAKggB,IAAIq3B,GAAav+B,EAAQ9Y,KAAKkgB,IAAIm3B,GAAav+B,GAClE,MACM0+B,EAAe1+B,GADT,EAAI9Y,KAAKkgB,IAAIlgB,KAAKC,IAAI4gB,IAAIzD,GAAiB,KAGvDvS,EAAIiT,UAAYxlB,EAAQylB,gBACxBlT,EAAImT,YAAc1lB,EAAQ2lB,YApL9B,SACEpT,EACAuH,EACA0G,EACAuE,EACA0G,GAEA,MAAMyyB,YAACA,EAAW32B,WAAEA,gBAAYzC,GAAiBhL,EACjD,IAAI0N,EAAW1N,EAAQ0N,SACvB,GAAI02B,EAAa,CACfzB,GAAQlqC,EAAKuH,EAAS0G,EAAQuE,EAASyC,EAAUiE,GACjD,IAAK,IAAI9rB,EAAI,EAAGA,EAAIu+C,IAAev+C,EACjC4S,EAAIoB,OAEDuO,MAAM4C,KACT0C,EAAWD,GAAczC,EAAgB8B,KAAOA,KAEnD,CACD61B,GAAQlqC,EAAKuH,EAAS0G,EAAQuE,EAASyC,EAAUiE,GACjDlZ,EAAIoB,MAEN,CAiKIwrC,CAAQ5sC,EAAK9L,KAAMy4C,EAAcn6B,EAAS0G,GAC1Cwe,GAAW13B,EAAK9L,KAAMy4C,EAAcn6B,EAAS0G,GAE7ClZ,EAAI62B,SACN,ECvWF,SAASgW,GAAS7sC,EAAKvS,EAASulB,EAAQvlB,GACtCuS,EAAI8sC,SAAU/qC,OAAeiR,EAAM+5B,eAAgBt/C,EAAQs/C,gBAC3D/sC,EAAIm3B,aAAYp1B,OAAeiR,EAAM4hB,WAAYnnC,EAAQmnC,aACzD50B,EAAIo3B,gBAAiBr1B,OAAeiR,EAAM8hB,iBAAkBrnC,EAAQqnC,kBACpE90B,EAAI8rC,UAAW/pC,OAAeiR,EAAM44B,gBAAiBn+C,EAAQm+C,iBAC7D5rC,EAAIsT,WAAYvR,OAAeiR,EAAMO,YAAa9lB,EAAQ8lB,aAC1DvT,EAAImT,aAAcpR,OAAeiR,EAAMI,YAAa3lB,EAAQ2lB,YAC9D,CAEA,SAASmkB,GAAOv3B,EAAKgtC,EAAUx0C,GAC7BwH,EAAIu3B,OAAO/+B,EAAOoJ,EAAGpJ,EAAOnK,EAC9B,CAcA,SAAS4+C,GAASp7B,EAAQuG,EAAS2G,EAAS,IAC1C,MAAM3a,EAAQyN,EAAO3kB,QACdmI,MAAO63C,EAAc,EAAG1wC,IAAK2wC,EAAY/oC,EAAQ,GAAK2a,GACtD1pB,MAAO+3C,EAAc5wC,IAAK6wC,GAAcj1B,EACzC/iB,EAAQF,KAAKgC,IAAI+1C,EAAaE,GAC9B5wC,EAAMrH,KAAKC,IAAI+3C,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACLjpC,QACA/O,QACAgE,KAAM+e,EAAQ/e,KACdwD,KAAML,EAAMnH,IAAUi4C,EAAUlpC,EAAQ5H,EAAMnH,EAAQmH,EAAMnH,EAEhE,CAiBA,SAASk4C,GAAYvtC,EAAK6X,EAAMO,EAAS2G,GACvC,MAAMlN,OAACA,UAAQpkB,GAAWoqB,GACpBzT,MAACA,QAAO/O,OAAOgE,OAAMwD,GAAQowC,GAASp7B,EAAQuG,EAAS2G,GACvDyuB,EA9CR,SAAuB//C,GACrB,OAAIA,EAAQggD,QACHC,KAGLjgD,EAAQkgD,SAA8C,aAAnClgD,EAAQmgD,uBACtBC,KAGFtW,EACT,CAoCqBuW,CAAcrgD,GAEjC,IACIL,EAAG0kB,EAAOvN,GADV8F,KAACA,GAAO,EAAI9N,QAAEA,GAAWwiB,GAAU,GAGvC,IAAK3xB,EAAI,EAAGA,GAAKyP,IAAQzP,EACvB0kB,EAAQD,GAAQxc,GAASkH,EAAUM,EAAOzP,EAAIA,IAAMgX,GAEhD0N,EAAMG,OAGC5H,GACTrK,EAAIs3B,OAAOxlB,EAAMlQ,EAAGkQ,EAAMzjB,GAC1Bgc,GAAO,GAEPmjC,EAAWxtC,EAAKuE,EAAMuN,EAAOvV,EAAS9O,EAAQggD,SAGhDlpC,EAAOuN,GAQT,OALIzY,IACFyY,EAAQD,GAAQxc,GAASkH,EAAUM,EAAO,IAAMuH,GAChDopC,EAAWxtC,EAAKuE,EAAMuN,EAAOvV,EAAS9O,EAAQggD,YAGvCp0C,CACX,CAiBA,SAAS00C,GAAgB/tC,EAAK6X,EAAMO,EAAS2G,GAC3C,MAAMlN,EAASgG,EAAKhG,QACdzN,MAACA,EAAK/O,MAAEA,EAAKwH,KAAEA,GAAQowC,GAASp7B,EAAQuG,EAAS2G,IACjD1U,KAACA,GAAO,EAAI9N,QAAEA,GAAWwiB,GAAU,GACzC,IAEI3xB,EAAG0kB,EAAOk8B,EAAO/3B,EAAMJ,EAAMo4B,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAActxC,IAAWzH,GAASkH,EAAUM,EAAOC,EAAQA,IAAUsH,EACrEiqC,EAAQ,KACRp4B,IAASJ,IAEX7V,EAAIu3B,OAAO2W,EAAMr4B,GACjB7V,EAAIu3B,OAAO2W,EAAMj4B,GAGjBjW,EAAIu3B,OAAO2W,EAAMD,GAClB,EAQH,IALI5jC,IACFyH,EAAQD,EAAOu8B,EAAW,IAC1BpuC,EAAIs3B,OAAOxlB,EAAMlQ,EAAGkQ,EAAMzjB,IAGvBjB,EAAI,EAAGA,GAAKyP,IAAQzP,EAAG,CAG1B,GAFA0kB,EAAQD,EAAOu8B,EAAWhhD,IAEtB0kB,EAAMG,KAER,SAGF,MAAMrQ,EAAIkQ,EAAMlQ,EACVvT,EAAIyjB,EAAMzjB,EACVigD,EAAa,EAAJ1sC,EAEX0sC,IAAWN,GAET3/C,EAAI4nB,EACNA,EAAO5nB,EACEA,EAAIwnB,IACbA,EAAOxnB,GAGT6/C,GAAQC,EAASD,EAAOtsC,KAAOusC,IAE/BE,IAGAruC,EAAIu3B,OAAO31B,EAAGvT,GAEd2/C,EAAQM,EACRH,EAAS,EACTl4B,EAAOJ,EAAOxnB,GAGhB4/C,EAAQ5/C,CACV,CACAggD,GACF,CAOA,SAASE,GAAkB12B,GACzB,MAAMvb,EAAOub,EAAKpqB,QACZmnC,EAAat4B,EAAKs4B,YAAct4B,EAAKs4B,WAAW1nC,OAEtD,QADqB2qB,EAAKM,YAAeN,EAAKze,OAAUkD,EAAKqxC,SAA2C,aAAhCrxC,EAAKsxC,wBAA0CtxC,EAAKmxC,SAAY7Y,GACnHmZ,GAAkBR,EACzC,CA2CA,MAAMiB,GAA8B,mBAAXC,OAEzB,SAASz4C,GAAKgK,EAAK6X,EAAMxiB,EAAO+O,GAC1BoqC,KAAc32B,EAAKpqB,QAAQ2qB,QA7BjC,SAA6BpY,EAAK6X,EAAMxiB,EAAO+O,GAC7C,IAAIsqC,EAAO72B,EAAK82B,MACXD,IACHA,EAAO72B,EAAK82B,MAAQ,IAAIF,OACpB52B,EAAK62B,KAAKA,EAAMr5C,EAAO+O,IACzBsqC,EAAKhD,aAGTmB,GAAS7sC,EAAK6X,EAAKpqB,SACnBuS,EAAIw3B,OAAOkX,EACb,CAoBIE,CAAoB5uC,EAAK6X,EAAMxiB,EAAO+O,GAlB1C,SAA0BpE,EAAK6X,EAAMxiB,EAAO+O,GAC1C,MAAMyqC,SAACA,UAAUphD,GAAWoqB,EACtBi3B,EAAgBP,GAAkB12B,GAExC,IAAK,MAAMO,KAAWy2B,EACpBhC,GAAS7sC,EAAKvS,EAAS2qB,EAAQpF,OAC/BhT,EAAIq3B,YACAyX,EAAc9uC,EAAK6X,EAAMO,EAAS,CAAC/iB,QAAOmH,IAAKnH,EAAQ+O,EAAQ,KACjEpE,EAAI0rC,YAEN1rC,EAAIw3B,QAER,CAQIuX,CAAiB/uC,EAAK6X,EAAMxiB,EAAO+O,EAEvC,CAEe,MAAM4qC,WAAoB7mB,GAEvCroB,UAAY,OAKZA,gBAAkB,CAChBitC,eAAgB,OAChBnY,WAAY,GACZE,iBAAkB,EAClB8W,gBAAiB,QACjBr4B,YAAa,EACb07B,iBAAiB,EACjBrB,uBAAwB,UACxBxsC,MAAM,EACNwW,UAAU,EACV61B,SAAS,EACTE,QAAS,GAMX7tC,qBAAuB,CACrBoT,gBAAiB,kBACjBE,YAAa,eAIftT,mBAAqB,CACnB2S,aAAa,EACbC,WAAa5C,GAAkB,eAATA,GAAkC,SAATA,GAIjD7b,YAAYsE,GACViW,QAEAta,KAAKmkB,UAAW,EAChBnkB,KAAKzG,aAAUgE,EACfyC,KAAK1I,YAASiG,EACdyC,KAAKkF,WAAQ3H,EACbyC,KAAKkmB,eAAY3oB,EACjByC,KAAKy6C,WAAQl9C,EACbyC,KAAKg7C,aAAUz9C,EACfyC,KAAKi7C,eAAY19C,EACjByC,KAAKikB,YAAa,EAClBjkB,KAAKk7C,gBAAiB,EACtBl7C,KAAKgkB,mBAAgBzmB,EAEjB8G,GACFxI,OAAOwL,OAAOrH,KAAMqE,EAExB,CAEAwgB,oBAAoB1R,EAAWlF,GAC7B,MAAM1U,EAAUyG,KAAKzG,QACrB,IAAKA,EAAQkgD,SAA8C,aAAnClgD,EAAQmgD,0BAA2CngD,EAAQggD,UAAYv5C,KAAKk7C,eAAgB,CAClH,MAAM/1C,EAAO5L,EAAQmqB,SAAW1jB,KAAKkF,MAAQlF,KAAKkmB,WAClDi1B,QAA2Bn7C,KAAKg7C,QAASzhD,EAAS4Z,EAAWhO,EAAM8I,GACnEjO,KAAKk7C,gBAAiB,CACvB,CACH,CAEIv9B,WAAOA,GACT3d,KAAKg7C,QAAUr9B,SACR3d,KAAKi7C,iBACLj7C,KAAKy6C,MACZz6C,KAAKk7C,gBAAiB,CACxB,CAEIv9B,aACF,OAAO3d,KAAKg7C,OACd,CAEIL,eACF,OAAO36C,KAAKi7C,YAAcj7C,KAAKi7C,WAAYG,QAAiBp7C,KAAMA,KAAKzG,QAAQ2qB,SACjF,CAMAqR,QACE,MAAMolB,EAAW36C,KAAK26C,SAChBh9B,EAAS3d,KAAK2d,OACpB,OAAOg9B,EAAS3hD,QAAU2kB,EAAOg9B,EAAS,GAAGx5C,MAC/C,CAMAma,OACE,MAAMq/B,EAAW36C,KAAK26C,SAChBh9B,EAAS3d,KAAK2d,OACdzN,EAAQyqC,EAAS3hD,OACvB,OAAOkX,GAASyN,EAAOg9B,EAASzqC,EAAQ,GAAG5H,IAC7C,CASA+yC,YAAYz9B,EAAO4nB,GACjB,MAAMjsC,EAAUyG,KAAKzG,QACf+C,EAAQshB,EAAM4nB,GACd7nB,EAAS3d,KAAK2d,OACdg9B,GAAWW,QAAet7C,KAAM,CAACwlC,WAAUrkC,MAAO7E,EAAOgM,IAAKhM,IAEpE,IAAKq+C,EAAS3hD,OACZ,OAGF,MAAMo8B,EAAS,GACTmmB,EAvKV,SAAiChiD,GAC/B,OAAIA,EAAQggD,QACHiC,KAGLjiD,EAAQkgD,SAA8C,aAAnClgD,EAAQmgD,uBACtB+B,KAGFC,IACT,CA6JyBC,CAAwBpiD,GAC7C,IAAIL,EAAGyP,EACP,IAAKzP,EAAI,EAAGyP,EAAOgyC,EAAS3hD,OAAQE,EAAIyP,IAAQzP,EAAG,CACjD,MAAMiI,MAACA,MAAOmH,GAAOqyC,EAASzhD,GACxB6pC,EAAKplB,EAAOxc,GACZ6hC,EAAKrlB,EAAOrV,GAClB,GAAIy6B,IAAOC,EAAI,CACb5N,EAAOn8B,KAAK8pC,GACZ,QACD,CACD,MACM6Y,EAAeL,EAAaxY,EAAIC,EAD5B/hC,KAAK2W,KAAKtb,EAAQymC,EAAGyC,KAAcxC,EAAGwC,GAAYzC,EAAGyC,KAClBjsC,EAAQggD,SACrDqC,EAAapW,GAAY5nB,EAAM4nB,GAC/BpQ,EAAOn8B,KAAK2iD,EACd,CACA,OAAyB,IAAlBxmB,EAAOp8B,OAAeo8B,EAAO,GAAKA,CAC3C,CAgBAikB,YAAYvtC,EAAKoY,EAAS2G,GAExB,OADsBwvB,GAAkBr6C,KACjC46C,CAAc9uC,EAAK9L,KAAMkkB,EAAS2G,EAC3C,CASA2vB,KAAK1uC,EAAK3K,EAAO+O,GACf,MAAMyqC,EAAW36C,KAAK26C,SAChBC,EAAgBP,GAAkBr6C,MACxC,IAAImF,EAAOnF,KAAKkF,MAEhB/D,EAAQA,GAAS,EACjB+O,EAAQA,GAAUlQ,KAAK2d,OAAO3kB,OAASmI,EAEvC,IAAK,MAAM+iB,KAAWy2B,EACpBx1C,GAAQy1C,EAAc9uC,EAAK9L,KAAMkkB,EAAS,CAAC/iB,QAAOmH,IAAKnH,EAAQ+O,EAAQ,IAEzE,QAAS/K,CACX,CASArD,KAAKgK,EAAKqH,EAAWhS,EAAO+O,GAC1B,MAAM3W,EAAUyG,KAAKzG,SAAW,IACjByG,KAAK2d,QAAU,IAEnB3kB,QAAUO,EAAQ8lB,cAC3BvT,EAAI22B,OAEJ3gC,GAAKgK,EAAK9L,KAAMmB,EAAO+O,GAEvBpE,EAAI62B,WAGF3iC,KAAKmkB,WAEPnkB,KAAKk7C,gBAAiB,EACtBl7C,KAAKy6C,WAAQl9C,EAEjB,EC9aF,SAASkrB,GAAQb,EAAkB0C,EAAa7f,EAAiB4d,GAC/D,MAAM9uB,EAAUquB,EAAGruB,SACZkR,CAACA,GAAOnO,GAASsrB,EAAG6B,SAAS,CAAChf,GAAO4d,GAE5C,OAAQpnB,KAAK2W,IAAI0S,EAAMhuB,GAAS/C,EAAQmkB,OAASnkB,EAAQsiD,SAC3D,CAIe,MAAMC,WAAqB7nB,GAExCroB,UAAY,QASZA,gBAAkB,CAChByT,YAAa,EACbw8B,UAAW,EACXz4B,iBAAkB,EAClB24B,YAAa,EACbl9B,WAAY,SACZnB,OAAQ,EACRU,SAAU,GAMZxS,qBAAuB,CACrBoT,gBAAiB,kBACjBE,YAAa,eAGfnf,YAAYsE,GACViW,QAEAta,KAAKzG,aAAUgE,EACfyC,KAAKoK,YAAS7M,EACdyC,KAAK+d,UAAOxgB,EACZyC,KAAKmD,UAAO5F,EAER8G,GACFxI,OAAOwL,OAAOrH,KAAMqE,EAExB,CAEAokB,QAAQuzB,EAAgBC,EAAgB5zB,GACtC,MAAM9uB,EAAUyG,KAAKzG,SACfmU,EAACA,IAAGvT,GAAK6F,KAAKypB,SAAS,CAAC,IAAK,KAAMpB,GACzC,OAASpnB,KAAKkoB,IAAI6yB,EAAStuC,EAAG,GAAKzM,KAAKkoB,IAAI8yB,EAAS9hD,EAAG,GAAM8G,KAAKkoB,IAAI5vB,EAAQsiD,UAAYtiD,EAAQmkB,OAAQ,EAC7G,CAEAw+B,SAASF,EAAgB3zB,GACvB,OAAOI,GAAQzoB,KAAMg8C,EAAQ,IAAK3zB,EACpC,CAEA8zB,SAASF,EAAgB5zB,GACvB,OAAOI,GAAQzoB,KAAMi8C,EAAQ,IAAK5zB,EACpC,CAEAiB,eAAejB,GACb,MAAM3a,EAACA,IAAGvT,GAAK6F,KAAKypB,SAAS,CAAC,IAAK,KAAMpB,GACzC,MAAO,CAAC3a,IAAGvT,IACb,CAEA6N,KAAKzO,GAEH,IAAImkB,GADJnkB,EAAUA,GAAWyG,KAAKzG,SAAW,IAChBmkB,QAAU,EAC/BA,EAASzc,KAAKgC,IAAIya,EAAQA,GAAUnkB,EAAQwiD,aAAe,GAE3D,OAAgC,GAAxBr+B,GADYA,GAAUnkB,EAAQ8lB,aAAe,GAEvD,CAEAvd,KAAKgK,EAA+BoH,GAClC,MAAM3Z,EAAUyG,KAAKzG,QAEjByG,KAAK+d,MAAQxkB,EAAQmkB,OAAS,MAAQ8K,OAAexoB,KAAMkT,EAAMlT,KAAKgI,KAAKzO,GAAW,KAI1FuS,EAAImT,YAAc1lB,EAAQ2lB,YAC1BpT,EAAIsT,UAAY7lB,EAAQ8lB,YACxBvT,EAAIiT,UAAYxlB,EAAQylB,iBACxBo9B,QAAUtwC,EAAKvS,EAASyG,KAAK0N,EAAG1N,KAAK7F,GACvC,CAEA0tB,WACE,MAAMtuB,EAAUyG,KAAKzG,SAAW,GAEhC,OAAOA,EAAQmkB,OAASnkB,EAAQsiD,SAClC,EC3FF,SAASQ,GAAaC,EAAKj0B,GACzB,MAAM3a,EAACA,EAACvT,EAAEA,EAAC2e,KAAEA,QAAMsC,SAAOD,GAAmCmhC,EAAI7yB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWpB,GAEjH,IAAIzV,EAAMF,EAAOD,EAAKE,EAAQ4pC,EAgB9B,OAdID,EAAIzjC,YACN0jC,EAAOphC,EAAS,EAChBvI,EAAO3R,KAAKC,IAAIwM,EAAGoL,GACnBpG,EAAQzR,KAAKgC,IAAIyK,EAAGoL,GACpBrG,EAAMtY,EAAIoiD,EACV5pC,EAASxY,EAAIoiD,IAEbA,EAAOnhC,EAAQ,EACfxI,EAAOlF,EAAI6uC,EACX7pC,EAAQhF,EAAI6uC,EACZ9pC,EAAMxR,KAAKC,IAAI/G,EAAG2e,GAClBnG,EAAS1R,KAAKgC,IAAI9I,EAAG2e,IAGhB,CAAClG,OAAMH,MAAKC,QAAOC,SAC5B,CAEA,SAAS6pC,GAAYz+B,EAAMzhB,EAAO4E,EAAK+B,GACrC,OAAO8a,EAAO,GAAIue,OAAYhgC,EAAO4E,EAAK+B,EAC5C,CAkCA,SAASw5C,GAAcH,GACrB,MAAMI,EAASL,GAAaC,GACtBlhC,EAAQshC,EAAOhqC,MAAQgqC,EAAO9pC,KAC9BuI,EAASuhC,EAAO/pC,OAAS+pC,EAAOjqC,IAChCiS,EApCR,SAA0B43B,EAAKK,EAAMC,GACnC,MAAMtgD,EAAQggD,EAAI/iD,QAAQ8lB,YACpBtB,EAAOu+B,EAAI1jC,cACXu8B,GAAI0H,QAAOvgD,GAEjB,MAAO,CACLkW,EAAGgqC,GAAYz+B,EAAKtL,IAAK0iC,EAAE1iC,IAAK,EAAGmqC,GACnCj/C,EAAG6+C,GAAYz+B,EAAKrL,MAAOyiC,EAAEziC,MAAO,EAAGiqC,GACvC/9C,EAAG49C,GAAYz+B,EAAKpL,OAAQwiC,EAAExiC,OAAQ,EAAGiqC,GACzC59C,EAAGw9C,GAAYz+B,EAAKnL,KAAMuiC,EAAEviC,KAAM,EAAG+pC,GAEzC,CAyBiBG,CAAiBR,EAAKlhC,EAAQ,EAAGD,EAAS,GACnDuC,EAxBR,SAA2B4+B,EAAKK,EAAMC,GACpC,MAAM5jC,mBAACA,GAAsBsjC,EAAI7yB,SAAS,CAAC,uBACrCntB,EAAQggD,EAAI/iD,QAAQ67C,aACpBD,GAAI4H,QAAczgD,GAClB0gD,EAAO/7C,KAAKC,IAAIy7C,EAAMC,GACtB7+B,EAAOu+B,EAAI1jC,cAIXqkC,EAAejkC,IAAsBzS,OAASjK,GAEpD,MAAO,CACL4gD,QAASV,IAAaS,GAAgBl/B,EAAKtL,KAAOsL,EAAKnL,KAAMuiC,EAAE+H,QAAS,EAAGF,GAC3EG,SAAUX,IAAaS,GAAgBl/B,EAAKtL,KAAOsL,EAAKrL,MAAOyiC,EAAEgI,SAAU,EAAGH,GAC9EI,WAAYZ,IAAaS,GAAgBl/B,EAAKpL,QAAUoL,EAAKnL,KAAMuiC,EAAEiI,WAAY,EAAGJ,GACpFK,YAAab,IAAaS,GAAgBl/B,EAAKpL,QAAUoL,EAAKrL,MAAOyiC,EAAEkI,YAAa,EAAGL,GAE3F,CAOiB/H,CAAkBqH,EAAKlhC,EAAQ,EAAGD,EAAS,GAE1D,MAAO,CACLmiC,MAAO,CACL5vC,EAAGgvC,EAAO9pC,KACVzY,EAAGuiD,EAAOjqC,IACV4Z,EAAGjR,EACHmR,EAAGpR,EACHuC,UAEFi6B,MAAO,CACLjqC,EAAGgvC,EAAO9pC,KAAO8R,EAAO1lB,EACxB7E,EAAGuiD,EAAOjqC,IAAMiS,EAAOlS,EACvB6Z,EAAGjR,EAAQsJ,EAAO1lB,EAAI0lB,EAAO/mB,EAC7B4uB,EAAGpR,EAASuJ,EAAOlS,EAAIkS,EAAO9lB,EAC9B8e,OAAQ,CACNw/B,QAASj8C,KAAKgC,IAAI,EAAGya,EAAOw/B,QAAUj8C,KAAKgC,IAAIyhB,EAAOlS,EAAGkS,EAAO1lB,IAChEm+C,SAAUl8C,KAAKgC,IAAI,EAAGya,EAAOy/B,SAAWl8C,KAAKgC,IAAIyhB,EAAOlS,EAAGkS,EAAO/mB,IAClEy/C,WAAYn8C,KAAKgC,IAAI,EAAGya,EAAO0/B,WAAan8C,KAAKgC,IAAIyhB,EAAO9lB,EAAG8lB,EAAO1lB,IACtEq+C,YAAap8C,KAAKgC,IAAI,EAAGya,EAAO2/B,YAAcp8C,KAAKgC,IAAIyhB,EAAO9lB,EAAG8lB,EAAO/mB,MAIhF,CAEA,SAAS8qB,GAAQ6zB,EAAK5uC,EAAGvT,EAAGkuB,GAC1B,MAAMk1B,EAAc,OAAN7vC,EACR8vC,EAAc,OAANrjD,EAERuiD,EAASJ,KADEiB,GAASC,IACSnB,GAAaC,EAAKj0B,GAErD,OAAOq0B,IACHa,IAASlF,QAAW3qC,EAAGgvC,EAAO9pC,KAAM8pC,EAAOhqC,UAC3C8qC,IAASnF,QAAWl+C,EAAGuiD,EAAOjqC,IAAKiqC,EAAO/pC,QAChD,CAWA,SAAS8qC,GAAkB3xC,EAAK4xC,GAC9B5xC,EAAI4xC,KAAKA,EAAKhwC,EAAGgwC,EAAKvjD,EAAGujD,EAAKrxB,EAAGqxB,EAAKnxB,EACxC,CAEA,SAASoxB,GAAYD,EAAME,EAAQC,EAAU,IAC3C,MAAMnwC,EAAIgwC,EAAKhwC,IAAMmwC,EAAQnwC,GAAKkwC,EAAS,EACrCzjD,EAAIujD,EAAKvjD,IAAM0jD,EAAQ1jD,GAAKyjD,EAAS,EACrCvxB,GAAKqxB,EAAKhwC,EAAIgwC,EAAKrxB,IAAMwxB,EAAQnwC,EAAImwC,EAAQxxB,EAAIuxB,EAAS,GAAKlwC,EAC/D6e,GAAKmxB,EAAKvjD,EAAIujD,EAAKnxB,IAAMsxB,EAAQ1jD,EAAI0jD,EAAQtxB,EAAIqxB,EAAS,GAAKzjD,EACrE,MAAO,CACLuT,EAAGgwC,EAAKhwC,EAAIA,EACZvT,EAAGujD,EAAKvjD,EAAIA,EACZkyB,EAAGqxB,EAAKrxB,EAAIA,EACZE,EAAGmxB,EAAKnxB,EAAIA,EACZ7O,OAAQggC,EAAKhgC,OAEjB,CAEe,MAAMogC,WAAmB7pB,GAEtCroB,UAAY,MAKZA,gBAAkB,CAChBgN,cAAe,QACfyG,YAAa,EACb+1B,aAAc,EACd57B,cAAe,OACfqF,gBAAYthB,GAMdqO,qBAAuB,CACrBoT,gBAAiB,kBACjBE,YAAa,eAGfnf,YAAYsE,GACViW,QAEAta,KAAKzG,aAAUgE,EACfyC,KAAK6Y,gBAAatb,EAClByC,KAAK8Y,UAAOvb,EACZyC,KAAKob,WAAQ7d,EACbyC,KAAKmb,YAAS5d,EACdyC,KAAKwZ,mBAAgBjc,EAEjB8G,GACFxI,OAAOwL,OAAOrH,KAAMqE,EAExB,CAEAvC,KAAKgK,GACH,MAAM0N,cAACA,EAAejgB,SAAS2lB,YAACA,kBAAaF,IAAoBhf,MAC3D23C,MAACA,EAAK2F,MAAEA,GAASb,GAAcz8C,MAC/B+9C,GApESrgC,EAoEe4/B,EAAM5/B,QAnExBw/B,SAAWx/B,EAAOy/B,UAAYz/B,EAAO0/B,YAAc1/B,EAAO2/B,YAmExBW,KAAqBP,GApEvE,IAAmB//B,EAsEf5R,EAAI22B,OAEA6a,EAAMjxB,IAAMsrB,EAAMtrB,GAAKixB,EAAM/wB,IAAMorB,EAAMprB,IAC3CzgB,EAAIq3B,YACJ4a,EAAYjyC,EAAK6xC,GAAYL,EAAO9jC,EAAem+B,IACnD7rC,EAAIiH,OACJgrC,EAAYjyC,EAAK6xC,GAAYhG,GAAQn+B,EAAe8jC,IACpDxxC,EAAIiT,UAAYG,EAChBpT,EAAIoB,KAAK,YAGXpB,EAAIq3B,YACJ4a,EAAYjyC,EAAK6xC,GAAYhG,EAAOn+B,IACpC1N,EAAIiT,UAAYC,EAChBlT,EAAIoB,OAEJpB,EAAI62B,SACN,CAEAla,QAAQuzB,EAAQC,EAAQ5zB,GACtB,OAAOI,GAAQzoB,KAAMg8C,EAAQC,EAAQ5zB,EACvC,CAEA6zB,SAASF,EAAQ3zB,GACf,OAAOI,GAAQzoB,KAAMg8C,EAAQ,KAAM3zB,EACrC,CAEA8zB,SAASF,EAAQ5zB,GACf,OAAOI,GAAQzoB,KAAM,KAAMi8C,EAAQ5zB,EACrC,CAEAiB,eAAejB,GACb,MAAM3a,EAACA,IAAGvT,OAAG2e,EAAID,WAAEA,GAAuC7Y,KAAKypB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAepB,GAC1G,MAAO,CACL3a,EAAGmL,GAAcnL,EAAIoL,GAAQ,EAAIpL,EACjCvT,EAAG0e,EAAa1e,GAAKA,EAAI2e,GAAQ,EAErC,CAEA+O,SAASpd,GACP,MAAgB,MAATA,EAAezK,KAAKob,MAAQ,EAAIpb,KAAKmb,OAAS,CACvD,E,kGCnNF,MAAM8iC,GAAgB,CACpB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAIIC,GAAoCD,GAAcvgD,KAAIkG,GAASA,EAAMu6C,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YAEjH,SAASC,GAAellD,GACtB,OAAO+kD,GAAc/kD,EAAI+kD,GAAcjlD,OACzC,CAEA,SAASqlD,GAAmBnlD,GAC1B,OAAOglD,GAAkBhlD,EAAIglD,GAAkBllD,OACjD,CAqBA,SAASslD,GAAarkD,GACpB,IAAIf,EAAI,EAER,MAAO,CAACqU,EAAuBrE,KAC7B,MAAMiB,EAAalQ,EAAMyU,eAAexF,GAAciB,WAElDA,aAAsB6T,EACxB9kB,EAnBN,SAAiCqU,EAAuBrU,GAGtD,OAFAqU,EAAQyR,gBAAkBzR,EAAQhV,KAAKmF,KAAI,IAAM0gD,GAAellD,OAEzDA,CACT,CAeUqlD,CAAwBhxC,EAASrU,GAC5BiR,aAAsB2a,EAC/B5rB,EAfN,SAAkCqU,EAAuBrU,GAGvD,OAFAqU,EAAQyR,gBAAkBzR,EAAQhV,KAAKmF,KAAI,IAAM2gD,GAAmBnlD,OAE7DA,CACT,CAWUslD,CAAyBjxC,EAASrU,GAC7BiR,IACTjR,EA9BN,SAAgCqU,EAAuBrU,GAIrD,OAHAqU,EAAQ2R,YAAck/B,GAAellD,GACrCqU,EAAQyR,gBAAkBq/B,GAAmBnlD,KAEpCA,CACX,CAyBUulD,CAAuBlxC,EAASrU,IAG1C,CAEA,SAASwlD,GACPvY,GAEA,IAAIwY,EAEJ,IAAKA,KAAKxY,EACR,GAAIA,EAAYwY,GAAGz/B,aAAeinB,EAAYwY,GAAG3/B,gBAC/C,OAAO,EAIX,OAAO,CACT,CAQA,IAAA4/B,GAAe,CACb/zC,GAAI,SAEJpE,SAAU,CACR0uB,SAAS,EACT0pB,eAAe,GAGjBpwB,aAAax0B,EAAc6kD,EAAOvlD,GAChC,IAAKA,EAAQ47B,QACX,OAGF,MACE58B,MAAMG,SAACA,GACPa,QAASwlD,GACP9kD,EAAMmM,QACJ6M,SAACA,GAAY8rC,EAEnB,IAAKxlD,EAAQslD,gBAAkBH,GAA0BhmD,KAxB3D4vC,EAwBiGyW,KAtB3EzW,EAAWppB,aAAeopB,EAAWtpB,kBAsBwD/L,GAAYyrC,GAA0BzrC,IACrJ,OA1BN,IACEq1B,EA4BE,MAAM0W,EAAYV,GAAarkD,GAE/BvB,EAASmI,QAAQm+C,EACnB,GCwCF,SAASC,GAAsB1xC,GAC7B,GAAIA,EAAQ0W,WAAY,CACtB,MAAM1rB,EAAOgV,EAAQpB,aACdoB,EAAQ0W,kBACR1W,EAAQpB,MACftQ,OAAOqjD,eAAe3xC,EAAS,OAAQ,CACrC4xC,cAAc,EACdC,YAAY,EACZC,UAAU,EACV/iD,MAAO/D,GAEV,CACH,CAEA,SAAS+mD,GAAmBrlD,GAC1BA,EAAM1B,KAAKG,SAASmI,SAAS0M,IAC3B0xC,GAAsB1xC,KAE1B,CAuBA,IAAAgyC,GAAe,CACb10C,GAAI,aAEJpE,SAAU,CACR+4C,UAAW,UACXrqB,SAAS,GAGXsqB,qBAAsB,CAACxlD,EAAOwc,EAAMld,KAClC,IAAKA,EAAQ47B,QAGX,YADAmqB,GAAmBrlD,GAKrB,MAAMuxB,EAAiBvxB,EAAMmhB,MAE7BnhB,EAAM1B,KAAKG,SAASmI,SAAQ,CAAC0M,EAASrE,KACpC,MAAMiD,MAACA,YAAO8B,GAAaV,EACrBhE,EAAOtP,EAAMyU,eAAexF,GAC5B3Q,EAAO4T,GAASoB,EAAQhV,KAE9B,GAAsD,OAAlDkM,OAAQ,CAACwJ,EAAWhU,EAAMV,QAAQ0U,YAEpC,OAGF,IAAK1E,EAAKY,WAAWsC,mBAEnB,OAGF,MAAMizC,EAAQzlD,EAAMT,OAAO+P,EAAKqE,SAChC,GAAmB,WAAf8xC,EAAMrmD,MAAoC,SAAfqmD,EAAMrmD,KAEnC,OAGF,GAAIY,EAAMV,QAAQ0W,QAEhB,OAGF,IAAI9O,MAACA,EAAK+O,MAAEA,GAjElB,SAAmD3G,EAAMoU,GACvD,MAAMgiC,EAAahiC,EAAO3kB,OAE1B,IACIkX,EADA/O,EAAQ,EAGZ,MAAMoJ,OAACA,GAAUhB,GACXrI,IAACA,EAAG+B,IAAEA,EAAG8O,WAAEA,EAAUC,WAAEA,GAAczH,EAAO0H,gBAWlD,OATIF,IACF5Q,GAAQm7B,QAAY3U,OAAahK,EAAQpT,EAAOE,KAAMvJ,GAAK4mB,GAAI,EAAG63B,EAAa,IAG/EzvC,EADE8B,GACMsqB,QAAY3U,OAAahK,EAAQpT,EAAOE,KAAMxH,GAAK8kB,GAAK,EAAG5mB,EAAOw+C,GAAcx+C,EAEhFw+C,EAAax+C,EAGhB,CAACA,QAAO+O,QACjB,CA8C2B0vC,CAA0Cr2C,EAAMhR,GAErE,GAAI2X,IADc3W,EAAQsmD,WAAa,EAAIr0B,GAIzC,YADAyzB,GAAsB1xC,GAuBxB,IAAIuyC,EACJ,QApBIjlC,OAAc1O,KAIhBoB,EAAQpB,MAAQ5T,SACTgV,EAAQhV,KACfsD,OAAOqjD,eAAe3xC,EAAS,OAAQ,CACrC4xC,cAAc,EACdC,YAAY,EACZ/8C,IAAK,WACH,OAAOrC,KAAKikB,UACd,EACAzhB,IAAK,SAASu9C,GACZ//C,KAAKmM,MAAQ4zC,CACf,KAMIxmD,EAAQimD,WAChB,IAAK,OACHM,EA5QR,SAAwBvnD,EAAM4I,EAAO+O,EAAOsb,EAAgBjyB,GAS1D,MAAMymD,EAAUzmD,EAAQymD,SAAWx0B,EAEnC,GAAIw0B,GAAW9vC,EACb,OAAO3X,EAAKk4C,MAAMtvC,EAAOA,EAAQ+O,GAGnC,MAAM4vC,EAAY,GAEZG,GAAe/vC,EAAQ,IAAM8vC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWh/C,EAAQ+O,EAAQ,EAEjC,IACIhX,EAAGknD,EAAcC,EAASntC,EAAMotC,EADhC3hD,EAAIwC,EAKR,IAFA2+C,EAAUI,KAAkB3nD,EAAKoG,GAE5BzF,EAAI,EAAGA,EAAI8mD,EAAU,EAAG9mD,IAAK,CAChC,IAEIivB,EAFA6xB,EAAO,EACPuG,EAAO,EAIX,MAAMC,EAAgBv/C,KAAK+D,OAAO9L,EAAI,GAAK+mD,GAAe,EAAI9+C,EACxDs/C,EAAcx/C,KAAKC,IAAID,KAAK+D,OAAO9L,EAAI,GAAK+mD,GAAe,EAAG/vC,GAAS/O,EACvEu/C,EAAiBD,EAAcD,EAErC,IAAKr4B,EAAIq4B,EAAer4B,EAAIs4B,EAAat4B,IACvC6xB,GAAQzhD,EAAK4vB,GAAGza,EAChB6yC,GAAQhoD,EAAK4vB,GAAGhuB,EAGlB6/C,GAAQ0G,EACRH,GAAQG,EAGR,MAAMC,EAAY1/C,KAAK+D,MAAM9L,EAAI+mD,GAAe,EAAI9+C,EAC9Cy/C,EAAU3/C,KAAKC,IAAID,KAAK+D,OAAO9L,EAAI,GAAK+mD,GAAe,EAAG/vC,GAAS/O,GAClEuM,EAAGmzC,EAAS1mD,EAAG2mD,GAAWvoD,EAAKoG,GAStC,IAFA0hD,EAAUntC,GAAO,EAEZiV,EAAIw4B,EAAWx4B,EAAIy4B,EAASz4B,IAC/BjV,EAAO,GAAMjS,KAAK2W,KACfipC,EAAU7G,IAASzhD,EAAK4vB,GAAGhuB,EAAI2mD,IAC/BD,EAAUtoD,EAAK4vB,GAAGza,IAAM6yC,EAAOO,IAG9B5tC,EAAOmtC,IACTA,EAAUntC,EACVktC,EAAe7nD,EAAK4vB,GACpBm4B,EAAQn4B,GAIZ23B,EAAUI,KAAkBE,EAC5BzhD,EAAI2hD,CACN,CAKA,OAFAR,EAAUI,KAAkB3nD,EAAK4nD,GAE1BL,CACT,CA+LoBiB,CAAexoD,EAAM4I,EAAO+O,EAAOsb,EAAgBjyB,GAC/D,MACF,IAAK,UACHumD,EAhMR,SAA0BvnD,EAAM4I,EAAO+O,EAAOsb,GAC5C,IAEItyB,EAAG0kB,EAAOlQ,EAAGvT,EAAG2/C,EAAOkH,EAAUC,EAAUC,EAAYn/B,EAAMJ,EAF7Dq4B,EAAO,EACPC,EAAS,EAEb,MAAM6F,EAAY,GACZK,EAAWh/C,EAAQ+O,EAAQ,EAE3BixC,EAAO5oD,EAAK4I,GAAOuM,EAEnB0zC,EADO7oD,EAAK4nD,GAAUzyC,EACVyzC,EAElB,IAAKjoD,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,IAAShX,EAAG,CACtC0kB,EAAQrlB,EAAKW,GACbwU,GAAKkQ,EAAMlQ,EAAIyzC,GAAQC,EAAK51B,EAC5BrxB,EAAIyjB,EAAMzjB,EACV,MAAMigD,EAAa,EAAJ1sC,EAEf,GAAI0sC,IAAWN,EAET3/C,EAAI4nB,GACNA,EAAO5nB,EACP6mD,EAAW9nD,GACFiB,EAAIwnB,IACbA,EAAOxnB,EACP8mD,EAAW/nD,GAIb8gD,GAAQC,EAASD,EAAOp8B,EAAMlQ,KAAOusC,MAChC,CAEL,MAAMoH,EAAYnoD,EAAI,EAEtB,KAAK2hB,OAAcmmC,MAAcnmC,OAAcomC,GAAW,CAKxD,MAAMK,EAAqBrgD,KAAKC,IAAI8/C,EAAUC,GACxCM,EAAqBtgD,KAAKgC,IAAI+9C,EAAUC,GAE1CK,IAAuBJ,GAAcI,IAAuBD,GAC9DvB,EAAU7mD,KAAK,IACVV,EAAK+oD,GACR5zC,EAAGssC,IAGHuH,IAAuBL,GAAcK,IAAuBF,GAC9DvB,EAAU7mD,KAAK,IACVV,EAAKgpD,GACR7zC,EAAGssC,GAGR,CAIG9gD,EAAI,GAAKmoD,IAAcH,GAEzBpB,EAAU7mD,KAAKV,EAAK8oD,IAItBvB,EAAU7mD,KAAK2kB,GACfk8B,EAAQM,EACRH,EAAS,EACTl4B,EAAOJ,EAAOxnB,EACd6mD,EAAWC,EAAWC,EAAahoD,CACpC,CACH,CAEA,OAAO4mD,CACT,CAwHoB0B,CAAiBjpD,EAAM4I,EAAO+O,EAAOsb,GACjD,MACF,QACE,MAAM,IAAI9E,MAAM,qCAAqCntB,EAAQimD,cAG/DjyC,EAAQ0W,WAAa67B,IACvB,EAGF3M,QAAQl5C,GACNqlD,GAAmBrlD,EACrB,GC3OK,SAASwnD,GAAWjc,EAAUjQ,EAAOja,EAAMnW,GAChD,GAAIA,EACF,OAEF,IAAIhE,EAAQo0B,EAAMiQ,GACdl9B,EAAMgT,EAAKkqB,GAMf,MAJiB,UAAbA,IACFrkC,GAAQugD,QAAgBvgD,GACxBmH,GAAMo5C,QAAgBp5C,IAEjB,CAACk9B,WAAUrkC,QAAOmH,MAC3B,CAqBO,SAASq5C,GAAgBxgD,EAAOmH,EAAKqV,GAC1C,KAAMrV,EAAMnH,EAAOmH,IAAO,CACxB,MAAMsV,EAAQD,EAAOrV,GACrB,IAAKmT,MAAMmC,EAAMlQ,KAAO+N,MAAMmC,EAAMzjB,GAClC,KAEJ,CACA,OAAOmO,CACT,CAEA,SAASs5C,GAASjjD,EAAGC,EAAG2F,EAAMzD,GAC5B,OAAInC,GAAKC,EACAkC,EAAGnC,EAAE4F,GAAO3F,EAAE2F,IAEhB5F,EAAIA,EAAE4F,GAAQ3F,EAAIA,EAAE2F,GAAQ,CACrC,CCnFO,SAASs9C,GAAoBC,EAAUn+B,GAC5C,IAAIhG,EAAS,GACTzY,GAAQ,EAUZ,OARI6B,OAAQ+6C,IACV58C,GAAQ,EAERyY,EAASmkC,GAETnkC,EDwCG,SAA6BmkC,EAAUn+B,GAC5C,MAAMjW,EAACA,EAAI,KAAIvT,EAAEA,EAAI,MAAQ2nD,GAAY,GACnCC,EAAap+B,EAAKhG,OAClBA,EAAS,GAaf,OAZAgG,EAAKg3B,SAAS95C,SAAQ,EAAEM,QAAOmH,UAC7BA,EAAMq5C,GAAgBxgD,EAAOmH,EAAKy5C,GAClC,MAAMxsB,EAAQwsB,EAAW5gD,GACnBma,EAAOymC,EAAWz5C,GACd,OAANnO,GACFwjB,EAAO1kB,KAAK,CAACyU,EAAG6nB,EAAM7nB,EAAGvT,MACzBwjB,EAAO1kB,KAAK,CAACyU,EAAG4N,EAAK5N,EAAGvT,OACT,OAANuT,IACTiQ,EAAO1kB,KAAK,CAACyU,IAAGvT,EAAGo7B,EAAMp7B,IACzBwjB,EAAO1kB,KAAK,CAACyU,IAAGvT,EAAGmhB,EAAKnhB,IACzB,IAEIwjB,CACT,CCzDaqkC,CAAoBF,EAAUn+B,GAGlChG,EAAO3kB,OAAS,IAAI8hD,GAAY,CACrCn9B,SACApkB,QAAS,CAACkgD,QAAS,GACnBv0C,QACAghB,UAAWhhB,IACR,IACP,CAEO,SAAS+8C,GAAiBtnB,GAC/B,OAAOA,IAA0B,IAAhBA,EAAOztB,IAC1B,CC5BO,SAASg1C,GAAeC,EAASv5C,EAAOw5C,GAE7C,IAAIl1C,EADWi1C,EAAQv5C,GACLsE,KAClB,MAAMm1C,EAAU,CAACz5C,GACjB,IAAItE,EAEJ,IAAK89C,EACH,OAAOl1C,EAGT,MAAgB,IAATA,IAA4C,IAA1Bm1C,EAAQjmD,QAAQ8Q,IAAc,CACrD,KAAK9D,OAAS8D,GACZ,OAAOA,EAIT,GADA5I,EAAS69C,EAAQj1C,IACZ5I,EACH,OAAO,EAGT,GAAIA,EAAOwsC,QACT,OAAO5jC,EAGTm1C,EAAQppD,KAAKiU,GACbA,EAAO5I,EAAO4I,IAChB,CAEA,OAAO,CACT,CAOO,SAASo1C,GAAY3+B,EAAM/a,EAAOsH,GAEvC,MAAMhD,EAwER,SAAyByW,GACvB,MAAMpqB,EAAUoqB,EAAKpqB,QACfgpD,EAAahpD,EAAQ2T,KAC3B,IAAIA,GAAOW,OAAe00C,GAAcA,EAAWj+C,OAAQi+C,QAE9ChlD,IAAT2P,IACFA,IAAS3T,EAAQylB,iBAGnB,OAAa,IAAT9R,GAA2B,OAATA,KAIT,IAATA,EACK,SAEFA,EACT,CAzFes1C,CAAgB7+B,GAE7B,IAAIpd,OAAS2G,GACX,OAAOuO,MAAMvO,EAAK5Q,QAAiB4Q,EAGrC,IAAI5I,EAASm+C,WAAWv1C,GAExB,OAAI9D,OAAS9E,IAAWrD,KAAK+D,MAAMV,KAAYA,EAOjD,SAA2Bo+C,EAAS95C,EAAOtE,EAAQ4L,GACjC,MAAZwyC,GAA+B,MAAZA,IACrBp+C,EAASsE,EAAQtE,GAGnB,QAAIA,IAAWsE,GAAStE,EAAS,GAAKA,GAAU4L,IAIzC5L,CACT,CAhBWq+C,CAAkBz1C,EAAK,GAAItE,EAAOtE,EAAQ4L,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAAS9T,QAAQ8Q,IAAS,GAAKA,CAC5E,CCHA,SAAS01C,GAAejlC,EAAQklC,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAK,IAAI56B,EAAI,EAAGA,EAAI26B,EAAW9pD,OAAQmvB,IAAK,CAC1C,MAAMxE,EAAOm/B,EAAW36B,IAClBoN,MAACA,EAAKja,KAAEA,EAAIsC,MAAEA,GAASolC,GAAUr/B,EAAMk/B,EAAa,KAE1D,MAAKjlC,GAAU2X,GAASja,GAGxB,GAAIia,EAGFwtB,EAAUE,QAAQrlC,QAGlB,GADAD,EAAO1kB,KAAK2kB,IACPtC,EAEH,KAGN,CACAqC,EAAO1kB,QAAQ8pD,EACjB,CAQA,SAASC,GAAUr/B,EAAMk/B,EAAard,GACpC,MAAM5nB,EAAQ+F,EAAK03B,YAAYwH,EAAard,GAC5C,IAAK5nB,EACH,MAAO,GAGT,MAAMslC,EAAatlC,EAAM4nB,GACnBmV,EAAWh3B,EAAKg3B,SAChBoH,EAAap+B,EAAKhG,OACxB,IAAI4X,GAAQ,EACRja,GAAO,EACX,IAAK,IAAIpiB,EAAI,EAAGA,EAAIyhD,EAAS3hD,OAAQE,IAAK,CACxC,MAAMgrB,EAAUy2B,EAASzhD,GACnBiqD,EAAapB,EAAW79B,EAAQ/iB,OAAOqkC,GACvC4d,EAAYrB,EAAW79B,EAAQ5b,KAAKk9B,GAC1C,IAAI6S,QAAW6K,EAAYC,EAAYC,GAAY,CACjD7tB,EAAQ2tB,IAAeC,EACvB7nC,EAAO4nC,IAAeE,EACtB,KACD,CACH,CACA,MAAO,CAAC7tB,QAAOja,OAAMsC,QACvB,CC1GO,MAAMylC,GACXtjD,YAAYqI,GACVpI,KAAK0N,EAAItF,EAAKsF,EACd1N,KAAK7F,EAAIiO,EAAKjO,EACd6F,KAAK0d,OAAStV,EAAKsV,MACrB,CAEA27B,YAAYvtC,EAAK4wC,EAAQt0C,GACvB,MAAMsF,EAACA,IAAGvT,SAAGujB,GAAU1d,KAGvB,OAFA08C,EAASA,GAAU,CAACv7C,MAAO,EAAGmH,IAAK6X,KACnCrU,EAAIiX,IAAIrV,EAAGvT,EAAGujB,EAAQg/B,EAAOp0C,IAAKo0C,EAAOv7C,OAAO,IACxCiH,EAAKs0C,MACf,CAEArB,YAAYz9B,GACV,MAAMlQ,EAACA,IAAGvT,SAAGujB,GAAU1d,KACjBuhB,EAAQ3D,EAAM2D,MACpB,MAAO,CACL7T,EAAGA,EAAIzM,KAAKggB,IAAIM,GAAS7D,EACzBvjB,EAAGA,EAAI8G,KAAKkgB,IAAII,GAAS7D,EACzB6D,QAEJ,ECbK,SAAS+hC,GAAW3oB,GACzB,MAAM1gC,MAACA,EAAKiT,KAAEA,OAAMyW,GAAQgX,EAE5B,IAAIvxB,OAAS8D,GACX,OAwBJ,SAAwBjT,EAAO2O,GAC7B,MAAMW,EAAOtP,EAAMyU,eAAe9F,GAC5BkoC,EAAUvnC,GAAQtP,EAAMmmB,iBAAiBxX,GAC/C,OAAOkoC,EAAUvnC,EAAKgE,QAAU,IAClC,CA5BWg2C,CAAetpD,EAAOiT,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyBytB,GAC9B,MAAMzyB,MAACA,EAAKU,MAAEA,OAAO+a,GAAQgX,EACvBhd,EAAS,GACTg9B,EAAWh3B,EAAKg3B,SAChB6I,EAAe7/B,EAAKhG,OACpBmlC,EAiBR,SAAuB56C,EAAOU,GAC5B,MAAM66C,EAAQ,GACRvqB,EAAQhxB,EAAM+B,wBAAwB,QAE5C,IAAK,IAAI/Q,EAAI,EAAGA,EAAIggC,EAAMlgC,OAAQE,IAAK,CACrC,MAAMqQ,EAAO2vB,EAAMhgC,GACnB,GAAIqQ,EAAKX,QAAUA,EACjB,MAEGW,EAAKiI,QACRiyC,EAAMR,QAAQ15C,EAAKgE,QAEvB,CACA,OAAOk2C,CACT,CA/BqBC,CAAcx7C,EAAOU,GACxCk6C,EAAW7pD,KAAK4oD,GAAoB,CAACn0C,EAAG,KAAMvT,EAAG+N,EAAMyK,QAASgR,IAEhE,IAAK,IAAIzqB,EAAI,EAAGA,EAAIyhD,EAAS3hD,OAAQE,IAAK,CACxC,MAAMgrB,EAAUy2B,EAASzhD,GACzB,IAAK,IAAIivB,EAAIjE,EAAQ/iB,MAAOgnB,GAAKjE,EAAQ5b,IAAK6f,IAC5Cy6B,GAAejlC,EAAQ6lC,EAAar7B,GAAI26B,EAE5C,CACA,OAAO,IAAIhI,GAAY,CAACn9B,SAAQpkB,QAAS,IAC3C,CETWoqD,CAAgBhpB,GAGzB,GAAa,UAATztB,EACF,OAAO,EAGT,MAAM40C,EAmBR,SAAyBnnB,GACvB,MAAMzyB,EAAQyyB,EAAOzyB,OAAS,GAE9B,OAAIA,EAAMke,yBAuBZ,SAAiCuU,GAC/B,MAAMzyB,MAACA,OAAOgF,GAAQytB,EAChBphC,EAAU2O,EAAM3O,QAChBP,EAASkP,EAAMwI,YAAY1X,OAC3BmI,EAAQ5H,EAAQ8O,QAAUH,EAAMjF,IAAMiF,EAAMhH,IAC5C5E,EHuBD,SAAyB4Q,EAAMhF,EAAO+P,GAC3C,IAAI3b,EAYJ,OATEA,EADW,UAAT4Q,EACM+K,EACU,QAAT/K,EACDhF,EAAM3O,QAAQ8O,QAAUH,EAAMhH,IAAMgH,EAAMjF,KACzCsD,OAAS2G,GAEVA,EAAK5Q,MAEL4L,EAAM62B,eAETziC,CACT,CGrCgBsnD,CAAgB12C,EAAMhF,EAAO/G,GACrCmD,EAAS,GAEf,GAAI/K,EAAQygB,KAAKgL,SAAU,CACzB,MAAM9J,EAAShT,EAAMke,yBAAyB,EAAGjlB,GACjD,OAAO,IAAIkiD,GAAU,CACnB31C,EAAGwN,EAAOxN,EACVvT,EAAG+gB,EAAO/gB,EACVujB,OAAQxV,EAAM6d,8BAA8BzpB,IAE/C,CAED,IAAK,IAAIpD,EAAI,EAAGA,EAAIF,IAAUE,EAC5BoL,EAAOrL,KAAKiP,EAAMke,yBAAyBltB,EAAGoD,IAEhD,OAAOgI,CACT,CA3CWu/C,CAAwBlpB,GAMnC,SAA+BA,GAC7B,MAAMzyB,MAACA,EAAQ,GAAAgF,KAAIA,GAAQytB,EACrB+D,EHqBD,SAAyBxxB,EAAMhF,GACpC,IAAIw2B,EAAQ,KAWZ,MAVa,UAATxxB,EACFwxB,EAAQx2B,EAAMyK,OACI,QAATzF,EACTwxB,EAAQx2B,EAAMuK,KACLlM,OAAS2G,GAElBwxB,EAAQx2B,EAAM2P,iBAAiB3K,EAAK5Q,OAC3B4L,EAAMsS,eACfkkB,EAAQx2B,EAAMsS,gBAETkkB,CACT,CGlCgBolB,CAAgB52C,EAAMhF,GAEpC,IAAIkB,OAASs1B,GAAQ,CACnB,MAAM7lB,EAAa3Q,EAAMuS,eAEzB,MAAO,CACL/M,EAAGmL,EAAa6lB,EAAQ,KACxBvkC,EAAG0e,EAAa,KAAO6lB,EAE1B,CAED,OAAO,IACT,CAlBSqlB,CAAsBppB,EAC/B,CA1BmBqpB,CAAgBrpB,GAEjC,OAAImnB,aAAoBuB,GACfvB,EAGFD,GAAoBC,EAAUn+B,EACvC,CC9BO,SAASsgC,GAAUn4C,EAAK6uB,EAAQznB,GACrC,MAAM5O,EAASg/C,GAAW3oB,IACpBhX,KAACA,EAAIzb,MAAEA,OAAOuC,GAAQkwB,EACtBupB,EAAWvgC,EAAKpqB,QAChBgpD,EAAa2B,EAASh3C,KACtBtJ,EAAQsgD,EAASllC,iBACjBmlC,MAACA,EAAQvgD,EAAK6/C,MAAEA,EAAQ7/C,GAAS2+C,GAAc,GACjDj+C,GAAUqf,EAAKhG,OAAO3kB,UACxB2qC,OAAS73B,EAAKoH,GAMlB,SAAgBpH,EAAKzH,GACnB,MAAMsf,KAACA,SAAMrf,QAAQ6/C,QAAOV,OAAOvwC,QAAMhL,GAAS7D,EAC5CmhC,EAAW7hB,EAAKze,MAAQ,QAAUb,EAAIoG,KAE5CqB,EAAI22B,OAEa,MAAb+C,GAAoBie,IAAUU,IAChCC,GAAat4C,EAAKxH,EAAQ4O,EAAKT,KAC/BvF,GAAKpB,EAAK,CAAC6X,OAAMrf,SAAQV,MAAOugD,EAAOj8C,QAAOs9B,aAC9C15B,EAAI62B,UACJ72B,EAAI22B,OACJ2hB,GAAat4C,EAAKxH,EAAQ4O,EAAKP,SAEjCzF,GAAKpB,EAAK,CAAC6X,OAAMrf,SAAQV,MAAO6/C,EAAOv7C,QAAOs9B,aAE9C15B,EAAI62B,SACN,CArBI0hB,CAAOv4C,EAAK,CAAC6X,OAAMrf,SAAQ6/C,QAAOV,QAAOvwC,OAAMhL,QAAOuC,UACtDq5B,OAAWh4B,GAEf,CAoBA,SAASs4C,GAAat4C,EAAKxH,EAAQggD,GACjC,MAAM3J,SAACA,SAAUh9B,GAAUrZ,EAC3B,IAAIixB,GAAQ,EACRgvB,GAAW,EAEfz4C,EAAIq3B,YACJ,IAAK,MAAMjf,KAAWy2B,EAAU,CAC9B,MAAMx5C,MAACA,MAAOmH,GAAO4b,EACfS,EAAahH,EAAOxc,GACpByjB,EAAYjH,EAAOgkC,GAAgBxgD,EAAOmH,EAAKqV,IACjD4X,GACFzpB,EAAIs3B,OAAOze,EAAWjX,EAAGiX,EAAWxqB,GACpCo7B,GAAQ,IAERzpB,EAAIu3B,OAAO1e,EAAWjX,EAAG42C,GACzBx4C,EAAIu3B,OAAO1e,EAAWjX,EAAGiX,EAAWxqB,IAEtCoqD,IAAajgD,EAAO+0C,YAAYvtC,EAAKoY,EAAS,CAAC/N,KAAMouC,IACjDA,EACFz4C,EAAI0rC,YAEJ1rC,EAAIu3B,OAAOze,EAAUlX,EAAG42C,EAE5B,CAEAx4C,EAAIu3B,OAAO/+B,EAAOixB,QAAQ7nB,EAAG42C,GAC7Bx4C,EAAI0rC,YACJ1rC,EAAIiH,MACN,CAEA,SAAS7F,GAAKpB,EAAKzH,GACjB,MAAMsf,KAACA,EAAIrf,OAAEA,EAAMkhC,SAAEA,EAAQ5hC,MAAEA,EAAKsE,MAAEA,GAAS7D,EACzCs2C,ENlED,SAAmBh3B,EAAMrf,EAAQkhC,GACtC,MAAMmV,EAAWh3B,EAAKg3B,SAChBh9B,EAASgG,EAAKhG,OACd6mC,EAAUlgD,EAAOqZ,OACjBmoB,EAAQ,GAEd,IAAK,MAAM5hB,KAAWy2B,EAAU,CAC9B,IAAIx5C,MAACA,MAAOmH,GAAO4b,EACnB5b,EAAMq5C,GAAgBxgD,EAAOmH,EAAKqV,GAElC,MAAM++B,EAAS+E,GAAWjc,EAAU7nB,EAAOxc,GAAQwc,EAAOrV,GAAM4b,EAAQ/e,MAExE,IAAKb,EAAOq2C,SAAU,CAGpB7U,EAAM7sC,KAAK,CACT0hC,OAAQzW,EACR5f,OAAQo4C,EACRv7C,MAAOwc,EAAOxc,GACdmH,IAAKqV,EAAOrV,KAEd,QACD,CAGD,MAAMm8C,GAAiBnJ,QAAeh3C,EAAQo4C,GAE9C,IAAK,MAAMgI,KAAOD,EAAgB,CAChC,MAAME,EAAYlD,GAAWjc,EAAUgf,EAAQE,EAAIvjD,OAAQqjD,EAAQE,EAAIp8C,KAAMo8C,EAAIv/C,MAC3Ey/C,GAAcC,QAAc3gC,EAASvG,EAAQgnC,GAEnD,IAAK,MAAMG,KAAcF,EACvB9e,EAAM7sC,KAAK,CACT0hC,OAAQmqB,EACRxgD,OAAQogD,EACRvjD,MAAO,CACLqkC,CAACA,GAAWoc,GAASlF,EAAQiI,EAAW,QAAS1jD,KAAKgC,MAExDqF,IAAK,CACHk9B,CAACA,GAAWoc,GAASlF,EAAQiI,EAAW,MAAO1jD,KAAKC,OAI5D,CACF,CACA,OAAO4kC,CACT,CMoBmBmV,CAAUt3B,EAAMrf,EAAQkhC,GAEzC,IAAK,MAAO7K,OAAQoqB,EAAKzgD,OAAQogD,EAAGvjD,MAAEA,EAAKmH,IAAEA,KAAQqyC,EAAU,CAC7D,MAAO77B,OAAOE,gBAACA,EAAkBpb,GAAS,IAAMmhD,EAC1CC,GAAsB,IAAX1gD,EAEjBwH,EAAI22B,OACJ32B,EAAIiT,UAAYC,EAEhBimC,GAAWn5C,EAAK5D,EAAO88C,GAAYvD,GAAWjc,EAAUrkC,EAAOmH,IAE/DwD,EAAIq3B,YAEJ,MAAMohB,IAAa5gC,EAAK01B,YAAYvtC,EAAKi5C,GAEzC,IAAI5/C,EACJ,GAAI6/C,EAAU,CACRT,EACFz4C,EAAI0rC,YAEJ0N,GAAmBp5C,EAAKxH,EAAQgE,EAAKk9B,GAGvC,MAAM2f,IAAe7gD,EAAO+0C,YAAYvtC,EAAK44C,EAAK,CAACvuC,KAAMouC,EAAUl8C,SAAS,IAC5ElD,EAAOo/C,GAAYY,EACdhgD,GACH+/C,GAAmBp5C,EAAKxH,EAAQnD,EAAOqkC,EAE1C,CAED15B,EAAI0rC,YACJ1rC,EAAIoB,KAAK/H,EAAO,UAAY,WAE5B2G,EAAI62B,SACN,CACF,CAEA,SAASsiB,GAAWn5C,EAAK5D,EAAOw0C,GAC9B,MAAMjqC,IAACA,SAAKE,GAAUzK,EAAMjO,MAAMkZ,WAC5BqyB,SAACA,QAAUrkC,MAAOmH,GAAOo0C,GAAU,GACxB,MAAblX,IACF15B,EAAIq3B,YACJr3B,EAAI4xC,KAAKv8C,EAAOsR,EAAKnK,EAAMnH,EAAOwR,EAASF,GAC3C3G,EAAIiH,OAER,CAEA,SAASmyC,GAAmBp5C,EAAKxH,EAAQsZ,EAAO4nB,GAC9C,MAAM4f,EAAoB9gD,EAAO+2C,YAAYz9B,EAAO4nB,GAChD4f,GACFt5C,EAAIu3B,OAAO+hB,EAAkB13C,EAAG03C,EAAkBjrD,EAEtD,CC7GA,IAAAyO,GAAe,CACbiC,GAAI,SAEJw6C,oBAAoBprD,EAAO6kD,EAAOvlD,GAChC,MAAM2W,GAASjW,EAAM1B,KAAKG,UAAY,IAAIM,OACpCmpD,EAAU,GAChB,IAAI54C,EAAMrQ,EAAGyqB,EAAMgX,EAEnB,IAAKzhC,EAAI,EAAGA,EAAIgX,IAAShX,EACvBqQ,EAAOtP,EAAMyU,eAAexV,GAC5ByqB,EAAOpa,EAAKgE,QACZotB,EAAS,KAELhX,GAAQA,EAAKpqB,SAAWoqB,aAAgBm3B,KAC1CngB,EAAS,CACPmW,QAAS72C,EAAMmmB,iBAAiBlnB,GAChC0P,MAAO1P,EACPgU,KAAMo1C,GAAY3+B,EAAMzqB,EAAGgX,GAC3BjW,QACAwQ,KAAMlB,EAAKY,WAAW5Q,QAAQ0U,UAC9B/F,MAAOqB,EAAKQ,OACZ4Z,SAIJpa,EAAK+7C,QAAU3qB,EACfwnB,EAAQlpD,KAAK0hC,GAGf,IAAKzhC,EAAI,EAAGA,EAAIgX,IAAShX,EACvByhC,EAASwnB,EAAQjpD,GACZyhC,IAA0B,IAAhBA,EAAOztB,OAItBytB,EAAOztB,KAAOg1C,GAAeC,EAASjpD,EAAGK,EAAQ6oD,WAErD,EAEAmD,WAAWtrD,EAAO6kD,EAAOvlD,GACvB,MAAMuI,EAA4B,eAArBvI,EAAQisD,SACf/8C,EAAWxO,EAAMiuB,+BACjBhV,EAAOjZ,EAAMkZ,UACnB,IAAK,IAAIja,EAAIuP,EAASzP,OAAS,EAAGE,GAAK,IAAKA,EAAG,CAC7C,MAAMyhC,EAASlyB,EAASvP,GAAGosD,QACtB3qB,IAILA,EAAOhX,KAAKkB,oBAAoB3R,EAAMynB,EAAOlwB,MACzC3I,GAAQ64B,EAAOztB,MACjB+2C,GAAUhqD,EAAM6R,IAAK6uB,EAAQznB,GAEjC,CACF,EAEAuyC,mBAAmBxrD,EAAO6kD,EAAOvlD,GAC/B,GAAyB,uBAArBA,EAAQisD,SACV,OAGF,MAAM/8C,EAAWxO,EAAMiuB,+BACvB,IAAK,IAAIhvB,EAAIuP,EAASzP,OAAS,EAAGE,GAAK,IAAKA,EAAG,CAC7C,MAAMyhC,EAASlyB,EAASvP,GAAGosD,QAEvBrD,GAAiBtnB,IACnBspB,GAAUhqD,EAAM6R,IAAK6uB,EAAQ1gC,EAAMkZ,UAEvC,CACF,EAEAuyC,kBAAkBzrD,EAAOwc,EAAMld,GAC7B,MAAMohC,EAASlkB,EAAKlN,KAAK+7C,QAEpBrD,GAAiBtnB,IAAgC,sBAArBphC,EAAQisD,UAIzCvB,GAAUhqD,EAAM6R,IAAK6uB,EAAQ1gC,EAAMkZ,UACrC,EAEA1M,SAAU,CACR27C,WAAW,EACXoD,SAAU,sBCvEd,MAAMG,GAAa,CAACC,EAAWnhB,KAC7B,IAAIohB,UAACA,EAAYphB,WAAUqhB,EAAWrhB,GAAYmhB,EAOlD,OALIA,EAAUG,gBACZF,EAAY5kD,KAAKC,IAAI2kD,EAAWphB,GAChCqhB,EAAWF,EAAUI,iBAAmB/kD,KAAKC,IAAI4kD,EAAUrhB,IAGtD,CACLqhB,WACAD,YACAI,WAAYhlD,KAAKgC,IAAIwhC,EAAUohB,GACjC,EAKK,MAAMK,WAAejyB,GAK1Bl0B,YAAYqG,GACVkU,QAEAta,KAAKmmD,QAAS,EAGdnmD,KAAKomD,eAAiB,GAKtBpmD,KAAKqmD,aAAe,KAGpBrmD,KAAKsmD,cAAe,EAEpBtmD,KAAK/F,MAAQmM,EAAOnM,MACpB+F,KAAKzG,QAAU6M,EAAO7M,QACtByG,KAAK8L,IAAM1F,EAAO0F,IAClB9L,KAAKumD,iBAAchpD,EACnByC,KAAKwmD,iBAAcjpD,EACnByC,KAAKymD,gBAAalpD,EAClByC,KAAKkiB,eAAY3kB,EACjByC,KAAKiiB,cAAW1kB,EAChByC,KAAKyS,SAAMlV,EACXyC,KAAK2S,YAASpV,EACdyC,KAAK4S,UAAOrV,EACZyC,KAAK0S,WAAQnV,EACbyC,KAAKmb,YAAS5d,EACdyC,KAAKob,WAAQ7d,EACbyC,KAAK43B,cAAWr6B,EAChByC,KAAKrG,cAAW4D,EAChByC,KAAKujB,YAAShmB,EACdyC,KAAKurB,cAAWhuB,CAClB,CAEA7C,OAAOunB,EAAUC,EAAWuX,GAC1Bz5B,KAAKiiB,SAAWA,EAChBjiB,KAAKkiB,UAAYA,EACjBliB,KAAK43B,SAAW6B,EAEhBz5B,KAAK65B,gBACL75B,KAAK0mD,cACL1mD,KAAK86B,KACP,CAEAjB,gBACM75B,KAAKya,gBACPza,KAAKob,MAAQpb,KAAKiiB,SAClBjiB,KAAK4S,KAAO5S,KAAK43B,SAAShlB,KAC1B5S,KAAK0S,MAAQ1S,KAAKob,QAElBpb,KAAKmb,OAASnb,KAAKkiB,UACnBliB,KAAKyS,IAAMzS,KAAK43B,SAASnlB,IACzBzS,KAAK2S,OAAS3S,KAAKmb,OAEvB,CAEAurC,cACE,MAAMd,EAAY5lD,KAAKzG,QAAQD,QAAU,GACzC,IAAIitD,GAAcjlD,OAAKskD,EAAUhnC,eAAgB,CAAC5e,KAAK/F,OAAQ+F,OAAS,GAEpE4lD,EAAUz6C,SACZo7C,EAAcA,EAAYp7C,QAAQtJ,GAAS+jD,EAAUz6C,OAAOtJ,EAAM7B,KAAK/F,MAAM1B,SAG3EqtD,EAAU5pD,OACZuqD,EAAcA,EAAYvqD,MAAK,CAAC2C,EAAGC,IAAMgnD,EAAU5pD,KAAK2C,EAAGC,EAAGoB,KAAK/F,MAAM1B,SAGvEyH,KAAKzG,QAAQ8O,SACfk+C,EAAYl+C,UAGdrI,KAAKumD,YAAcA,CACrB,CAEAzrB,MACE,MAAMvhC,QAACA,EAAOuS,IAAEA,GAAO9L,KAMvB,IAAKzG,EAAQG,QAEX,YADAsG,KAAKob,MAAQpb,KAAKmb,OAAS,GAI7B,MAAMyqC,EAAYrsD,EAAQD,OACpBqtD,GAAYtvB,QAAOuuB,EAAUxuB,MAC7BqN,EAAWkiB,EAAU3+C,KACrB20B,EAAc38B,KAAK4mD,uBACnBd,SAACA,EAAQG,WAAEA,GAAcN,GAAWC,EAAWnhB,GAErD,IAAIrpB,EAAOD,EAEXrP,EAAIsrB,KAAOuvB,EAAUxoB,OAEjBn+B,KAAKya,gBACPW,EAAQpb,KAAKiiB,SACb9G,EAASnb,KAAK6mD,SAASlqB,EAAa8H,EAAUqhB,EAAUG,GAAc,KAEtE9qC,EAASnb,KAAKkiB,UACd9G,EAAQpb,KAAK8mD,SAASnqB,EAAagqB,EAAWb,EAAUG,GAAc,IAGxEjmD,KAAKob,MAAQna,KAAKC,IAAIka,EAAO7hB,EAAQ0oB,UAAYjiB,KAAKiiB,UACtDjiB,KAAKmb,OAASla,KAAKC,IAAIia,EAAQ5hB,EAAQ2oB,WAAaliB,KAAKkiB,UAC3D,CAKA2kC,SAASlqB,EAAa8H,EAAUqhB,EAAUG,GACxC,MAAMn6C,IAACA,EAAGmW,SAAEA,EAAU1oB,SAAUD,QAAQg0B,QAACA,KAAattB,KAChD+mD,EAAW/mD,KAAKomD,eAAiB,GAEjCK,EAAazmD,KAAKymD,WAAa,CAAC,GAChCnvB,EAAa2uB,EAAa34B,EAChC,IAAI05B,EAAcrqB,EAElB7wB,EAAIs1B,UAAY,OAChBt1B,EAAIy1B,aAAe,SAEnB,IAAI0lB,GAAM,EACNx0C,GAAO6kB,EAgBX,OAfAt3B,KAAKumD,YAAY1lD,SAAQ,CAAC2e,EAAYtmB,KACpC,MAAMguD,EAAYpB,EAAYrhB,EAAW,EAAK34B,EAAIq7C,YAAY3nC,EAAW3lB,MAAMuhB,OAErE,IAANliB,GAAWutD,EAAWA,EAAWztD,OAAS,GAAKkuD,EAAY,EAAI55B,EAAUrL,KAC3E+kC,GAAe1vB,EACfmvB,EAAWA,EAAWztD,QAAUE,EAAI,EAAI,EAAI,IAAM,EAClDuZ,GAAO6kB,EACP2vB,KAGFF,EAAS7tD,GAAK,CAAC0Z,KAAM,EAAGH,MAAKw0C,MAAK7rC,MAAO8rC,EAAW/rC,OAAQ8qC,GAE5DQ,EAAWA,EAAWztD,OAAS,IAAMkuD,EAAY55B,KAG5C05B,CACT,CAEAF,SAASnqB,EAAagqB,EAAWb,EAAUsB,GACzC,MAAMt7C,IAACA,EAAGoW,UAAEA,EAAW3oB,SAAUD,QAAQg0B,QAACA,KAAattB,KACjD+mD,EAAW/mD,KAAKomD,eAAiB,GACjCI,EAAcxmD,KAAKwmD,YAAc,GACjCa,EAAcnlC,EAAYya,EAEhC,IAAI2qB,EAAah6B,EACbi6B,EAAkB,EAClBC,EAAmB,EAEnB50C,EAAO,EACP60C,EAAM,EAyBV,OAvBAznD,KAAKumD,YAAY1lD,SAAQ,CAAC2e,EAAYtmB,KACpC,MAAMguD,UAACA,EAASjB,WAAEA,GA8VxB,SAA2BH,EAAUa,EAAW76C,EAAK0T,EAAY4nC,GAC/D,MAAMF,EAKR,SAA4B1nC,EAAYsmC,EAAUa,EAAW76C,GAC3D,IAAI47C,EAAiBloC,EAAW3lB,KAC5B6tD,GAA4C,iBAAnBA,IAC3BA,EAAiBA,EAAe5kD,QAAO,CAACnE,EAAGC,IAAMD,EAAE3F,OAAS4F,EAAE5F,OAAS2F,EAAIC,KAE7E,OAAOknD,EAAYa,EAAU3+C,KAAO,EAAK8D,EAAIq7C,YAAYO,GAAgBtsC,KAC3E,CAXoBusC,CAAmBnoC,EAAYsmC,EAAUa,EAAW76C,GAChEm6C,EAYR,SAA6BmB,EAAa5nC,EAAYooC,GACpD,IAAI3B,EAAamB,EACc,iBAApB5nC,EAAW3lB,OACpBosD,EAAa4B,GAA0BroC,EAAYooC,IAErD,OAAO3B,CACT,CAlBqB6B,CAAoBV,EAAa5nC,EAAYmnC,EAAUrvB,YAC1E,MAAO,CAAC4vB,YAAWjB,aACrB,CAlWsC8B,CAAkBjC,EAAUa,EAAW76C,EAAK0T,EAAY4nC,GAGpFluD,EAAI,GAAKsuD,EAAmBvB,EAAa,EAAI34B,EAAU+5B,IACzDC,GAAcC,EAAkBj6B,EAChCk5B,EAAYvtD,KAAK,CAACmiB,MAAOmsC,EAAiBpsC,OAAQqsC,IAClD50C,GAAQ20C,EAAkBj6B,EAC1Bm6B,IACAF,EAAkBC,EAAmB,GAIvCT,EAAS7tD,GAAK,CAAC0Z,OAAMH,IAAK+0C,EAAkBC,MAAKrsC,MAAO8rC,EAAW/rC,OAAQ8qC,GAG3EsB,EAAkBtmD,KAAKgC,IAAIskD,EAAiBL,GAC5CM,GAAoBvB,EAAa34B,KAGnCg6B,GAAcC,EACdf,EAAYvtD,KAAK,CAACmiB,MAAOmsC,EAAiBpsC,OAAQqsC,IAE3CF,CACT,CAEAU,iBACE,IAAKhoD,KAAKzG,QAAQG,QAChB,OAEF,MAAMijC,EAAc38B,KAAK4mD,uBAClBR,eAAgBW,EAAUxtD,SAASi+B,MAACA,EAAOl+B,QAAQg0B,QAACA,GAAQ26B,IAAEA,IAAQjoD,KACvEkoD,GAAYC,QAAcF,EAAKjoD,KAAK4S,KAAM5S,KAAKob,OACrD,GAAIpb,KAAKya,eAAgB,CACvB,IAAIwsC,EAAM,EACNr0C,GAAOsxB,QAAe1M,EAAOx3B,KAAK4S,KAAO0a,EAASttB,KAAK0S,MAAQ1S,KAAKymD,WAAWQ,IACnF,IAAK,MAAMmB,KAAUrB,EACfE,IAAQmB,EAAOnB,MACjBA,EAAMmB,EAAOnB,IACbr0C,GAAOsxB,QAAe1M,EAAOx3B,KAAK4S,KAAO0a,EAASttB,KAAK0S,MAAQ1S,KAAKymD,WAAWQ,KAEjFmB,EAAO31C,KAAOzS,KAAKyS,IAAMkqB,EAAcrP,EACvC86B,EAAOx1C,KAAOs1C,EAAUG,WAAWH,EAAUx6C,EAAEkF,GAAOw1C,EAAOhtC,OAC7DxI,GAAQw1C,EAAOhtC,MAAQkS,CAEpB,MACL,IAAIm6B,EAAM,EACNh1C,GAAMyxB,QAAe1M,EAAOx3B,KAAKyS,IAAMkqB,EAAcrP,EAASttB,KAAK2S,OAAS3S,KAAKwmD,YAAYiB,GAAKtsC,QACtG,IAAK,MAAMitC,KAAUrB,EACfqB,EAAOX,MAAQA,IACjBA,EAAMW,EAAOX,IACbh1C,GAAMyxB,QAAe1M,EAAOx3B,KAAKyS,IAAMkqB,EAAcrP,EAASttB,KAAK2S,OAAS3S,KAAKwmD,YAAYiB,GAAKtsC,SAEpGitC,EAAO31C,IAAMA,EACb21C,EAAOx1C,MAAQ5S,KAAK4S,KAAO0a,EAC3B86B,EAAOx1C,KAAOs1C,EAAUG,WAAWH,EAAUx6C,EAAE06C,EAAOx1C,MAAOw1C,EAAOhtC,OACpE3I,GAAO21C,EAAOjtC,OAASmS,CAE1B,CACH,CAEA7S,eACE,MAAiC,QAA1Bza,KAAKzG,QAAQI,UAAgD,WAA1BqG,KAAKzG,QAAQI,QACzD,CAEAmI,OACE,GAAI9B,KAAKzG,QAAQG,QAAS,CACxB,MAAMoS,EAAM9L,KAAK8L,KACjB63B,OAAS73B,EAAK9L,MAEdA,KAAKsoD,SAELxkB,OAAWh4B,EACZ,CACH,CAKAw8C,QACE,MAAO/uD,QAAS6O,cAAMo+C,aAAaC,MAAY36C,GAAO9L,MAChDw3B,MAACA,EAAOl+B,OAAQssD,GAAax9C,EAC7BmgD,EAAe9hD,IAAS7C,MACxBskD,GAAYC,QAAc//C,EAAK6/C,IAAKjoD,KAAK4S,KAAM5S,KAAKob,OACpDurC,GAAYtvB,QAAOuuB,EAAUxuB,OAC7B9J,QAACA,GAAWs4B,EACZnhB,EAAWkiB,EAAU3+C,KACrBwgD,EAAe/jB,EAAW,EAChC,IAAIgkB,EAEJzoD,KAAK+jC,YAGLj4B,EAAIs1B,UAAY8mB,EAAU9mB,UAAU,QACpCt1B,EAAIy1B,aAAe,SACnBz1B,EAAIsT,UAAY,GAChBtT,EAAIsrB,KAAOuvB,EAAUxoB,OAErB,MAAM2nB,SAACA,YAAUD,aAAWI,GAAcN,GAAWC,EAAWnhB,GAyE1DhqB,EAAeza,KAAKya,eACpBkiB,EAAc38B,KAAK4mD,sBAEvB6B,EADEhuC,EACO,CACP/M,GAAGw2B,QAAe1M,EAAOx3B,KAAK4S,KAAO0a,EAASttB,KAAK0S,MAAQ+zC,EAAW,IACtEtsD,EAAG6F,KAAKyS,IAAM6a,EAAUqP,EACxBhZ,KAAM,GAGC,CACPjW,EAAG1N,KAAK4S,KAAO0a,EACfnzB,GAAG+pC,QAAe1M,EAAOx3B,KAAKyS,IAAMkqB,EAAcrP,EAASttB,KAAK2S,OAAS6zC,EAAY,GAAGrrC,QACxFwI,KAAM,IAIV+kC,QAAsB1oD,KAAK8L,IAAK1D,EAAKugD,eAErC,MAAMrxB,EAAa2uB,EAAa34B,EAChCttB,KAAKumD,YAAY1lD,SAAQ,CAAC2e,EAAYtmB,KACpC4S,EAAImT,YAAcO,EAAWL,UAC7BrT,EAAIiT,UAAYS,EAAWL,UAE3B,MAAMypC,EAAY98C,EAAIq7C,YAAY3nC,EAAW3lB,MAAMuhB,MAC7CgmB,EAAY8mB,EAAU9mB,UAAU5hB,EAAW4hB,YAAc5hB,EAAW4hB,UAAYwkB,EAAUxkB,YAC1FhmB,EAAQ0qC,EAAW0C,EAAeI,EACxC,IAAIl7C,EAAI+6C,EAAO/6C,EACXvT,EAAIsuD,EAAOtuD,EAEf+tD,EAAUW,SAAS7oD,KAAKob,OAEpBX,EACEvhB,EAAI,GAAKwU,EAAI0N,EAAQkS,EAAUttB,KAAK0S,QACtCvY,EAAIsuD,EAAOtuD,GAAKm9B,EAChBmxB,EAAO9kC,OACPjW,EAAI+6C,EAAO/6C,GAAIw2B,QAAe1M,EAAOx3B,KAAK4S,KAAO0a,EAASttB,KAAK0S,MAAQ+zC,EAAWgC,EAAO9kC,QAElFzqB,EAAI,GAAKiB,EAAIm9B,EAAat3B,KAAK2S,SACxCjF,EAAI+6C,EAAO/6C,EAAIA,EAAI84C,EAAYiC,EAAO9kC,MAAMvI,MAAQkS,EACpDm7B,EAAO9kC,OACPxpB,EAAIsuD,EAAOtuD,GAAI+pC,QAAe1M,EAAOx3B,KAAKyS,IAAMkqB,EAAcrP,EAASttB,KAAK2S,OAAS6zC,EAAYiC,EAAO9kC,MAAMxI,SAYhH,GA1HoB,SAASzN,EAAGvT,EAAGqlB,GACnC,GAAI/D,MAAMqqC,IAAaA,GAAY,GAAKrqC,MAAMoqC,IAAcA,EAAY,EACtE,OAIF/5C,EAAI22B,OAEJ,MAAMrjB,GAAYvR,OAAe2R,EAAWJ,UAAW,GAUvD,GATAtT,EAAIiT,WAAYlR,OAAe2R,EAAWT,UAAWwpC,GACrDz8C,EAAI8sC,SAAU/qC,OAAe2R,EAAWo5B,QAAS,QACjD9sC,EAAIo3B,gBAAiBr1B,OAAe2R,EAAW0jB,eAAgB,GAC/Dp3B,EAAI8rC,UAAW/pC,OAAe2R,EAAWo4B,SAAU,SACnD9rC,EAAIsT,UAAYA,EAChBtT,EAAImT,aAAcpR,OAAe2R,EAAWP,YAAaspC,GAEzDz8C,EAAIm3B,aAAYp1B,OAAe2R,EAAWspC,SAAU,KAEhDlD,EAAUG,cAAe,CAG3B,MAAMgD,EAAc,CAClBrrC,OAAQmoC,EAAY5kD,KAAK+nD,MAAQ,EACjCnqC,WAAYW,EAAWX,WACvBT,SAAUoB,EAAWpB,SACrBiB,YAAaD,GAETyD,EAAUqlC,EAAUe,MAAMv7C,EAAGo4C,EAAW,GACxChjC,EAAU3oB,EAAIquD,GAGpBU,QAAgBp9C,EAAKi9C,EAAalmC,EAASC,EAAS8iC,EAAUI,iBAAmBF,EAC5E,MAGL,MAAMqD,EAAUhvD,EAAI8G,KAAKgC,KAAKwhC,EAAWohB,GAAa,EAAG,GACnDuD,EAAWlB,EAAUG,WAAW36C,EAAGo4C,GACnC1Q,GAAe2H,QAAcv9B,EAAW41B,cAE9CtpC,EAAIq3B,YAEAtnC,OAAOqL,OAAOkuC,GAAchM,MAAK9vB,GAAW,IAANA,KACxC0kC,QAAmBlyC,EAAK,CACtB4B,EAAG07C,EACHjvD,EAAGgvD,EACH98B,EAAGy5B,EACHv5B,EAAGs5B,EACHnoC,OAAQ03B,IAGVtpC,EAAI4xC,KAAK0L,EAAUD,EAASrD,EAAUD,GAGxC/5C,EAAIoB,OACc,IAAdkS,GACFtT,EAAIw3B,QAEP,CAEDx3B,EAAI62B,SACN,CAuDE0mB,CAFcnB,EAAUx6C,EAAEA,GAELvT,EAAGqlB,GAExB9R,GAAI47C,QAAOloB,EAAW1zB,EAAIo4C,EAAW0C,EAAc/tC,EAAe/M,EAAI0N,EAAQpb,KAAK0S,MAAOtK,EAAK6/C,KAvDhF,SAASv6C,EAAGvT,EAAGqlB,IAC9BqkB,OAAW/3B,EAAK0T,EAAW3lB,KAAM6T,EAAGvT,EAAK8rD,EAAa,EAAIU,EAAW,CACnE4C,cAAe/pC,EAAWhO,OAC1B4vB,UAAW8mB,EAAU9mB,UAAU5hB,EAAW4hB,YAE9C,CAqDEooB,CAAStB,EAAUx6C,EAAEA,GAAIvT,EAAGqlB,GAExB/E,EACFguC,EAAO/6C,GAAK0N,EAAQkS,OACf,GAA+B,iBAApB9N,EAAW3lB,KAAmB,CAC9C,MAAM+tD,EAAiBjB,EAAUrvB,WACjCmxB,EAAOtuD,GAAK0tD,GAA0BroC,EAAYooC,EAC7C,MACLa,EAAOtuD,GAAKm9B,MAIhBmyB,QAAqBzpD,KAAK8L,IAAK1D,EAAKugD,cACtC,CAKA5kB,YACE,MAAM37B,EAAOpI,KAAKzG,QACZkjC,EAAYr0B,EAAKxO,MACjB8vD,GAAYryB,QAAOoF,EAAUrF,MAC7BuyB,GAAe97B,OAAU4O,EAAUnP,SAEzC,IAAKmP,EAAU/iC,QACb,OAGF,MAAMwuD,GAAYC,QAAc//C,EAAK6/C,IAAKjoD,KAAK4S,KAAM5S,KAAKob,OACpDtP,EAAM9L,KAAK8L,IACXnS,EAAW8iC,EAAU9iC,SACrB6uD,EAAekB,EAAU1hD,KAAO,EAChC4hD,EAA6BD,EAAal3C,IAAM+1C,EACtD,IAAIruD,EAIAyY,EAAO5S,KAAK4S,KACZqP,EAAWjiB,KAAKob,MAEpB,GAAIpb,KAAKya,eAEPwH,EAAWhhB,KAAKgC,OAAOjD,KAAKymD,YAC5BtsD,EAAI6F,KAAKyS,IAAMm3C,EACfh3C,GAAOsxB,QAAe97B,EAAKovB,MAAO5kB,EAAM5S,KAAK0S,MAAQuP,OAChD,CAEL,MAAMC,EAAYliB,KAAKwmD,YAAY1jD,QAAO,CAACC,EAAKiF,IAAS/G,KAAKgC,IAAIF,EAAKiF,EAAKmT,SAAS,GACrFhhB,EAAIyvD,GAA6B1lB,QAAe97B,EAAKovB,MAAOx3B,KAAKyS,IAAKzS,KAAK2S,OAASuP,EAAY9Z,EAAK9O,OAAOg0B,QAAUttB,KAAK4mD,sBAC5H,CAID,MAAMl5C,GAAIw2B,QAAevqC,EAAUiZ,EAAMA,EAAOqP,GAGhDnW,EAAIs1B,UAAY8mB,EAAU9mB,WAAU3J,QAAmB99B,IACvDmS,EAAIy1B,aAAe,SACnBz1B,EAAImT,YAAcwd,EAAU74B,MAC5BkI,EAAIiT,UAAY0d,EAAU74B,MAC1BkI,EAAIsrB,KAAOsyB,EAAUvrB,QAErB0F,OAAW/3B,EAAK2wB,EAAU5iC,KAAM6T,EAAGvT,EAAGuvD,EACxC,CAKA9C,sBACE,MAAMnqB,EAAYz8B,KAAKzG,QAAQK,MACzB8vD,GAAYryB,QAAOoF,EAAUrF,MAC7BuyB,GAAe97B,OAAU4O,EAAUnP,SACzC,OAAOmP,EAAU/iC,QAAUgwD,EAAUpyB,WAAaqyB,EAAaxuC,OAAS,CAC1E,CAKA0uC,iBAAiBn8C,EAAGvT,GAClB,IAAIjB,EAAG4wD,EAAQC,EAEf,IAAI1R,QAAW3qC,EAAG1N,KAAK4S,KAAM5S,KAAK0S,SAC7B2lC,QAAWl+C,EAAG6F,KAAKyS,IAAKzS,KAAK2S,QAGhC,IADAo3C,EAAK/pD,KAAKomD,eACLltD,EAAI,EAAGA,EAAI6wD,EAAG/wD,SAAUE,EAG3B,GAFA4wD,EAASC,EAAG7wD,IAERm/C,QAAW3qC,EAAGo8C,EAAOl3C,KAAMk3C,EAAOl3C,KAAOk3C,EAAO1uC,SAC/Ci9B,QAAWl+C,EAAG2vD,EAAOr3C,IAAKq3C,EAAOr3C,IAAMq3C,EAAO3uC,QAEjD,OAAOnb,KAAKumD,YAAYrtD,GAK9B,OAAO,IACT,CAMA8wD,YAAYzqC,GACV,MAAMnX,EAAOpI,KAAKzG,QAClB,IAoDJ,SAAoBF,EAAM+O,GACxB,QAAc,cAAT/O,GAAiC,aAATA,IAAyB+O,EAAK4sC,UAAW5sC,EAAK6hD,aAGvE7hD,EAAKkX,SAAqB,UAATjmB,GAA6B,YAATA,EAI3C,CA5DS6wD,CAAW3qC,EAAElmB,KAAM+O,GACtB,OAIF,MAAM+hD,EAAcnqD,KAAK6pD,iBAAiBtqC,EAAE7R,EAAG6R,EAAEplB,GAEjD,GAAe,cAAXolB,EAAElmB,MAAmC,aAAXkmB,EAAElmB,KAAqB,CACnD,MAAMy/C,EAAW94C,KAAKqmD,aAChB+D,GApfWxrD,EAofqBurD,EApfT,QAAfxrD,EAofcm6C,IApfe,OAANl6C,GAAcD,EAAEuK,eAAiBtK,EAAEsK,cAAgBvK,EAAEiK,QAAUhK,EAAEgK,OAqflGkwC,IAAasR,IACf9oD,OAAK8G,EAAK6hD,QAAS,CAAC1qC,EAAGu5B,EAAU94C,MAAOA,MAG1CA,KAAKqmD,aAAe8D,EAEhBA,IAAgBC,IAClB9oD,OAAK8G,EAAK4sC,QAAS,CAACz1B,EAAG4qC,EAAanqD,MAAOA,KAE/C,MAAWmqD,IACT7oD,OAAK8G,EAAKkX,QAAS,CAACC,EAAG4qC,EAAanqD,MAAOA,MA/f9B,IAACrB,EAAGC,CAigBrB,EAyBF,SAASipD,GAA0BroC,EAAYooC,GAE7C,OAAOA,GADapoC,EAAW3lB,KAAO2lB,EAAW3lB,KAAKb,OAAS,GAAM,EAEvE,CAYA,IAAAqxD,GAAe,CACbx/C,GAAI,SAMJy/C,SAAUpE,GAEV/kD,MAAMlH,EAAO6kD,EAAOvlD,GAClB,MAAMolB,EAAS1kB,EAAM0kB,OAAS,IAAIunC,GAAO,CAACp6C,IAAK7R,EAAM6R,IAAKvS,UAASU,UACnE2wB,GAAQtkB,UAAUrM,EAAO0kB,EAAQplB,GACjCqxB,GAAQ2C,OAAOtzB,EAAO0kB,EACxB,EAEAxb,KAAKlJ,GACH2wB,GAAQ8C,UAAUzzB,EAAOA,EAAM0kB,eACxB1kB,EAAM0kB,MACf,EAKA6a,aAAav/B,EAAO6kD,EAAOvlD,GACzB,MAAMolB,EAAS1kB,EAAM0kB,OACrBiM,GAAQtkB,UAAUrM,EAAO0kB,EAAQplB,GACjColB,EAAOplB,QAAUA,CACnB,EAIAyhC,YAAY/gC,GACV,MAAM0kB,EAAS1kB,EAAM0kB,OACrBA,EAAO+nC,cACP/nC,EAAOqpC,gBACT,EAGAuC,WAAWtwD,EAAOwc,GACXA,EAAK09B,QACRl6C,EAAM0kB,OAAOqrC,YAAYvzC,EAAK/T,MAElC,EAEA+D,SAAU,CACR/M,SAAS,EACTC,SAAU,MACV69B,MAAO,SACPjM,UAAU,EACVljB,SAAS,EACTkb,OAAQ,IAGRjE,QAAQC,EAAGC,EAAYb,GACrB,MAAM/V,EAAQ4W,EAAWtW,aACnBshD,EAAK7rC,EAAO1kB,MACduwD,EAAGpqC,iBAAiBxX,IACtB4hD,EAAGxX,KAAKpqC,GACR4W,EAAWhO,QAAS,IAEpBg5C,EAAGvX,KAAKrqC,GACR4W,EAAWhO,QAAS,EAExB,EAEAwjC,QAAS,KACTiV,QAAS,KAET3wD,OAAQ,CACNsK,MAAQkI,GAAQA,EAAI7R,MAAMV,QAAQqK,MAClCkiD,SAAU,GACVx4B,QAAS,GAYT1O,eAAe3kB,GACb,MAAMvB,EAAWuB,EAAM1B,KAAKG,UACrBY,QAAQysD,cAACA,aAAelnC,EAAUuiB,UAAEA,QAAWx9B,kBAAO6mD,EAAerV,aAAEA,IAAiBn7C,EAAM0kB,OAAOplB,QAE5G,OAAOU,EAAMyO,yBAAyBhL,KAAK6L,IACzC,MAAMuV,EAAQvV,EAAKY,WAAWmJ,SAASyyC,EAAgB,OAAIxoD,GACrD8hB,GAAcwO,OAAU/O,EAAMO,aAEpC,MAAO,CACLxlB,KAAMnB,EAAS6Q,EAAKX,OAAOzP,MAC3B4lB,UAAWD,EAAME,gBACjBG,UAAWvb,EACX4N,QAASjI,EAAKunC,QACd8H,QAAS95B,EAAM+5B,eACfiQ,SAAUhqC,EAAM4hB,WAChBwC,eAAgBpkB,EAAM8hB,iBACtBgX,SAAU94B,EAAM44B,gBAChBt4B,WAAYC,EAAYjE,MAAQiE,EAAYlE,QAAU,EACtD8D,YAAaH,EAAMI,YACnBL,WAAYA,GAAcC,EAAMD,WAChCT,SAAUU,EAAMV,SAChBgjB,UAAWA,GAAatiB,EAAMsiB,UAC9BgU,aAAcqV,IAAoBrV,GAAgBt2B,EAAMs2B,cAGxDlsC,aAAcK,EAAKX,MACrB,GACC5I,KACL,GAGFpG,MAAO,CACLgK,MAAQkI,GAAQA,EAAI7R,MAAMV,QAAQqK,MAClClK,SAAS,EACTC,SAAU,SACVE,KAAM,KAIVssC,YAAa,CACX5nB,YAAc3C,IAAUA,EAAK8uC,WAAW,MACxCpxD,OAAQ,CACNilB,YAAc3C,IAAU,CAAC,iBAAkB,SAAU,QAAQoP,SAASpP,MCtsBrE,MAAM+uC,WAAc12B,GAIzBl0B,YAAYqG,GACVkU,QAEAta,KAAK/F,MAAQmM,EAAOnM,MACpB+F,KAAKzG,QAAU6M,EAAO7M,QACtByG,KAAK8L,IAAM1F,EAAO0F,IAClB9L,KAAK4qD,cAAWrtD,EAChByC,KAAKyS,SAAMlV,EACXyC,KAAK2S,YAASpV,EACdyC,KAAK4S,UAAOrV,EACZyC,KAAK0S,WAAQnV,EACbyC,KAAKob,WAAQ7d,EACbyC,KAAKmb,YAAS5d,EACdyC,KAAKrG,cAAW4D,EAChByC,KAAKujB,YAAShmB,EACdyC,KAAKurB,cAAWhuB,CAClB,CAEA7C,OAAOunB,EAAUC,GACf,MAAM9Z,EAAOpI,KAAKzG,QAKlB,GAHAyG,KAAK4S,KAAO,EACZ5S,KAAKyS,IAAM,GAENrK,EAAK1O,QAER,YADAsG,KAAKob,MAAQpb,KAAKmb,OAASnb,KAAK0S,MAAQ1S,KAAK2S,OAAS,GAIxD3S,KAAKob,MAAQpb,KAAK0S,MAAQuP,EAC1BjiB,KAAKmb,OAASnb,KAAK2S,OAASuP,EAE5B,MAAMmf,GAAYt6B,OAAQqB,EAAKvO,MAAQuO,EAAKvO,KAAKb,OAAS,EAC1DgH,KAAK4qD,UAAW/8B,OAAUzlB,EAAKklB,SAC/B,MAAMu9B,EAAWxpB,GAAYhK,QAAOjvB,EAAKgvB,MAAME,WAAat3B,KAAK4qD,SAASzvC,OAEtEnb,KAAKya,eACPza,KAAKmb,OAAS0vC,EAEd7qD,KAAKob,MAAQyvC,CAEjB,CAEApwC,eACE,MAAM6P,EAAMtqB,KAAKzG,QAAQI,SACzB,MAAe,QAAR2wB,GAAyB,WAARA,CAC1B,CAEAwgC,UAAU/wC,GACR,MAAMtH,IAACA,OAAKG,SAAMD,QAAQD,UAAOnZ,GAAWyG,KACtCw3B,EAAQj+B,EAAQi+B,MACtB,IACIvV,EAAU+hB,EAAQC,EADlB7lB,EAAW,EAmBf,OAhBIpe,KAAKya,gBACPupB,GAASE,QAAe1M,EAAO5kB,EAAMF,GACrCuxB,EAASxxB,EAAMsH,EACfkI,EAAWvP,EAAQE,IAEM,SAArBrZ,EAAQI,UACVqqC,EAASpxB,EAAOmH,EAChBkqB,GAASC,QAAe1M,EAAO7kB,EAAQF,GACvC2L,GAAgB,GAAL0D,MAEXkiB,EAAStxB,EAAQqH,EACjBkqB,GAASC,QAAe1M,EAAO/kB,EAAKE,GACpCyL,EAAgB,GAAL0D,KAEbG,EAAWtP,EAASF,GAEf,CAACuxB,SAAQC,SAAQhiB,WAAU7D,WACpC,CAEAtc,OACE,MAAMgK,EAAM9L,KAAK8L,IACX1D,EAAOpI,KAAKzG,QAElB,IAAK6O,EAAK1O,QACR,OAGF,MAAMqxD,GAAW1zB,QAAOjvB,EAAKgvB,MAEvBrd,EADagxC,EAASzzB,WACA,EAAIt3B,KAAK4qD,SAASn4C,KACxCuxB,OAACA,SAAQC,WAAQhiB,WAAU7D,GAAYpe,KAAK8qD,UAAU/wC,IAE5D8pB,OAAW/3B,EAAK1D,EAAKvO,KAAM,EAAG,EAAGkxD,EAAU,CACzCnnD,MAAOwE,EAAKxE,MACZqe,WACA7D,WACAgjB,WAAW3J,QAAmBrvB,EAAKovB,OACnC+J,aAAc,SACde,YAAa,CAAC0B,EAAQC,IAE1B,EAeF,IAAA+mB,GAAe,CACbngD,GAAI,QAMJy/C,SAAUK,GAEVxpD,MAAMlH,EAAO6kD,EAAOvlD,IArBtB,SAAqBU,EAAOwiC,GAC1B,MAAM7iC,EAAQ,IAAI+wD,GAAM,CACtB7+C,IAAK7R,EAAM6R,IACXvS,QAASkjC,EACTxiC,UAGF2wB,GAAQtkB,UAAUrM,EAAOL,EAAO6iC,GAChC7R,GAAQ2C,OAAOtzB,EAAOL,GACtBK,EAAMgxD,WAAarxD,CACrB,CAYIsxD,CAAYjxD,EAAOV,EACrB,EAEA4J,KAAKlJ,GACH,MAAMgxD,EAAahxD,EAAMgxD,WACzBrgC,GAAQ8C,UAAUzzB,EAAOgxD,UAClBhxD,EAAMgxD,UACf,EAEAzxB,aAAav/B,EAAO6kD,EAAOvlD,GACzB,MAAMK,EAAQK,EAAMgxD,WACpBrgC,GAAQtkB,UAAUrM,EAAOL,EAAOL,GAChCK,EAAML,QAAUA,CAClB,EAEAkN,SAAU,CACR+wB,MAAO,SACP99B,SAAS,EACT09B,KAAM,CACJ7T,OAAQ,QAEVgI,UAAU,EACV+B,QAAS,GACT3zB,SAAU,MACVE,KAAM,GACN0pB,OAAQ,KAGV+hB,cAAe,CACb1hC,MAAO,SAGTuiC,YAAa,CACX5nB,aAAa,EACbC,YAAY,IChKhB,MAAM9gB,GAAM,IAAIytD,QAEhB,IAAAC,GAAe,CACbvgD,GAAI,WAEJ1J,MAAMlH,EAAO6kD,EAAOvlD,GAClB,MAAMK,EAAQ,IAAI+wD,GAAM,CACtB7+C,IAAK7R,EAAM6R,IACXvS,UACAU,UAGF2wB,GAAQtkB,UAAUrM,EAAOL,EAAOL,GAChCqxB,GAAQ2C,OAAOtzB,EAAOL,GACtB8D,GAAI8E,IAAIvI,EAAOL,EACjB,EAEAuJ,KAAKlJ,GACH2wB,GAAQ8C,UAAUzzB,EAAOyD,GAAI2E,IAAIpI,IACjCyD,GAAI4F,OAAOrJ,EACb,EAEAu/B,aAAav/B,EAAO6kD,EAAOvlD,GACzB,MAAMK,EAAQ8D,GAAI2E,IAAIpI,GACtB2wB,GAAQtkB,UAAUrM,EAAOL,EAAOL,GAChCK,EAAML,QAAUA,CAClB,EAEAkN,SAAU,CACR+wB,MAAO,SACP99B,SAAS,EACT09B,KAAM,CACJ7T,OAAQ,UAEVgI,UAAU,EACV+B,QAAS,EACT3zB,SAAU,MACVE,KAAM,GACN0pB,OAAQ,MAGV+hB,cAAe,CACb1hC,MAAO,SAGTuiC,YAAa,CACX5nB,aAAa,EACbC,YAAY,IClChB,MAAM6sC,GAAc,CAIlBC,QAAQ1pD,GACN,IAAKA,EAAM5I,OACT,OAAO,EAGT,IAAIE,EAAG08B,EACHloB,EAAI,EACJvT,EAAI,EACJ+V,EAAQ,EAEZ,IAAKhX,EAAI,EAAG08B,EAAMh0B,EAAM5I,OAAQE,EAAI08B,IAAO18B,EAAG,CAC5C,MAAM0uB,EAAKhmB,EAAM1I,GAAGma,QACpB,GAAIuU,GAAMA,EAAGuM,WAAY,CACvB,MAAM7J,EAAM1C,EAAGsM,kBACfxmB,GAAK4c,EAAI5c,EACTvT,GAAKmwB,EAAInwB,IACP+V,CACH,CACH,CAEA,MAAO,CACLxC,EAAGA,EAAIwC,EACP/V,EAAGA,EAAI+V,EAEX,EAKAga,QAAQtoB,EAAO2pD,GACb,IAAK3pD,EAAM5I,OACT,OAAO,EAGT,IAGIE,EAAG08B,EAAK41B,EAHR99C,EAAI69C,EAAc79C,EAClBvT,EAAIoxD,EAAcpxD,EAClBkvB,EAAc3X,OAAOC,kBAGzB,IAAKzY,EAAI,EAAG08B,EAAMh0B,EAAM5I,OAAQE,EAAI08B,IAAO18B,EAAG,CAC5C,MAAM0uB,EAAKhmB,EAAM1I,GAAGma,QACpB,GAAIuU,GAAMA,EAAGuM,WAAY,CACvB,MAAMjZ,EAAS0M,EAAG0B,iBACZy2B,GAAI0L,QAAsBF,EAAerwC,GAE3C6kC,EAAI12B,IACNA,EAAc02B,EACdyL,EAAiB5jC,EAEpB,CACH,CAEA,GAAI4jC,EAAgB,CAClB,MAAMrvD,EAAKqvD,EAAet3B,kBAC1BxmB,EAAIvR,EAAGuR,EACPvT,EAAIgC,EAAGhC,CACR,CAED,MAAO,CACLuT,IACAvT,IAEJ,GAIF,SAASuxD,GAAa5yC,EAAM6yC,GAU1B,OATIA,KACE5kD,OAAQ4kD,GAEVz8C,MAAM2X,UAAU5tB,KAAK2yD,MAAM9yC,EAAM6yC,GAEjC7yC,EAAK7f,KAAK0yD,IAIP7yC,CACT,CAQA,SAAS+yC,GAAcC,GACrB,OAAoB,iBAARA,GAAoBA,aAAeC,SAAWD,EAAI1vD,QAAQ,OAAQ,EACrE0vD,EAAIpmB,MAAM,MAEZomB,CACT,CASA,SAASE,GAAkB/xD,EAAO4H,GAChC,MAAMwR,QAACA,EAAOnK,aAAEA,QAAcN,GAAS/G,EACjCsI,EAAalQ,EAAMyU,eAAexF,GAAciB,YAChDhR,MAACA,QAAOmD,GAAS6N,EAAWkI,iBAAiBzJ,GAEnD,MAAO,CACL3O,QACAd,QACAiR,OAAQD,EAAW4G,UAAUnI,GAC7BiL,IAAK5Z,EAAM1B,KAAKG,SAASwQ,GAAc3Q,KAAKqQ,GAC5CqjD,eAAgB3vD,EAChBiR,QAASpD,EAAWqD,aACpBoG,UAAWhL,EACXM,eACAmK,UAEJ,CAKA,SAAS64C,GAAeC,EAAS5yD,GAC/B,MAAMuS,EAAMqgD,EAAQlyD,MAAM6R,KACpBsgD,KAACA,EAAIC,OAAEA,QAAQzyD,GAASuyD,GACxBrG,SAACA,YAAUD,GAAatsD,EACxB+yD,GAAWj1B,QAAO99B,EAAQ+yD,UAC1B5C,GAAYryB,QAAO99B,EAAQmwD,WAC3B6C,GAAal1B,QAAO99B,EAAQgzD,YAC5BC,EAAiB5yD,EAAMZ,OACvByzD,EAAkBJ,EAAOrzD,OACzB0zD,EAAoBN,EAAKpzD,OAEzBs0B,GAAUO,OAAUt0B,EAAQ+zB,SAClC,IAAInS,EAASmS,EAAQnS,OACjBC,EAAQ,EAGRuxC,EAAqBP,EAAKtpD,QAAO,CAACoN,EAAO08C,IAAa18C,EAAQ08C,EAASC,OAAO7zD,OAAS4zD,EAASE,MAAM9zD,OAAS4zD,EAASG,MAAM/zD,QAAQ,GAQ1I,GAPA2zD,GAAsBR,EAAQa,WAAWh0D,OAASmzD,EAAQc,UAAUj0D,OAEhEwzD,IACFrxC,GAAUqxC,EAAiB9C,EAAUpyB,YACnCk1B,EAAiB,GAAKjzD,EAAQ2zD,aAC/B3zD,EAAQ4zD,mBAEPR,EAAoB,CAGtBxxC,GAAUuxC,GADanzD,EAAQ6zD,cAAgBnsD,KAAKgC,IAAI4iD,EAAWyG,EAASh1B,YAAcg1B,EAASh1B,aAEjGq1B,EAAqBD,GAAqBJ,EAASh1B,YACnDq1B,EAAqB,GAAKpzD,EAAQ8zD,WACrC,CACGZ,IACFtxC,GAAU5hB,EAAQ+zD,gBACjBb,EAAkBF,EAAWj1B,YAC5Bm1B,EAAkB,GAAKlzD,EAAQg0D,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS9pC,GAC5BvI,EAAQna,KAAKgC,IAAImY,EAAOtP,EAAIq7C,YAAYxjC,GAAMvI,MAAQoyC,EACxD,EA+BA,OA7BA1hD,EAAI22B,OAEJ32B,EAAIsrB,KAAOsyB,EAAUvrB,QACrB3P,OAAK29B,EAAQvyD,MAAO6zD,GAGpB3hD,EAAIsrB,KAAOk1B,EAASnuB,QACpB3P,OAAK29B,EAAQa,WAAW11C,OAAO60C,EAAQc,WAAYQ,GAGnDD,EAAej0D,EAAQ6zD,cAAiBtH,EAAW,EAAIvsD,EAAQsyB,WAAc,GAC7E2C,OAAK49B,GAAOQ,KACVp+B,OAAKo+B,EAASC,OAAQY,IACtBj/B,OAAKo+B,EAASE,MAAOW,IACrBj/B,OAAKo+B,EAASG,MAAOU,MAIvBD,EAAe,EAGf1hD,EAAIsrB,KAAOm1B,EAAWpuB,QACtB3P,OAAK29B,EAAQE,OAAQoB,GAErB3hD,EAAI62B,UAGJvnB,GAASkS,EAAQlS,MAEV,CAACA,QAAOD,SACjB,CAyBA,SAASuyC,GAAgBzzD,EAAOV,EAASyO,EAAM2lD,GAC7C,MAAMjgD,EAACA,QAAG0N,GAASpT,GACZoT,MAAOwyC,EAAYz6C,WAAWP,KAACA,EAAIF,MAAEA,IAAUzY,EACtD,IAAI4zD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAASngD,IAAMkF,EAAOF,GAAS,EAAI,OAAS,QACnChF,GAAK0N,EAAQ,EACtByyC,EAAS,OACAngD,GAAKkgD,EAAaxyC,EAAQ,IACnCyyC,EAAS,SAtBb,SAA6BA,EAAQ5zD,EAAOV,EAASyO,GACnD,MAAM0F,EAACA,QAAG0N,GAASpT,EACb8lD,EAAQv0D,EAAQw0D,UAAYx0D,EAAQy0D,aAC1C,MAAe,SAAXH,GAAqBngD,EAAI0N,EAAQ0yC,EAAQ7zD,EAAMmhB,OAIpC,UAAXyyC,GAAsBngD,EAAI0N,EAAQ0yC,EAAQ,QAA9C,CAGF,CAeMG,CAAoBJ,EAAQ5zD,EAAOV,EAASyO,KAC9C6lD,EAAS,UAGJA,CACT,CAKA,SAASK,GAAmBj0D,EAAOV,EAASyO,GAC1C,MAAM2lD,EAAS3lD,EAAK2lD,QAAUp0D,EAAQo0D,QA/CxC,SAAyB1zD,EAAO+N,GAC9B,MAAM7N,EAACA,SAAGghB,GAAUnT,EAEpB,OAAI7N,EAAIghB,EAAS,EACR,MACEhhB,EAAKF,EAAMkhB,OAASA,EAAS,EAC/B,SAEF,QACT,CAsCkDgzC,CAAgBl0D,EAAO+N,GAEvE,MAAO,CACL6lD,OAAQ7lD,EAAK6lD,QAAUt0D,EAAQs0D,QAAUH,GAAgBzzD,EAAOV,EAASyO,EAAM2lD,GAC/EA,SAEJ,CA4BA,SAASS,GAAmB70D,EAASyO,EAAMqmD,EAAWp0D,GACpD,MAAM8zD,UAACA,EAASC,aAAEA,eAAcM,GAAgB/0D,GAC1Cs0D,OAACA,SAAQF,GAAUU,EACnBE,EAAiBR,EAAYC,GAC7B9Q,QAACA,EAAOC,SAAEA,EAAQC,WAAEA,cAAYC,IAAeN,QAAcuR,GAEnE,IAAI5gD,EAhCN,SAAgB1F,EAAM6lD,GACpB,IAAIngD,EAACA,QAAG0N,GAASpT,EAMjB,MALe,UAAX6lD,EACFngD,GAAK0N,EACe,WAAXyyC,IACTngD,GAAM0N,EAAQ,GAET1N,CACT,CAwBU8gD,CAAOxmD,EAAM6lD,GACrB,MAAM1zD,EAvBR,SAAgB6N,EAAM2lD,EAAQY,GAE5B,IAAIp0D,EAACA,SAAGghB,GAAUnT,EAQlB,MAPe,QAAX2lD,EACFxzD,GAAKo0D,EAELp0D,GADoB,WAAXwzD,EACJxyC,EAASozC,EAERpzC,EAAS,EAEVhhB,CACT,CAYYs0D,CAAOzmD,EAAM2lD,EAAQY,GAc/B,MAZe,WAAXZ,EACa,SAAXE,EACFngD,GAAK6gD,EACe,UAAXV,IACTngD,GAAK6gD,GAEa,SAAXV,EACTngD,GAAKzM,KAAKgC,IAAIi6C,EAASE,GAAc2Q,EACjB,UAAXF,IACTngD,GAAKzM,KAAKgC,IAAIk6C,EAAUE,GAAe0Q,GAGlC,CACLrgD,GAAG4uB,OAAY5uB,EAAG,EAAGzT,EAAMmhB,MAAQpT,EAAKoT,OACxCjhB,GAAGmiC,OAAYniC,EAAG,EAAGF,EAAMkhB,OAASnT,EAAKmT,QAE7C,CAEA,SAASuzC,GAAYvC,EAAS30B,EAAOj+B,GACnC,MAAM+zB,GAAUO,OAAUt0B,EAAQ+zB,SAElC,MAAiB,WAAVkK,EACH20B,EAAQz+C,EAAIy+C,EAAQ/wC,MAAQ,EAClB,UAAVoc,EACE20B,EAAQz+C,EAAIy+C,EAAQ/wC,MAAQkS,EAAQ5a,MACpCy5C,EAAQz+C,EAAI4f,EAAQ1a,IAC5B,CAKA,SAAS+7C,GAAwBnzB,GAC/B,OAAOkwB,GAAa,GAAIG,GAAcrwB,GACxC,CAUA,SAASozB,GAAkBnuD,EAAWgT,GACpC,MAAMmxB,EAAWnxB,GAAWA,EAAQlG,SAAWkG,EAAQlG,QAAQ4+C,SAAW14C,EAAQlG,QAAQ4+C,QAAQ1rD,UAClG,OAAOmkC,EAAWnkC,EAAUmkC,SAASA,GAAYnkC,CACnD,CAEA,MAAMouD,GAAmB,CAEvBC,YAAaC,KACbn1D,MAAMo1D,GACJ,GAAIA,EAAah2D,OAAS,EAAG,CAC3B,MAAM6I,EAAOmtD,EAAa,GACpB11D,EAASuI,EAAK5H,MAAM1B,KAAKe,OACzB21D,EAAa31D,EAASA,EAAON,OAAS,EAE5C,GAAIgH,MAAQA,KAAKzG,SAAiC,YAAtByG,KAAKzG,QAAQ0P,KACvC,OAAOpH,EAAK0L,QAAQpU,OAAS,GACxB,GAAI0I,EAAK1I,MACd,OAAO0I,EAAK1I,MACP,GAAI81D,EAAa,GAAKptD,EAAK+R,UAAYq7C,EAC5C,OAAO31D,EAAOuI,EAAK+R,UAEtB,CAED,MAAO,EACT,EACAs7C,WAAYH,KAGZ/B,WAAY+B,KAGZI,YAAaJ,KACb51D,MAAMi2D,GACJ,GAAIpvD,MAAQA,KAAKzG,SAAiC,YAAtByG,KAAKzG,QAAQ0P,KACvC,OAAOmmD,EAAYj2D,MAAQ,KAAOi2D,EAAYnD,gBAAkBmD,EAAYnD,eAG9E,IAAI9yD,EAAQi2D,EAAY7hD,QAAQpU,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAMmD,EAAQ8yD,EAAYnD,eAI1B,OAHKpxC,OAAcve,KACjBnD,GAASmD,GAEJnD,CACT,EACAk2D,WAAWD,GACT,MACM71D,EADO61D,EAAYn1D,MAAMyU,eAAe0gD,EAAYlmD,cACrCiB,WAAWmJ,SAAS87C,EAAYx7C,WACrD,MAAO,CACLsL,YAAa3lB,EAAQ2lB,YACrBF,gBAAiBzlB,EAAQylB,gBACzBK,YAAa9lB,EAAQ8lB,YACrBqhB,WAAYnnC,EAAQmnC,WACpBE,iBAAkBrnC,EAAQqnC,iBAC1BwU,aAAc,EAElB,EACAka,iBACE,OAAOtvD,KAAKzG,QAAQg2D,SACtB,EACAC,gBAAgBJ,GACd,MACM71D,EADO61D,EAAYn1D,MAAMyU,eAAe0gD,EAAYlmD,cACrCiB,WAAWmJ,SAAS87C,EAAYx7C,WACrD,MAAO,CACLiL,WAAYtlB,EAAQslB,WACpBT,SAAU7kB,EAAQ6kB,SAEtB,EACAqxC,WAAYV,KAGZ9B,UAAW8B,KAGXW,aAAcX,KACd1C,OAAQ0C,KACRY,YAAaZ,MAYf,SAASa,GAA2BnvD,EAAWmb,EAAM9P,EAAK07B,GACxD,MAAMpS,EAAS30B,EAAUmb,GAAMta,KAAKwK,EAAK07B,GAEzC,YAAsB,IAAXpS,EACFy5B,GAAiBjzC,GAAMta,KAAKwK,EAAK07B,GAGnCpS,CACT,CAEO,MAAMy6B,WAAgB57B,GAK3BroB,mBAAqBy/C,GAErBtrD,YAAYqG,GACVkU,QAEAta,KAAK8vD,QAAU,EACf9vD,KAAK+B,QAAU,GACf/B,KAAK+vD,oBAAiBxyD,EACtByC,KAAKgwD,WAAQzyD,EACbyC,KAAKiwD,uBAAoB1yD,EACzByC,KAAKkwD,cAAgB,GACrBlwD,KAAKsH,iBAAc/J,EACnByC,KAAK0M,cAAWnP,EAChByC,KAAK/F,MAAQmM,EAAOnM,MACpB+F,KAAKzG,QAAU6M,EAAO7M,QACtByG,KAAKmwD,gBAAa5yD,EAClByC,KAAKpG,WAAQ2D,EACbyC,KAAKgtD,gBAAazvD,EAClByC,KAAKosD,UAAO7uD,EACZyC,KAAKitD,eAAY1vD,EACjByC,KAAKqsD,YAAS9uD,EACdyC,KAAK6tD,YAAStwD,EACdyC,KAAK2tD,YAASpwD,EACdyC,KAAK0N,OAAInQ,EACTyC,KAAK7F,OAAIoD,EACTyC,KAAKmb,YAAS5d,EACdyC,KAAKob,WAAQ7d,EACbyC,KAAKowD,YAAS7yD,EACdyC,KAAKqwD,YAAS9yD,EAGdyC,KAAKswD,iBAAc/yD,EACnByC,KAAKuwD,sBAAmBhzD,EACxByC,KAAKwwD,qBAAkBjzD,CACzB,CAEAuP,WAAWvT,GACTyG,KAAKzG,QAAUA,EACfyG,KAAKiwD,uBAAoB1yD,EACzByC,KAAK0M,cAAWnP,CAClB,CAKAoX,qBACE,MAAMlJ,EAASzL,KAAKiwD,kBAEpB,GAAIxkD,EACF,OAAOA,EAGT,MAAMxR,EAAQ+F,KAAK/F,MACbV,EAAUyG,KAAKzG,QAAQu/B,WAAW94B,KAAKgQ,cACvC5H,EAAO7O,EAAQ47B,SAAWl7B,EAAMV,QAAQmN,WAAanN,EAAQiO,WAC7DA,EAAa,IAAIrB,EAAWnG,KAAK/F,MAAOmO,GAK9C,OAJIA,EAAK0M,aACP9U,KAAKiwD,kBAAoBp0D,OAAO6Y,OAAOlN,IAGlCA,CACT,CAKAwI,aACE,OAAOhQ,KAAK0M,WACZ1M,KAAK0M,UAtLqBgH,EAsLW1T,KAAK/F,MAAM+V,aAtLdm8C,EAsL4BnsD,KAtLnBgvD,EAsLyBhvD,KAAKkwD,eArLpEv8C,OAAcD,EAAQ,CAC3By4C,UACA6C,eACA31D,KAAM,cAJV,IAA8Bqa,EAAQy4C,EAAS6C,CAuL7C,CAEAyB,SAASh9C,EAASla,GAChB,MAAMkH,UAACA,GAAalH,EAEdu1D,EAAcc,GAA2BnvD,EAAW,cAAeT,KAAMyT,GACzE7Z,EAAQg2D,GAA2BnvD,EAAW,QAAST,KAAMyT,GAC7Dy7C,EAAaU,GAA2BnvD,EAAW,aAAcT,KAAMyT,GAE7E,IAAIq5C,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAciD,IAC1ChC,EAAQpB,GAAaoB,EAAOjB,GAAcjyD,IAC1CkzD,EAAQpB,GAAaoB,EAAOjB,GAAcqD,IAEnCpC,CACT,CAEA4D,cAAc1B,EAAcz1D,GAC1B,OAAOo1D,GACLiB,GAA2Br2D,EAAQkH,UAAW,aAAcT,KAAMgvD,GAEtE,CAEA2B,QAAQ3B,EAAcz1D,GACpB,MAAMkH,UAACA,GAAalH,EACdq3D,EAAY,GAgBlB,OAdApiC,OAAKwgC,GAAev7C,IAClB,MAAMm5C,EAAW,CACfC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEH8D,EAASjC,GAAkBnuD,EAAWgT,GAC5Ci4C,GAAakB,EAASC,OAAQhB,GAAc+D,GAA2BiB,EAAQ,cAAe7wD,KAAMyT,KACpGi4C,GAAakB,EAASE,MAAO8C,GAA2BiB,EAAQ,QAAS7wD,KAAMyT,IAC/Ei4C,GAAakB,EAASG,MAAOlB,GAAc+D,GAA2BiB,EAAQ,aAAc7wD,KAAMyT,KAElGm9C,EAAU33D,KAAK2zD,MAGVgE,CACT,CAEAE,aAAa9B,EAAcz1D,GACzB,OAAOo1D,GACLiB,GAA2Br2D,EAAQkH,UAAW,YAAaT,KAAMgvD,GAErE,CAGA+B,UAAU/B,EAAcz1D,GACtB,MAAMkH,UAACA,GAAalH,EAEdm2D,EAAeE,GAA2BnvD,EAAW,eAAgBT,KAAMgvD,GAC3E3C,EAASuD,GAA2BnvD,EAAW,SAAUT,KAAMgvD,GAC/DW,EAAcC,GAA2BnvD,EAAW,cAAeT,KAAMgvD,GAE/E,IAAIlC,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAc6D,IAC1C5C,EAAQpB,GAAaoB,EAAOjB,GAAcQ,IAC1CS,EAAQpB,GAAaoB,EAAOjB,GAAc8D,IAEnC7C,CACT,CAKAkE,aAAaz3D,GACX,MAAMkM,EAASzF,KAAK+B,QACdxJ,EAAOyH,KAAK/F,MAAM1B,KAClB+3D,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIt3D,EAAG08B,EADHo5B,EAAe,GAGnB,IAAK91D,EAAI,EAAG08B,EAAMnwB,EAAOzM,OAAQE,EAAI08B,IAAO18B,EAC1C81D,EAAa/1D,KAAK+yD,GAAkBhsD,KAAK/F,MAAOwL,EAAOvM,KAyBzD,OArBIK,EAAQ4R,SACV6jD,EAAeA,EAAa7jD,QAAO,CAACkI,EAASzK,EAAOyhB,IAAU9wB,EAAQ4R,OAAOkI,EAASzK,EAAOyhB,EAAO9xB,MAIlGgB,EAAQ03D,WACVjC,EAAeA,EAAahzD,MAAK,CAAC2C,EAAGC,IAAMrF,EAAQ03D,SAAStyD,EAAGC,EAAGrG,OAIpEi2B,OAAKwgC,GAAev7C,IAClB,MAAMo9C,EAASjC,GAAkBr1D,EAAQkH,UAAWgT,GACpD68C,EAAYr3D,KAAK22D,GAA2BiB,EAAQ,aAAc7wD,KAAMyT,IACxE88C,EAAiBt3D,KAAK22D,GAA2BiB,EAAQ,kBAAmB7wD,KAAMyT,IAClF+8C,EAAgBv3D,KAAK22D,GAA2BiB,EAAQ,iBAAkB7wD,KAAMyT,OAGlFzT,KAAKswD,YAAcA,EACnBtwD,KAAKuwD,iBAAmBA,EACxBvwD,KAAKwwD,gBAAkBA,EACvBxwD,KAAKmwD,WAAanB,EACXA,CACT,CAEAt0D,OAAOwyB,EAASinB,GACd,MAAM56C,EAAUyG,KAAKzG,QAAQu/B,WAAW94B,KAAKgQ,cACvCvK,EAASzF,KAAK+B,QACpB,IAAIiF,EACAgoD,EAAe,GAEnB,GAAKvpD,EAAOzM,OAML,CACL,MAAMW,EAAW0xD,GAAY9xD,EAAQI,UAAU2H,KAAKtB,KAAMyF,EAAQzF,KAAK+vD,gBACvEf,EAAehvD,KAAKgxD,aAAaz3D,GAEjCyG,KAAKpG,MAAQoG,KAAKywD,SAASzB,EAAcz1D,GACzCyG,KAAKgtD,WAAahtD,KAAK0wD,cAAc1B,EAAcz1D,GACnDyG,KAAKosD,KAAOpsD,KAAK2wD,QAAQ3B,EAAcz1D,GACvCyG,KAAKitD,UAAYjtD,KAAK8wD,aAAa9B,EAAcz1D,GACjDyG,KAAKqsD,OAASrsD,KAAK+wD,UAAU/B,EAAcz1D,GAE3C,MAAMyO,EAAOhI,KAAKgwD,MAAQ9D,GAAelsD,KAAMzG,GACzC23D,EAAkBr1D,OAAOwL,OAAO,GAAI1N,EAAUqO,GAC9CqmD,EAAYH,GAAmBluD,KAAK/F,MAAOV,EAAS23D,GACpDC,EAAkB/C,GAAmB70D,EAAS23D,EAAiB7C,EAAWruD,KAAK/F,OAErF+F,KAAK6tD,OAASQ,EAAUR,OACxB7tD,KAAK2tD,OAASU,EAAUV,OAExB3mD,EAAa,CACX8oD,QAAS,EACTpiD,EAAGyjD,EAAgBzjD,EACnBvT,EAAGg3D,EAAgBh3D,EACnBihB,MAAOpT,EAAKoT,MACZD,OAAQnT,EAAKmT,OACbi1C,OAAQz2D,EAAS+T,EACjB2iD,OAAQ12D,EAASQ,EAEpB,MAhCsB,IAAjB6F,KAAK8vD,UACP9oD,EAAa,CACX8oD,QAAS,IAgCf9vD,KAAKkwD,cAAgBlB,EACrBhvD,KAAK0M,cAAWnP,EAEZyJ,GACFhH,KAAK2U,qBAAqBja,OAAOsF,KAAMgH,GAGrCkmB,GAAW3zB,EAAQ63D,UACrB73D,EAAQ63D,SAAS9vD,KAAKtB,KAAM,CAAC/F,MAAO+F,KAAK/F,MAAOkyD,QAASnsD,KAAMm0C,UAEnE,CAEAkd,UAAUC,EAAcxlD,EAAK9D,EAAMzO,GACjC,MAAMg4D,EAAgBvxD,KAAKwxD,iBAAiBF,EAActpD,EAAMzO,GAEhEuS,EAAIu3B,OAAOkuB,EAAcvxB,GAAIuxB,EAActxB,IAC3Cn0B,EAAIu3B,OAAOkuB,EAAcrxB,GAAIqxB,EAAcpxB,IAC3Cr0B,EAAIu3B,OAAOkuB,EAAcE,GAAIF,EAAcG,GAC7C,CAEAF,iBAAiBF,EAActpD,EAAMzO,GACnC,MAAMs0D,OAACA,EAAMF,OAAEA,GAAU3tD,MACnB+tD,UAACA,eAAWO,GAAgB/0D,GAC5B2jD,QAACA,EAAOC,SAAEA,EAAQC,WAAEA,cAAYC,IAAeN,QAAcuR,IAC5D5gD,EAAGikD,EAAKx3D,EAAGy3D,GAAON,GACnBl2C,MAACA,SAAOD,GAAUnT,EACxB,IAAIg4B,EAAIE,EAAIuxB,EAAIxxB,EAAIE,EAAIuxB,EAgDxB,MA9Ce,WAAX/D,GACFxtB,EAAKyxB,EAAOz2C,EAAS,EAEN,SAAX0yC,GACF7tB,EAAK2xB,EACLzxB,EAAKF,EAAK+tB,EAGV9tB,EAAKE,EAAK4tB,EACV2D,EAAKvxB,EAAK4tB,IAEV/tB,EAAK2xB,EAAMv2C,EACX8kB,EAAKF,EAAK+tB,EAGV9tB,EAAKE,EAAK4tB,EACV2D,EAAKvxB,EAAK4tB,GAGZ0D,EAAKzxB,IAGHE,EADa,SAAX2tB,EACG8D,EAAM1wD,KAAKgC,IAAIi6C,EAASE,GAAe2Q,EACxB,UAAXF,EACJ8D,EAAMv2C,EAAQna,KAAKgC,IAAIk6C,EAAUE,GAAe0Q,EAEhD/tD,KAAKowD,OAGG,QAAXzC,GACF1tB,EAAK2xB,EACLzxB,EAAKF,EAAK8tB,EAGV/tB,EAAKE,EAAK6tB,EACV0D,EAAKvxB,EAAK6tB,IAEV9tB,EAAK2xB,EAAMz2C,EACXglB,EAAKF,EAAK8tB,EAGV/tB,EAAKE,EAAK6tB,EACV0D,EAAKvxB,EAAK6tB,GAEZ2D,EAAKzxB,GAEA,CAACD,KAAIE,KAAIuxB,KAAIxxB,KAAIE,KAAIuxB,KAC9B,CAEA3tB,UAAU8tB,EAAI/lD,EAAKvS,GACjB,MAAMK,EAAQoG,KAAKpG,MACbZ,EAASY,EAAMZ,OACrB,IAAI0wD,EAAWwD,EAAch0D,EAE7B,GAAIF,EAAQ,CACV,MAAMkvD,GAAYC,QAAc5uD,EAAQ0uD,IAAKjoD,KAAK0N,EAAG1N,KAAKob,OAa1D,IAXAy2C,EAAGnkD,EAAIghD,GAAY1uD,KAAMzG,EAAQg+B,WAAYh+B,GAE7CuS,EAAIs1B,UAAY8mB,EAAU9mB,UAAU7nC,EAAQg+B,YAC5CzrB,EAAIy1B,aAAe,SAEnBmoB,GAAYryB,QAAO99B,EAAQmwD,WAC3BwD,EAAe3zD,EAAQ2zD,aAEvBphD,EAAIiT,UAAYxlB,EAAQu4D,WACxBhmD,EAAIsrB,KAAOsyB,EAAUvrB,OAEhBjlC,EAAI,EAAGA,EAAIF,IAAUE,EACxB4S,EAAI09C,SAAS5vD,EAAMV,GAAIgvD,EAAUx6C,EAAEmkD,EAAGnkD,GAAImkD,EAAG13D,EAAIuvD,EAAUpyB,WAAa,GACxEu6B,EAAG13D,GAAKuvD,EAAUpyB,WAAa41B,EAE3Bh0D,EAAI,IAAMF,IACZ64D,EAAG13D,GAAKZ,EAAQ4zD,kBAAoBD,EAGzC,CACH,CAKA6E,cAAcjmD,EAAK+lD,EAAI34D,EAAGgvD,EAAW3uD,GACnC,MAAM+2D,EAActwD,KAAKswD,YAAYp3D,GAC/Bs2D,EAAkBxvD,KAAKuwD,iBAAiBr3D,IACxC2sD,UAACA,EAASC,SAAEA,aAAUj6B,GAActyB,EACpC+yD,GAAWj1B,QAAO99B,EAAQ+yD,UAC1B0F,EAAStD,GAAY1uD,KAAM,OAAQzG,GACnC04D,EAAY/J,EAAUx6C,EAAEskD,GACxBE,EAAUrM,EAAYyG,EAASh1B,YAAcg1B,EAASh1B,WAAauuB,GAAa,EAAI,EACpFsM,EAASN,EAAG13D,EAAI+3D,EAEtB,GAAI34D,EAAQwsD,cAAe,CACzB,MAAMgD,EAAc,CAClBrrC,OAAQzc,KAAKC,IAAI4kD,EAAUD,GAAa,EACxChnC,WAAY2wC,EAAgB3wC,WAC5BT,SAAUoxC,EAAgBpxC,SAC1BiB,YAAa,GAITwD,EAAUqlC,EAAUG,WAAW4J,EAAWnM,GAAYA,EAAW,EACjEhjC,EAAUqvC,EAAStM,EAAY,EAGrC/5C,EAAImT,YAAc1lB,EAAQ64D,mBAC1BtmD,EAAIiT,UAAYxlB,EAAQ64D,oBACxBhW,QAAUtwC,EAAKi9C,EAAalmC,EAASC,GAGrChX,EAAImT,YAAcqxC,EAAYpxC,YAC9BpT,EAAIiT,UAAYuxC,EAAYtxC,iBAC5Bo9B,QAAUtwC,EAAKi9C,EAAalmC,EAASC,EAChC,MAELhX,EAAIsT,WAAY7Y,OAAS+pD,EAAYjxC,aAAepe,KAAKgC,OAAOpH,OAAOqL,OAAOopD,EAAYjxC,cAAiBixC,EAAYjxC,aAAe,EACtIvT,EAAImT,YAAcqxC,EAAYpxC,YAC9BpT,EAAIm3B,YAAYqtB,EAAY5vB,YAAc,IAC1C50B,EAAIo3B,eAAiBotB,EAAY1vB,kBAAoB,EAGrD,MAAMyxB,EAASnK,EAAUG,WAAW4J,EAAWnM,EAAWj6B,GACpDymC,EAASpK,EAAUG,WAAWH,EAAUe,MAAMgJ,EAAW,GAAInM,EAAWj6B,EAAa,GACrFupB,GAAe2H,QAAcuT,EAAYlb,cAE3Cv5C,OAAOqL,OAAOkuC,GAAchM,MAAK9vB,GAAW,IAANA,KACxCxN,EAAIq3B,YACJr3B,EAAIiT,UAAYxlB,EAAQ64D,oBACxBpU,QAAmBlyC,EAAK,CACtB4B,EAAG2kD,EACHl4D,EAAGg4D,EACH9lC,EAAGy5B,EACHv5B,EAAGs5B,EACHnoC,OAAQ03B,IAEVtpC,EAAIoB,OACJpB,EAAIw3B,SAGJx3B,EAAIiT,UAAYuxC,EAAYtxC,gBAC5BlT,EAAIq3B,aACJ6a,QAAmBlyC,EAAK,CACtB4B,EAAG4kD,EACHn4D,EAAGg4D,EAAS,EACZ9lC,EAAGy5B,EAAW,EACdv5B,EAAGs5B,EAAY,EACfnoC,OAAQ03B,IAEVtpC,EAAIoB,SAGJpB,EAAIiT,UAAYxlB,EAAQ64D,mBACxBtmD,EAAI42B,SAAS2vB,EAAQF,EAAQrM,EAAUD,GACvC/5C,EAAIymD,WAAWF,EAAQF,EAAQrM,EAAUD,GAEzC/5C,EAAIiT,UAAYuxC,EAAYtxC,gBAC5BlT,EAAI42B,SAAS4vB,EAAQH,EAAS,EAAGrM,EAAW,EAAGD,EAAY,GAE9D,CAGD/5C,EAAIiT,UAAY/e,KAAKwwD,gBAAgBt3D,EACvC,CAEAs5D,SAASX,EAAI/lD,EAAKvS,GAChB,MAAM6yD,KAACA,GAAQpsD,MACTqtD,YAACA,YAAaoF,gBAAWrF,YAAevH,WAAWC,aAAUj6B,GAActyB,EAC3E+yD,GAAWj1B,QAAO99B,EAAQ+yD,UAChC,IAAIoG,EAAiBpG,EAASh1B,WAC1Bq7B,EAAe,EAEnB,MAAMzK,GAAYC,QAAc5uD,EAAQ0uD,IAAKjoD,KAAK0N,EAAG1N,KAAKob,OAEpDw3C,EAAiB,SAASjvC,GAC9B7X,EAAI09C,SAAS7lC,EAAMukC,EAAUx6C,EAAEmkD,EAAGnkD,EAAIilD,GAAed,EAAG13D,EAAIu4D,EAAiB,GAC7Eb,EAAG13D,GAAKu4D,EAAiBrF,CAC3B,EAEMwF,EAA0B3K,EAAU9mB,UAAUqxB,GACpD,IAAI7F,EAAUkG,EAAWhG,EAAO5zD,EAAGivB,EAAGxf,EAAMi1B,EAiB5C,IAfA9xB,EAAIs1B,UAAYqxB,EAChB3mD,EAAIy1B,aAAe,SACnBz1B,EAAIsrB,KAAOk1B,EAASnuB,OAEpB0zB,EAAGnkD,EAAIghD,GAAY1uD,KAAM6yD,EAAyBt5D,GAGlDuS,EAAIiT,UAAYxlB,EAAQg2D,WACxB/gC,OAAKxuB,KAAKgtD,WAAY4F,GAEtBD,EAAevF,GAA6C,UAA5ByF,EACd,WAAdJ,EAA0B3M,EAAW,EAAIj6B,EAAei6B,EAAW,EAAIj6B,EACvE,EAGC3yB,EAAI,EAAGyP,EAAOyjD,EAAKpzD,OAAQE,EAAIyP,IAAQzP,EAAG,CAc7C,IAbA0zD,EAAWR,EAAKlzD,GAChB45D,EAAY9yD,KAAKwwD,gBAAgBt3D,GAEjC4S,EAAIiT,UAAY+zC,GAChBtkC,OAAKo+B,EAASC,OAAQ+F,GAEtB9F,EAAQF,EAASE,MAEbM,GAAiBN,EAAM9zD,SACzBgH,KAAK+xD,cAAcjmD,EAAK+lD,EAAI34D,EAAGgvD,EAAW3uD,GAC1Cm5D,EAAiBzxD,KAAKgC,IAAIqpD,EAASh1B,WAAYuuB,IAG5C19B,EAAI,EAAGyV,EAAOkvB,EAAM9zD,OAAQmvB,EAAIyV,IAAQzV,EAC3CyqC,EAAe9F,EAAM3kC,IAErBuqC,EAAiBpG,EAASh1B,YAG5B9I,OAAKo+B,EAASG,MAAO6F,EACvB,CAGAD,EAAe,EACfD,EAAiBpG,EAASh1B,YAG1B9I,OAAKxuB,KAAKitD,UAAW2F,GACrBf,EAAG13D,GAAKkzD,CACV,CAEA0F,WAAWlB,EAAI/lD,EAAKvS,GAClB,MAAM8yD,EAASrsD,KAAKqsD,OACdrzD,EAASqzD,EAAOrzD,OACtB,IAAIuzD,EAAYrzD,EAEhB,GAAIF,EAAQ,CACV,MAAMkvD,GAAYC,QAAc5uD,EAAQ0uD,IAAKjoD,KAAK0N,EAAG1N,KAAKob,OAa1D,IAXAy2C,EAAGnkD,EAAIghD,GAAY1uD,KAAMzG,EAAQy5D,YAAaz5D,GAC9Cs4D,EAAG13D,GAAKZ,EAAQ+zD,gBAEhBxhD,EAAIs1B,UAAY8mB,EAAU9mB,UAAU7nC,EAAQy5D,aAC5ClnD,EAAIy1B,aAAe,SAEnBgrB,GAAal1B,QAAO99B,EAAQgzD,YAE5BzgD,EAAIiT,UAAYxlB,EAAQ05D,YACxBnnD,EAAIsrB,KAAOm1B,EAAWpuB,OAEjBjlC,EAAI,EAAGA,EAAIF,IAAUE,EACxB4S,EAAI09C,SAAS6C,EAAOnzD,GAAIgvD,EAAUx6C,EAAEmkD,EAAGnkD,GAAImkD,EAAG13D,EAAIoyD,EAAWj1B,WAAa,GAC1Eu6B,EAAG13D,GAAKoyD,EAAWj1B,WAAa/9B,EAAQg0D,aAE3C,CACH,CAEA/qB,eAAeqvB,EAAI/lD,EAAKonD,EAAa35D,GACnC,MAAMs0D,OAACA,EAAMF,OAAEA,GAAU3tD,MACnB0N,EAACA,IAAGvT,GAAK03D,GACTz2C,MAACA,SAAOD,GAAU+3C,GAClBhW,QAACA,WAASC,aAAUC,cAAYC,IAAeN,QAAcxjD,EAAQ+0D,cAE3ExiD,EAAIiT,UAAYxlB,EAAQylB,gBACxBlT,EAAImT,YAAc1lB,EAAQ2lB,YAC1BpT,EAAIsT,UAAY7lB,EAAQ8lB,YAExBvT,EAAIq3B,YACJr3B,EAAIs3B,OAAO11B,EAAIwvC,EAAS/iD,GACT,QAAXwzD,GACF3tD,KAAKqxD,UAAUQ,EAAI/lD,EAAKonD,EAAa35D,GAEvCuS,EAAIu3B,OAAO31B,EAAI0N,EAAQ+hC,EAAUhjD,GACjC2R,EAAIqnD,iBAAiBzlD,EAAI0N,EAAOjhB,EAAGuT,EAAI0N,EAAOjhB,EAAIgjD,GACnC,WAAXwQ,GAAkC,UAAXE,GACzB7tD,KAAKqxD,UAAUQ,EAAI/lD,EAAKonD,EAAa35D,GAEvCuS,EAAIu3B,OAAO31B,EAAI0N,EAAOjhB,EAAIghB,EAASkiC,GACnCvxC,EAAIqnD,iBAAiBzlD,EAAI0N,EAAOjhB,EAAIghB,EAAQzN,EAAI0N,EAAQiiC,EAAaljD,EAAIghB,GAC1D,WAAXwyC,GACF3tD,KAAKqxD,UAAUQ,EAAI/lD,EAAKonD,EAAa35D,GAEvCuS,EAAIu3B,OAAO31B,EAAI0vC,EAAYjjD,EAAIghB,GAC/BrP,EAAIqnD,iBAAiBzlD,EAAGvT,EAAIghB,EAAQzN,EAAGvT,EAAIghB,EAASiiC,GACrC,WAAXuQ,GAAkC,SAAXE,GACzB7tD,KAAKqxD,UAAUQ,EAAI/lD,EAAKonD,EAAa35D,GAEvCuS,EAAIu3B,OAAO31B,EAAGvT,EAAI+iD,GAClBpxC,EAAIqnD,iBAAiBzlD,EAAGvT,EAAGuT,EAAIwvC,EAAS/iD,GACxC2R,EAAI0rC,YAEJ1rC,EAAIoB,OAEA3T,EAAQ8lB,YAAc,GACxBvT,EAAIw3B,QAER,CAMA8vB,uBAAuB75D,GACrB,MAAMU,EAAQ+F,KAAK/F,MACbsG,EAAQP,KAAKsH,YACb+rD,EAAQ9yD,GAASA,EAAMmN,EACvB4lD,EAAQ/yD,GAASA,EAAMpG,EAC7B,GAAIk5D,GAASC,EAAO,CAClB,MAAM35D,EAAW0xD,GAAY9xD,EAAQI,UAAU2H,KAAKtB,KAAMA,KAAK+B,QAAS/B,KAAK+vD,gBAC7E,IAAKp2D,EACH,OAEF,MAAMqO,EAAOhI,KAAKgwD,MAAQ9D,GAAelsD,KAAMzG,GACzC23D,EAAkBr1D,OAAOwL,OAAO,GAAI1N,EAAUqG,KAAKgwD,OACnD3B,EAAYH,GAAmBj0D,EAAOV,EAAS23D,GAC/CtzC,EAAQwwC,GAAmB70D,EAAS23D,EAAiB7C,EAAWp0D,GAClEo5D,EAAM9tD,MAAQqY,EAAMlQ,GAAK4lD,EAAM/tD,MAAQqY,EAAMzjB,IAC/C6F,KAAK6tD,OAASQ,EAAUR,OACxB7tD,KAAK2tD,OAASU,EAAUV,OACxB3tD,KAAKob,MAAQpT,EAAKoT,MAClBpb,KAAKmb,OAASnT,EAAKmT,OACnBnb,KAAKowD,OAASz2D,EAAS+T,EACvB1N,KAAKqwD,OAAS12D,EAASQ,EACvB6F,KAAK2U,qBAAqBja,OAAOsF,KAAM4d,GAE1C,CACH,CAMA21C,cACE,QAASvzD,KAAK8vD,OAChB,CAEAhuD,KAAKgK,GACH,MAAMvS,EAAUyG,KAAKzG,QAAQu/B,WAAW94B,KAAKgQ,cAC7C,IAAI8/C,EAAU9vD,KAAK8vD,QAEnB,IAAKA,EACH,OAGF9vD,KAAKozD,uBAAuB75D,GAE5B,MAAM25D,EAAc,CAClB93C,MAAOpb,KAAKob,MACZD,OAAQnb,KAAKmb,QAET02C,EAAK,CACTnkD,EAAG1N,KAAK0N,EACRvT,EAAG6F,KAAK7F,GAIV21D,EAAU7uD,KAAK2W,IAAIk4C,GAAW,KAAO,EAAIA,EAEzC,MAAMxiC,GAAUO,OAAUt0B,EAAQ+zB,SAG5BkmC,EAAoBxzD,KAAKpG,MAAMZ,QAAUgH,KAAKgtD,WAAWh0D,QAAUgH,KAAKosD,KAAKpzD,QAAUgH,KAAKitD,UAAUj0D,QAAUgH,KAAKqsD,OAAOrzD,OAE9HO,EAAQ47B,SAAWq+B,IACrB1nD,EAAI22B,OACJ32B,EAAI2nD,YAAc3D,EAGlB9vD,KAAKwiC,eAAeqvB,EAAI/lD,EAAKonD,EAAa35D,IAE1CmvD,QAAsB58C,EAAKvS,EAAQovD,eAEnCkJ,EAAG13D,GAAKmzB,EAAQ7a,IAGhBzS,KAAK+jC,UAAU8tB,EAAI/lD,EAAKvS,GAGxByG,KAAKwyD,SAASX,EAAI/lD,EAAKvS,GAGvByG,KAAK+yD,WAAWlB,EAAI/lD,EAAKvS,IAEzBkwD,QAAqB39C,EAAKvS,EAAQovD,eAElC78C,EAAI62B,UAER,CAMAkR,oBACE,OAAO7zC,KAAK+B,SAAW,EACzB,CAOA+xC,kBAAkBC,EAAgBwX,GAChC,MAAMvX,EAAah0C,KAAK+B,QAClB0D,EAASsuC,EAAer2C,KAAI,EAAEwL,eAAcN,YAChD,MAAMW,EAAOvJ,KAAK/F,MAAMyU,eAAexF,GAEvC,IAAKK,EACH,MAAM,IAAImd,MAAM,kCAAoCxd,GAGtD,MAAO,CACLA,eACAmK,QAAS9J,EAAKhR,KAAKqQ,GACnBA,QACF,IAEIskB,IAAW+mB,QAAeD,EAAYvuC,GACtCiuD,EAAkB1zD,KAAK2zD,iBAAiBluD,EAAQ8lD,IAElDr+B,GAAWwmC,KACb1zD,KAAK+B,QAAU0D,EACfzF,KAAK+vD,eAAiBxE,EACtBvrD,KAAK4zD,qBAAsB,EAC3B5zD,KAAKtF,QAAO,GAEhB,CASAsvD,YAAYzqC,EAAG40B,EAAQK,GAAc,GACnC,GAAIL,GAAUn0C,KAAK4zD,oBACjB,OAAO,EAET5zD,KAAK4zD,qBAAsB,EAE3B,MAAMr6D,EAAUyG,KAAKzG,QACfy6C,EAAah0C,KAAK+B,SAAW,GAC7B0D,EAASzF,KAAK20C,mBAAmBp1B,EAAGy0B,EAAYG,EAAQK,GAKxDkf,EAAkB1zD,KAAK2zD,iBAAiBluD,EAAQ8Z,GAGhD2N,EAAUinB,KAAWF,QAAexuC,EAAQuuC,IAAe0f,EAgBjE,OAbIxmC,IACFltB,KAAK+B,QAAU0D,GAEXlM,EAAQ47B,SAAW57B,EAAQ63D,YAC7BpxD,KAAK+vD,eAAiB,CACpBriD,EAAG6R,EAAE7R,EACLvT,EAAGolB,EAAEplB,GAGP6F,KAAKtF,QAAO,EAAMy5C,KAIfjnB,CACT,CAWAynB,mBAAmBp1B,EAAGy0B,EAAYG,EAAQK,GACxC,MAAMj7C,EAAUyG,KAAKzG,QAErB,GAAe,aAAXgmB,EAAElmB,KACJ,MAAO,GAGT,IAAKm7C,EAEH,OAAOR,EAIT,MAAMvuC,EAASzF,KAAK/F,MAAM44C,0BAA0BtzB,EAAGhmB,EAAQ0P,KAAM1P,EAAS46C,GAM9E,OAJI56C,EAAQ8O,SACV5C,EAAO4C,UAGF5C,CACT,CASAkuD,iBAAiBluD,EAAQ8Z,GACvB,MAAM6wC,OAACA,SAAQC,UAAQ92D,GAAWyG,KAC5BrG,EAAW0xD,GAAY9xD,EAAQI,UAAU2H,KAAKtB,KAAMyF,EAAQ8Z,GAClE,OAAoB,IAAb5lB,IAAuBy2D,IAAWz2D,EAAS+T,GAAK2iD,IAAW12D,EAASQ,EAC7E,EAGF,IAAA05D,GAAe,CACbhpD,GAAI,UACJy/C,SAAUuF,GACVxE,eAEAyI,UAAU75D,EAAO6kD,EAAOvlD,GAClBA,IACFU,EAAMkyD,QAAU,IAAI0D,GAAQ,CAAC51D,QAAOV,YAExC,EAEAigC,aAAav/B,EAAO6kD,EAAOvlD,GACrBU,EAAMkyD,SACRlyD,EAAMkyD,QAAQr/C,WAAWvT,EAE7B,EAEAsV,MAAM5U,EAAO6kD,EAAOvlD,GACdU,EAAMkyD,SACRlyD,EAAMkyD,QAAQr/C,WAAWvT,EAE7B,EAEAw6D,UAAU95D,GACR,MAAMkyD,EAAUlyD,EAAMkyD,QAEtB,GAAIA,GAAWA,EAAQoH,cAAe,CACpC,MAAM98C,EAAO,CACX01C,WAGF,IAA8E,IAA1ElyD,EAAMohC,cAAc,oBAAqB,IAAI5kB,EAAMgyB,YAAY,IACjE,OAGF0jB,EAAQrqD,KAAK7H,EAAM6R,KAEnB7R,EAAMohC,cAAc,mBAAoB5kB,EACzC,CACH,EAEA8zC,WAAWtwD,EAAOwc,GAChB,GAAIxc,EAAMkyD,QAAS,CAEjB,MAAM9jC,EAAmB5R,EAAK09B,OAC1Bl6C,EAAMkyD,QAAQnC,YAAYvzC,EAAK/T,MAAO2lB,EAAkB5R,EAAK+9B,eAE/D/9B,EAAKyW,SAAU,EAElB,CACH,EAEAzmB,SAAU,CACR0uB,SAAS,EACTi8B,SAAU,KACVz3D,SAAU,UACVqlB,gBAAiB,kBACjB8yC,WAAY,OACZpI,UAAW,CACTnmC,OAAQ,QAEV2pC,aAAc,EACdC,kBAAmB,EACnB51B,WAAY,OACZg4B,UAAW,OACXlC,YAAa,EACbf,SAAU,GAEVmG,UAAW,OACXQ,YAAa,OACb1F,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACVhpC,OAAQ,QAEVyvC,YAAa,OACb1lC,QAAS,EACT0gC,aAAc,EACdD,UAAW,EACXO,aAAc,EACdzI,UAAW,CAAC/5C,EAAK1D,IAASA,EAAKkkD,SAAStkD,KACxC89C,SAAU,CAACh6C,EAAK1D,IAASA,EAAKkkD,SAAStkD,KACvCoqD,mBAAoB,OACpBhF,eAAe,EACfvhC,WAAY,EACZ3M,YAAa,gBACbG,YAAa,EACb3Y,UAAW,CACT9F,SAAU,IACViE,OAAQ,gBAEV2C,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD8oD,QAAS,CACPjrD,OAAQ,SACRjE,SAAU,MAGdH,UAAWouD,IAGbvpB,cAAe,CACbgnB,SAAU,OACVC,WAAY,OACZ7C,UAAW,QAGbvjB,YAAa,CACX5nB,YAAc3C,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnE4C,YAAY,EACZ/d,UAAW,CACT8d,aAAa,EACbC,YAAY,GAEd9X,UAAW,CACTstD,WAAW,GAEbxsD,WAAY,CACVwsD,UAAW,cAKfpoB,uBAAwB,CAAC,gB,+GC5yC3B,SAASqoB,GAAe36D,EAAQua,EAAKjL,EAAOsrD,GAC1C,MAAM3+B,EAAQj8B,EAAO8C,QAAQyX,GAC7B,IAAc,IAAV0hB,EACF,MAbgB,EAACj8B,EAAQua,EAAKjL,EAAOsrD,KACpB,iBAARrgD,GACTjL,EAAQtP,EAAOL,KAAK4a,GAAO,EAC3BqgD,EAAYjR,QAAQ,CAACr6C,QAAOzP,MAAO0a,KAC1B4H,MAAM5H,KACfjL,EAAQ,MAEHA,GAMEurD,CAAY76D,EAAQua,EAAKjL,EAAOsrD,GAGzC,OAAO3+B,IADMj8B,EAAO86D,YAAYvgD,GACRjL,EAAQ2sB,CAClC,CAIA,SAAS8+B,GAAkB/3D,GACzB,MAAMhD,EAAS0G,KAAK0Q,YAEpB,OAAIpU,GAAS,GAAKA,EAAQhD,EAAON,OACxBM,EAAOgD,GAETA,CACT,CAEe,MAAMg4D,WAAsB38B,GAEzC/rB,UAAY,WAKZA,gBAAkB,CAChBxR,MAAO,CACLohC,SAAU64B,KAIdt0D,YAAYsE,GACViW,MAAMjW,GAGNrE,KAAKu0D,iBAAch3D,EACnByC,KAAKw0D,YAAc,EACnBx0D,KAAKy0D,aAAe,EACtB,CAEA3tC,KAAK8iB,GACH,MAAM8qB,EAAQ10D,KAAKy0D,aACnB,GAAIC,EAAM17D,OAAQ,CAChB,MAAMM,EAAS0G,KAAK0Q,YACpB,IAAK,MAAM9H,MAACA,QAAOzP,KAAUu7D,EACvBp7D,EAAOsP,KAAWzP,GACpBG,EAAOid,OAAO3N,EAAO,GAGzB5I,KAAKy0D,aAAe,EACrB,CACDn6C,MAAMwM,KAAK8iB,EACb,CAEAnxC,MAAMob,EAAKjL,GACT,IAAIiS,OAAchH,GAChB,OAAO,KAET,MAAMva,EAAS0G,KAAK0Q,YAGpB,MAtDe,EAAC9H,EAAO3F,IAAkB,OAAV2F,EAAiB,MAAO0zB,OAAYr7B,KAAKi1B,MAAMttB,GAAQ,EAAG3F,GAsDlF4zB,CAFPjuB,EAAQQ,SAASR,IAAUtP,EAAOsP,KAAWiL,EAAMjL,EAC/CqrD,GAAe36D,EAAQua,GAAKhG,OAAejF,EAAOiL,GAAM7T,KAAKy0D,cACxCn7D,EAAON,OAAS,EAC3C,CAEAghC,sBACE,MAAMjoB,WAACA,aAAYC,GAAchS,KAAKiS,gBACtC,IAAI/Q,IAACA,EAAG+B,IAAEA,GAAOjD,KAAKqR,WAAU,GAEJ,UAAxBrR,KAAKzG,QAAQmjD,SACV3qC,IACH7Q,EAAM,GAEH8Q,IACH/O,EAAMjD,KAAK0Q,YAAY1X,OAAS,IAIpCgH,KAAKkB,IAAMA,EACXlB,KAAKiD,IAAMA,CACb,CAEAm3B,aACE,MAAMl5B,EAAMlB,KAAKkB,IACX+B,EAAMjD,KAAKiD,IACX8W,EAAS/Z,KAAKzG,QAAQwgB,OACtB3f,EAAQ,GACd,IAAId,EAAS0G,KAAK0Q,YAGlBpX,EAAkB,IAAT4H,GAAc+B,IAAQ3J,EAAON,OAAS,EAAKM,EAASA,EAAOm3C,MAAMvvC,EAAK+B,EAAM,GAErFjD,KAAKw0D,YAAcvzD,KAAKgC,IAAI3J,EAAON,QAAU+gB,EAAS,EAAI,GAAI,GAC9D/Z,KAAKu0D,YAAcv0D,KAAKkB,KAAO6Y,EAAS,GAAM,GAE9C,IAAK,IAAIzd,EAAQ4E,EAAK5E,GAAS2G,EAAK3G,IAClClC,EAAMnB,KAAK,CAACqD,UAEd,OAAOlC,CACT,CAEAkY,iBAAiBhW,GACf,OAAO+3D,GAAkB/yD,KAAKtB,KAAM1D,EACtC,CAKAgK,YACEgU,MAAMhU,YAEDtG,KAAKya,iBAERza,KAAKynB,gBAAkBznB,KAAKynB,eAEhC,CAGA5P,iBAAiBvb,GAKf,MAJqB,iBAAVA,IACTA,EAAQ0D,KAAKvH,MAAM6D,IAGJ,OAAVA,EAAiB8U,IAAMpR,KAAK0c,oBAAoBpgB,EAAQ0D,KAAKu0D,aAAev0D,KAAKw0D,YAC1F,CAIA18C,gBAAgBlP,GACd,MAAMxO,EAAQ4F,KAAK5F,MACnB,OAAIwO,EAAQ,GAAKA,EAAQxO,EAAMpB,OAAS,EAC/B,KAEFgH,KAAK6X,iBAAiBzd,EAAMwO,GAAOtM,MAC5C,CAEAsgB,iBAAiB8hB,GACf,OAAOz9B,KAAKi1B,MAAMl2B,KAAKu0D,YAAcv0D,KAAK8+B,mBAAmBJ,GAAS1+B,KAAKw0D,YAC7E,CAEAh6C,eACE,OAAOxa,KAAK2S,MACd,ECdF,SAASgiD,GAAkBr4D,EAAOs4D,GAAY/7C,WAACA,EAAU8iB,YAAEA,IACzD,MAAMk5B,GAAM70C,OAAU2b,GAChBliB,GAASZ,EAAa5X,KAAKkgB,IAAI0zC,GAAO5zD,KAAKggB,IAAI4zC,KAAS,KACxD77D,EAAS,IAAO47D,GAAc,GAAKt4D,GAAOtD,OAChD,OAAOiI,KAAKC,IAAI0zD,EAAan7C,EAAOzgB,EACtC,CAEe,MAAM87D,WAAwBn9B,GAE3C53B,YAAYsE,GACViW,MAAMjW,GAGNrE,KAAKmB,WAAQ5D,EAEbyC,KAAKsI,SAAM/K,EAEXyC,KAAKu0D,iBAAch3D,EAEnByC,KAAK+0D,eAAYx3D,EACjByC,KAAKw0D,YAAc,CACrB,CAEA/7D,MAAMob,EAAKjL,GACT,OAAIiS,OAAchH,KAGE,iBAARA,GAAoBA,aAAenC,UAAYtI,UAAUyK,GAF5D,MAMDA,CACV,CAEAmhD,yBACE,MAAM96C,YAACA,GAAela,KAAKzG,SACrBwY,WAACA,aAAYC,GAAchS,KAAKiS,gBACtC,IAAI/Q,IAACA,EAAG+B,IAAEA,GAAOjD,KAEjB,MAAMi1D,EAAS37C,GAAMpY,EAAM6Q,EAAa7Q,EAAMoY,EACxC47C,EAAS57C,GAAMrW,EAAM+O,EAAa/O,EAAMqW,EAE9C,GAAIY,EAAa,CACf,MAAMi7C,GAAU9rD,OAAKnI,GACfk0D,GAAU/rD,OAAKpG,GAEjBkyD,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,EAEV,CAED,GAAI/zD,IAAQ+B,EAAK,CACf,IAAI8W,EAAiB,IAAR9W,EAAY,EAAIhC,KAAK2W,IAAU,IAAN3U,GAEtCiyD,EAAOjyD,EAAM8W,GAERG,GACH+6C,EAAO/zD,EAAM6Y,EAEhB,CACD/Z,KAAKkB,IAAMA,EACXlB,KAAKiD,IAAMA,CACb,CAEAoyD,eACE,MAAM9gC,EAAWv0B,KAAKzG,QAAQa,MAE9B,IACIk7D,GADAtgC,cAACA,WAAeugC,GAAYhhC,EAkBhC,OAfIghC,GACFD,EAAWr0D,KAAKw0B,KAAKz1B,KAAKiD,IAAMsyD,GAAYt0D,KAAK+D,MAAMhF,KAAKkB,IAAMq0D,GAAY,EAC1ED,EAAW,MACbloD,QAAQC,KAAK,UAAUrN,KAAK6K,sBAAsB0qD,mCAA0CD,8BAC5FA,EAAW,OAGbA,EAAWt1D,KAAKw1D,mBAChBxgC,EAAgBA,GAAiB,IAG/BA,IACFsgC,EAAWr0D,KAAKC,IAAI8zB,EAAesgC,IAG9BA,CACT,CAKAE,mBACE,OAAO9jD,OAAOC,iBAChB,CAEAyoB,aACE,MAAMhyB,EAAOpI,KAAKzG,QACZg7B,EAAWnsB,EAAKhO,MAMtB,IAAIk7D,EAAWt1D,KAAKq1D,eACpBC,EAAWr0D,KAAKgC,IAAI,EAAGqyD,GAEvB,MAcMl7D,EAhPV,SAAuBq7D,EAAmBC,GACxC,MAAMt7D,EAAQ,IAMRsiD,OAACA,EAAMpc,KAAEA,MAAMp/B,MAAK+B,EAAG0yD,UAAEA,QAAWzlD,WAAOolD,EAAQM,UAAEA,gBAAWC,GAAiBJ,EACjFK,EAAOx1B,GAAQ,EACfy1B,EAAYT,EAAW,GACtBp0D,IAAK80D,EAAM/yD,IAAKgzD,GAAQP,EACzB3jD,IAAc8I,OAAc3Z,GAC5B8Q,IAAc6I,OAAc5X,GAC5BizD,IAAgBr7C,OAAc3K,GAC9B0kD,GAAcqB,EAAOD,IAASJ,EAAY,GAChD,IACIjyD,EAAQwyD,EAASC,EAASC,EAD1B/3C,GAAUg4C,SAASL,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAIx3C,EAdgB,QAcUvM,IAAeC,EAC3C,MAAO,CAAC,CAAC1V,MAAO05D,GAAO,CAAC15D,MAAO25D,IAGjCI,EAAYp1D,KAAKw0B,KAAKwgC,EAAO33C,GAAWrd,KAAK+D,MAAMgxD,EAAO13C,GACtD+3C,EAAYN,IAEdz3C,GAAUg4C,QAAQD,EAAY/3C,EAAUy3C,EAAYD,GAAQA,IAGzDj7C,OAAc86C,KAEjBhyD,EAAS1C,KAAKkoB,IAAI,GAAIwsC,GACtBr3C,EAAUrd,KAAKw0B,KAAKnX,EAAU3a,GAAUA,GAG3B,UAAX+4C,GACFyZ,EAAUl1D,KAAK+D,MAAMgxD,EAAO13C,GAAWA,EACvC83C,EAAUn1D,KAAKw0B,KAAKwgC,EAAO33C,GAAWA,IAEtC63C,EAAUH,EACVI,EAAUH,GAGRlkD,GAAcC,GAAcsuB,IAAQi2B,SAAatzD,EAAM/B,GAAOo/B,EAAMhiB,EAAU,MAKhF+3C,EAAYp1D,KAAKi1B,MAAMj1B,KAAKC,KAAK+B,EAAM/B,GAAOod,EAASg3C,IACvDh3C,GAAWrb,EAAM/B,GAAOm1D,EACxBF,EAAUj1D,EACVk1D,EAAUnzD,GACDizD,GAITC,EAAUpkD,EAAa7Q,EAAMi1D,EAC7BC,EAAUpkD,EAAa/O,EAAMmzD,EAC7BC,EAAYnmD,EAAQ,EACpBoO,GAAW83C,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAW73C,EAIhC+3C,GADEG,QAAaH,EAAWp1D,KAAKi1B,MAAMmgC,GAAY/3C,EAAU,KAC/Crd,KAAKi1B,MAAMmgC,GAEXp1D,KAAKw0B,KAAK4gC,IAM1B,MAAMI,EAAgBx1D,KAAKgC,KACzByzD,QAAep4C,IACfo4C,QAAeP,IAEjBxyD,EAAS1C,KAAKkoB,IAAI,IAAItO,OAAc86C,GAAac,EAAgBd,GACjEQ,EAAUl1D,KAAKi1B,MAAMigC,EAAUxyD,GAAUA,EACzCyyD,EAAUn1D,KAAKi1B,MAAMkgC,EAAUzyD,GAAUA,EAEzC,IAAIwkB,EAAI,EAiBR,IAhBIpW,IACE8jD,GAAiBM,IAAYj1D,GAC/B9G,EAAMnB,KAAK,CAACqD,MAAO4E,IAEfi1D,EAAUj1D,GACZinB,KAGEquC,QAAav1D,KAAKi1B,OAAOigC,EAAUhuC,EAAI7J,GAAW3a,GAAUA,EAAQzC,EAAKyzD,GAAkBzzD,EAAK0zD,EAAYa,KAC9GttC,KAEOguC,EAAUj1D,GACnBinB,KAIGA,EAAIkuC,IAAaluC,EACtB/tB,EAAMnB,KAAK,CAACqD,MAAO2E,KAAKi1B,OAAOigC,EAAUhuC,EAAI7J,GAAW3a,GAAUA,IAcpE,OAXIqO,GAAc6jD,GAAiBO,IAAYnzD,EAEzC7I,EAAMpB,SAAUw9D,QAAap8D,EAAMA,EAAMpB,OAAS,GAAGsD,MAAO2G,EAAK0xD,GAAkB1xD,EAAK2xD,EAAYa,IACtGr7D,EAAMA,EAAMpB,OAAS,GAAGsD,MAAQ2G,EAEhC7I,EAAMnB,KAAK,CAACqD,MAAO2G,IAEX+O,GAAcokD,IAAYnzD,GACpC7I,EAAMnB,KAAK,CAACqD,MAAO85D,IAGdh8D,CACT,CA4HkBu8D,CAdkB,CAC9BrB,WACA5Y,OAAQt0C,EAAKs0C,OACbx7C,IAAKkH,EAAKlH,IACV+B,IAAKmF,EAAKnF,IACV0yD,UAAWphC,EAASohC,UACpBr1B,KAAM/L,EAASghC,SACfrlD,MAAOqkB,EAASrkB,MAChB0lD,UAAW51D,KAAKwkC,aAChB3rB,WAAY7Y,KAAKya,eACjBkhB,YAAapH,EAASoH,aAAe,EACrCk6B,eAA0C,IAA3BthC,EAASshC,eAER71D,KAAKk4B,QAAUl4B,MAmBjC,MAdoB,UAAhBoI,EAAKs0C,SACPka,QAAmBx8D,EAAO4F,KAAM,SAG9BoI,EAAKC,SACPjO,EAAMiO,UAENrI,KAAKmB,MAAQnB,KAAKiD,IAClBjD,KAAKsI,IAAMtI,KAAKkB,MAEhBlB,KAAKmB,MAAQnB,KAAKkB,IAClBlB,KAAKsI,IAAMtI,KAAKiD,KAGX7I,CACT,CAKAkM,YACE,MAAMlM,EAAQ4F,KAAK5F,MACnB,IAAI+G,EAAQnB,KAAKkB,IACboH,EAAMtI,KAAKiD,IAIf,GAFAqX,MAAMhU,YAEFtG,KAAKzG,QAAQwgB,QAAU3f,EAAMpB,OAAQ,CACvC,MAAM+gB,GAAUzR,EAAMnH,GAASF,KAAKgC,IAAI7I,EAAMpB,OAAS,EAAG,GAAK,EAC/DmI,GAAS4Y,EACTzR,GAAOyR,CACR,CACD/Z,KAAKu0D,YAAcpzD,EACnBnB,KAAK+0D,UAAYzsD,EACjBtI,KAAKw0D,YAAclsD,EAAMnH,CAC3B,CAEAmR,iBAAiBhW,GACf,OAAO2mB,OAAa3mB,EAAO0D,KAAK/F,MAAMV,QAAQ2pB,OAAQljB,KAAKzG,QAAQa,MAAMC,OAC3E,EC9Sa,MAAMw8D,WAAoB/B,GAEvClpD,UAAY,SAKZA,gBAAkB,CAChBxR,MAAO,CACLohC,SAAUs7B,KAAMC,WAAWC,UAK/Bh9B,sBACE,MAAM94B,IAACA,EAAG+B,IAAEA,GAAOjD,KAAKqR,WAAU,GAElCrR,KAAKkB,KAAMkI,OAASlI,GAAOA,EAAM,EACjClB,KAAKiD,KAAMmG,OAASnG,GAAOA,EAAM,EAGjCjD,KAAKg1D,wBACP,CAMAQ,mBACE,MAAM38C,EAAa7Y,KAAKya,eAClBzhB,EAAS6f,EAAa7Y,KAAKob,MAAQpb,KAAKmb,OACxCwgB,GAAc3b,OAAUhgB,KAAKzG,QAAQa,MAAMuhC,aAC3CliB,GAASZ,EAAa5X,KAAKkgB,IAAIwa,GAAe16B,KAAKggB,IAAI0a,KAAiB,KACxEkC,EAAW79B,KAAKk+B,wBAAwB,GAC9C,OAAOj9B,KAAKw0B,KAAKz8B,EAASiI,KAAKC,IAAI,GAAI28B,EAASvG,WAAa7d,GAC/D,CAGA5B,iBAAiBvb,GACf,OAAiB,OAAVA,EAAiB8U,IAAMpR,KAAK0c,oBAAoBpgB,EAAQ0D,KAAKu0D,aAAev0D,KAAKw0D,YAC1F,CAEA53C,iBAAiB8hB,GACf,OAAO1+B,KAAKu0D,YAAcv0D,KAAK8+B,mBAAmBJ,GAAS1+B,KAAKw0D,WAClE,EC1CF,MAAMyC,GAAa39C,GAAKrY,KAAK+D,OAAMkyD,QAAM59C,IACnC69C,GAAiB,CAAC79C,EAAG89C,IAAMn2D,KAAKkoB,IAAI,GAAI8tC,GAAW39C,GAAK89C,GAE9D,SAASC,GAAQC,GAEf,OAAkB,IADHA,EAAWr2D,KAAKkoB,IAAI,GAAI8tC,GAAWK,GAEpD,CAEA,SAASC,GAAMr2D,EAAK+B,EAAKu0D,GACvB,MAAMC,EAAYx2D,KAAKkoB,IAAI,GAAIquC,GACzBr2D,EAAQF,KAAK+D,MAAM9D,EAAMu2D,GAE/B,OADYx2D,KAAKw0B,KAAKxyB,EAAMw0D,GACft2D,CACf,CAqBA,SAASw1D,GAAclB,GAAmBv0D,IAACA,EAAG+B,IAAEA,IAC9C/B,GAAM+3B,OAAgBw8B,EAAkBv0D,IAAKA,GAC7C,MAAM9G,EAAQ,GACRs9D,EAAST,GAAW/1D,GAC1B,IAAIy2D,EAvBN,SAAkBz2D,EAAK+B,GAErB,IAAIu0D,EAAWP,GADDh0D,EAAM/B,GAEpB,KAAOq2D,GAAMr2D,EAAK+B,EAAKu0D,GAAY,IACjCA,IAEF,KAAOD,GAAMr2D,EAAK+B,EAAKu0D,GAAY,IACjCA,IAEF,OAAOv2D,KAAKC,IAAIs2D,EAAUP,GAAW/1D,GACvC,CAaY02D,CAAS12D,EAAK+B,GACpB0yD,EAAYgC,EAAM,EAAI12D,KAAKkoB,IAAI,GAAIloB,KAAK2W,IAAI+/C,IAAQ,EACxD,MAAMpC,EAAWt0D,KAAKkoB,IAAI,GAAIwuC,GACxB7+C,EAAO4+C,EAASC,EAAM12D,KAAKkoB,IAAI,GAAIuuC,GAAU,EAC7Cv2D,EAAQF,KAAKi1B,OAAOh1B,EAAM4X,GAAQ68C,GAAaA,EAC/C57C,EAAS9Y,KAAK+D,OAAO9D,EAAM4X,GAAQy8C,EAAW,IAAMA,EAAW,GACrE,IAAIsC,EAAc52D,KAAK+D,OAAO7D,EAAQ4Y,GAAU9Y,KAAKkoB,IAAI,GAAIwuC,IACzDr7D,GAAQ28B,OAAgBw8B,EAAkBv0D,IAAKD,KAAKi1B,OAAOpd,EAAOiB,EAAS89C,EAAc52D,KAAKkoB,IAAI,GAAIwuC,IAAQhC,GAAaA,GAC/H,KAAOr5D,EAAQ2G,GACb7I,EAAMnB,KAAK,CAACqD,QAAO44B,MAAOmiC,GAAQ/6D,GAAQu7D,gBACtCA,GAAe,GACjBA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEEA,GAAe,KACjBF,IACAE,EAAc,EACdlC,EAAYgC,GAAO,EAAI,EAAIhC,GAE7Br5D,EAAQ2E,KAAKi1B,OAAOpd,EAAOiB,EAAS89C,EAAc52D,KAAKkoB,IAAI,GAAIwuC,IAAQhC,GAAaA,EAEtF,MAAMmC,GAAW7+B,OAAgBw8B,EAAkBxyD,IAAK3G,GAGxD,OAFAlC,EAAMnB,KAAK,CAACqD,MAAOw7D,EAAU5iC,MAAOmiC,GAAQS,GAAWD,gBAEhDz9D,CACT,CAEe,MAAM29D,WAAyBpgC,GAE5C/rB,UAAY,cAKZA,gBAAkB,CAChBxR,MAAO,CACLohC,SAAUs7B,KAAMC,WAAWiB,YAC3B9iC,MAAO,CACLC,SAAS,KAMfp1B,YAAYsE,GACViW,MAAMjW,GAGNrE,KAAKmB,WAAQ5D,EAEbyC,KAAKsI,SAAM/K,EAEXyC,KAAKu0D,iBAAch3D,EACnByC,KAAKw0D,YAAc,CACrB,CAEA/7D,MAAMob,EAAKjL,GACT,MAAMtM,EAAQw4D,GAAgBjuC,UAAUpuB,MAAMmzD,MAAM5rD,KAAM,CAAC6T,EAAKjL,IAChE,GAAc,IAAVtM,EAIJ,OAAO8M,OAAS9M,IAAUA,EAAQ,EAAIA,EAAQ,KAH5C0D,KAAKi4D,OAAQ,CAIjB,CAEAj+B,sBACE,MAAM94B,IAACA,EAAG+B,IAAEA,GAAOjD,KAAKqR,WAAU,GAElCrR,KAAKkB,KAAMkI,OAASlI,GAAOD,KAAKgC,IAAI,EAAG/B,GAAO,KAC9ClB,KAAKiD,KAAMmG,OAASnG,GAAOhC,KAAKgC,IAAI,EAAGA,GAAO,KAE1CjD,KAAKzG,QAAQ2gB,cACfla,KAAKi4D,OAAQ,GAKXj4D,KAAKi4D,OAASj4D,KAAKkB,MAAQlB,KAAK04B,iBAAkBtvB,OAASpJ,KAAKw4B,YAClEx4B,KAAKkB,IAAMA,IAAQi2D,GAAen3D,KAAKkB,IAAK,GAAKi2D,GAAen3D,KAAKkB,KAAK,GAAMi2D,GAAen3D,KAAKkB,IAAK,IAG3GlB,KAAKg1D,wBACP,CAEAA,yBACE,MAAMjjD,WAACA,aAAYC,GAAchS,KAAKiS,gBACtC,IAAI/Q,EAAMlB,KAAKkB,IACX+B,EAAMjD,KAAKiD,IAEf,MAAMgyD,EAAS37C,GAAMpY,EAAM6Q,EAAa7Q,EAAMoY,EACxC47C,EAAS57C,GAAMrW,EAAM+O,EAAa/O,EAAMqW,EAE1CpY,IAAQ+B,IACN/B,GAAO,GACT+zD,EAAO,GACPC,EAAO,MAEPD,EAAOkC,GAAej2D,GAAK,IAC3Bg0D,EAAOiC,GAAel0D,EAAK,MAG3B/B,GAAO,GACT+zD,EAAOkC,GAAel0D,GAAK,IAEzBA,GAAO,GAETiyD,EAAOiC,GAAej2D,EAAK,IAG7BlB,KAAKkB,IAAMA,EACXlB,KAAKiD,IAAMA,CACb,CAEAm3B,aACE,MAAMhyB,EAAOpI,KAAKzG,QAMZa,EAAQu8D,GAJY,CACxBz1D,IAAKlB,KAAKw4B,SACVv1B,IAAKjD,KAAKu4B,UAEmCv4B,MAkB/C,MAdoB,UAAhBoI,EAAKs0C,SACPka,QAAmBx8D,EAAO4F,KAAM,SAG9BoI,EAAKC,SACPjO,EAAMiO,UAENrI,KAAKmB,MAAQnB,KAAKiD,IAClBjD,KAAKsI,IAAMtI,KAAKkB,MAEhBlB,KAAKmB,MAAQnB,KAAKkB,IAClBlB,KAAKsI,IAAMtI,KAAKiD,KAGX7I,CACT,CAMAkY,iBAAiBhW,GACf,YAAiBiB,IAAVjB,EACH,KACA2mB,OAAa3mB,EAAO0D,KAAK/F,MAAMV,QAAQ2pB,OAAQljB,KAAKzG,QAAQa,MAAMC,OACxE,CAKAiM,YACE,MAAMnF,EAAQnB,KAAKkB,IAEnBoZ,MAAMhU,YAENtG,KAAKu0D,aAAc2C,QAAM/1D,GACzBnB,KAAKw0D,aAAc0C,QAAMl3D,KAAKiD,MAAOi0D,QAAM/1D,EAC7C,CAEA0W,iBAAiBvb,GAIf,YAHciB,IAAVjB,GAAiC,IAAVA,IACzBA,EAAQ0D,KAAKkB,KAED,OAAV5E,GAAkBmf,MAAMnf,GACnB8U,IAEFpR,KAAK0c,mBAAmBpgB,IAAU0D,KAAKkB,IAC1C,IACCg2D,QAAM56D,GAAS0D,KAAKu0D,aAAev0D,KAAKw0D,YAC/C,CAEA53C,iBAAiB8hB,GACf,MAAMC,EAAU3+B,KAAK8+B,mBAAmBJ,GACxC,OAAOz9B,KAAKkoB,IAAI,GAAInpB,KAAKu0D,YAAc51B,EAAU3+B,KAAKw0D,YACxD,ECxNF,SAAS0D,GAAsB9vD,GAC7B,MAAMmsB,EAAWnsB,EAAKhO,MAEtB,GAAIm6B,EAAS76B,SAAW0O,EAAK1O,QAAS,CACpC,MAAM4zB,GAAUO,OAAU0G,EAAS6N,iBACnC,OAAOv0B,OAAe0mB,EAAS6C,MAAQ7C,EAAS6C,KAAKpvB,KAAMvB,IAAS2wB,KAAKpvB,MAAQslB,EAAQnS,MAC1F,CACD,OAAO,CACT,CAUA,SAASg9C,GAAgB52C,EAAO+I,EAAKtiB,EAAM9G,EAAK+B,GAC9C,OAAIse,IAAUrgB,GAAOqgB,IAAUte,EACtB,CACL9B,MAAOmpB,EAAOtiB,EAAO,EACrBM,IAAKgiB,EAAOtiB,EAAO,GAEZuZ,EAAQrgB,GAAOqgB,EAAQte,EACzB,CACL9B,MAAOmpB,EAAMtiB,EACbM,IAAKgiB,GAIF,CACLnpB,MAAOmpB,EACPhiB,IAAKgiB,EAAMtiB,EAEf,CAKA,SAASowD,GAAmBlwD,GA8B1B,MAAMgR,EAAO,CACXla,EAAGkJ,EAAM0K,KAAO1K,EAAM0iD,SAASh4C,KAC/BjV,EAAGuK,EAAMwK,MAAQxK,EAAM0iD,SAASl4C,MAChCF,EAAGtK,EAAMuK,IAAMvK,EAAM0iD,SAASn4C,IAC9B7T,EAAGsJ,EAAMyK,OAASzK,EAAM0iD,SAASj4C,QAE7B0lD,EAASx8D,OAAOwL,OAAO,GAAI6R,GAC3B8iB,EAAa,GACb1O,EAAU,GACVgrC,EAAapwD,EAAMqwD,aAAav/D,OAChCw/D,EAAiBtwD,EAAM3O,QAAQ0rB,YAC/BwzC,EAAkBD,EAAeE,kBAAoB52C,IAAKw2C,EAAa,EAE7E,IAAK,IAAIp/D,EAAI,EAAGA,EAAIo/D,EAAYp/D,IAAK,CACnC,MAAMkP,EAAOowD,EAAe1/B,WAAW5wB,EAAMywD,qBAAqBz/D,IAClEo0B,EAAQp0B,GAAKkP,EAAKklB,QAClB,MAAMnH,EAAgBje,EAAM0wD,iBAAiB1/D,EAAGgP,EAAM2wD,YAAcvrC,EAAQp0B,GAAIu/D,GAC1EK,GAASzhC,QAAOjvB,EAAKgvB,MACrByzB,GA9EgB/+C,EA8EY5D,EAAM4D,IA9EbsrB,EA8EkB0hC,EA9EZ3/D,EA8EoB+O,EAAMqwD,aAAar/D,GA7E1EC,GAAQ4N,OAAQ5N,GAASA,EAAQ,CAACA,GAC3B,CACLkzB,GAAG0sC,QAAajtD,EAAKsrB,EAAK+G,OAAQhlC,GAClCozB,EAAGpzB,EAAMH,OAASo+B,EAAKE,aA2EvB0E,EAAW9iC,GAAK2xD,EAEhB,MAAMhuB,GAAe6kB,QAAgBx5C,EAAMyd,cAAczsB,GAAKu/D,GACxDl3C,EAAQtgB,KAAKi1B,OAAMqG,OAAUM,IAGnCm8B,GAAaX,EAAQn/C,EAAM2jB,EAFXs7B,GAAgB52C,EAAO4E,EAAczY,EAAGm9C,EAASx+B,EAAG,EAAG,KACvD8rC,GAAgB52C,EAAO4E,EAAchsB,EAAG0wD,EAASt+B,EAAG,GAAI,KAE1E,CAtFF,IAA0BzgB,EAAKsrB,EAAMj+B,EAwFnC+O,EAAM+wD,eACJ//C,EAAKla,EAAIq5D,EAAOr5D,EAChBq5D,EAAO16D,EAAIub,EAAKvb,EAChBub,EAAK1G,EAAI6lD,EAAO7lD,EAChB6lD,EAAOz5D,EAAIsa,EAAKta,GAIlBsJ,EAAMgxD,iBAwBR,SAA8BhxD,EAAO8zB,EAAY1O,GAC/C,MAAM1rB,EAAQ,GACR02D,EAAapwD,EAAMqwD,aAAav/D,OAChCoP,EAAOF,EAAM3O,QACb4/D,EAAQjB,GAAsB9vD,GAAQ,EACtCgxD,EAAgBlxD,EAAM2wD,YACtBJ,EAAkBrwD,EAAK6c,YAAYyzC,kBAAoB52C,IAAKw2C,EAAa,EAE/E,IAAK,IAAIp/D,EAAI,EAAGA,EAAIo/D,EAAYp/D,IAAK,CACnC,MAAMmgE,EAAqBnxD,EAAM0wD,iBAAiB1/D,EAAGkgE,EAAgBD,EAAQ7rC,EAAQp0B,GAAIu/D,GACnFl3C,EAAQtgB,KAAKi1B,OAAMqG,QAAUmlB,QAAgB2X,EAAmB93C,MAAQK,OACxE5Z,EAAOg0B,EAAW9iC,GAClBiB,EAAIm/D,GAAUD,EAAmBl/D,EAAG6N,EAAKukB,EAAGhL,GAC5C6f,EAAYm4B,GAAqBh4C,GACjC3O,EAAO4mD,GAAiBH,EAAmB3rD,EAAG1F,EAAKqkB,EAAG+U,GAE5Dx/B,EAAM3I,KAAK,CAETyU,EAAG2rD,EAAmB3rD,EACtBvT,IAGAinC,YAGAxuB,OACAH,IAAKtY,EACLuY,MAAOE,EAAO5K,EAAKqkB,EACnB1Z,OAAQxY,EAAI6N,EAAKukB,GAErB,CACA,OAAO3qB,CACT,CAxD2B63D,CAAqBvxD,EAAO8zB,EAAY1O,EACnE,CAEA,SAAS0rC,GAAaX,EAAQn/C,EAAMqI,EAAOm4C,EAASC,GAClD,MAAMx4C,EAAMlgB,KAAK2W,IAAI3W,KAAKkgB,IAAII,IACxBN,EAAMhgB,KAAK2W,IAAI3W,KAAKggB,IAAIM,IAC9B,IAAI7T,EAAI,EACJvT,EAAI,EACJu/D,EAAQv4D,MAAQ+X,EAAKla,GACvB0O,GAAKwL,EAAKla,EAAI06D,EAAQv4D,OAASggB,EAC/Bk3C,EAAOr5D,EAAIiC,KAAKC,IAAIm3D,EAAOr5D,EAAGka,EAAKla,EAAI0O,IAC9BgsD,EAAQpxD,IAAM4Q,EAAKvb,IAC5B+P,GAAKgsD,EAAQpxD,IAAM4Q,EAAKvb,GAAKwjB,EAC7Bk3C,EAAO16D,EAAIsD,KAAKgC,IAAIo1D,EAAO16D,EAAGub,EAAKvb,EAAI+P,IAErCisD,EAAQx4D,MAAQ+X,EAAK1G,GACvBrY,GAAK+e,EAAK1G,EAAImnD,EAAQx4D,OAAS8f,EAC/Bo3C,EAAO7lD,EAAIvR,KAAKC,IAAIm3D,EAAO7lD,EAAG0G,EAAK1G,EAAIrY,IAC9Bw/D,EAAQrxD,IAAM4Q,EAAKta,IAC5BzE,GAAKw/D,EAAQrxD,IAAM4Q,EAAKta,GAAKqiB,EAC7Bo3C,EAAOz5D,EAAIqC,KAAKgC,IAAIo1D,EAAOz5D,EAAGsa,EAAKta,EAAIzE,GAE3C,CAoCA,SAASo/D,GAAqBh4C,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAGF,OACT,CAEA,SAASi4C,GAAiB9rD,EAAG2e,EAAGmL,GAM9B,MALc,UAAVA,EACF9pB,GAAK2e,EACc,WAAVmL,IACT9pB,GAAM2e,EAAI,GAEL3e,CACT,CAEA,SAAS4rD,GAAUn/D,EAAGoyB,EAAGhL,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBpnB,GAAMoyB,EAAI,GACDhL,EAAQ,KAAOA,EAAQ,MAChCpnB,GAAKoyB,GAEApyB,CACT,CAmDA,SAASy/D,GAAe1xD,EAAOwV,EAAQsH,EAAUiqC,GAC/C,MAAMnjD,IAACA,GAAO5D,EACd,GAAI8c,EAEFlZ,EAAIiX,IAAI7a,EAAMsd,QAAStd,EAAMud,QAAS/H,EAAQ,EAAGyC,SAC5C,CAEL,IAAIgG,EAAgBje,EAAM0wD,iBAAiB,EAAGl7C,GAC9C5R,EAAIs3B,OAAOjd,EAAczY,EAAGyY,EAAchsB,GAE1C,IAAK,IAAIjB,EAAI,EAAGA,EAAI+1D,EAAY/1D,IAC9BitB,EAAgBje,EAAM0wD,iBAAiB1/D,EAAGwkB,GAC1C5R,EAAIu3B,OAAOld,EAAczY,EAAGyY,EAAchsB,EAE7C,CACH,CAiCe,MAAM0/D,WAA0B/E,GAE7ClpD,UAAY,eAKZA,gBAAkB,CAChBlS,SAAS,EAGTogE,SAAS,EACTngE,SAAU,YAEVorB,WAAY,CACVrrB,SAAS,EACT0lB,UAAW,EACXshB,WAAY,GACZE,iBAAkB,GAGpB5mB,KAAM,CACJgL,UAAU,GAGZlE,WAAY,EAGZ1mB,MAAO,CAEL8nC,mBAAmB,EAEnB1G,SAAUs7B,KAAMC,WAAWC,SAG7B/xC,YAAa,CACXod,mBAAe9kC,EAGf6kC,gBAAiB,EAGjB1oC,SAAS,EAGT09B,KAAM,CACJpvB,KAAM,IAIRwzB,SAASriC,GACAA,EAITm0B,QAAS,EAGTorC,mBAAmB,IAIvB9sD,qBAAuB,CACrB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAGjBA,mBAAqB,CACnBmZ,WAAY,CACVivC,UAAW,SAIfj0D,YAAYsE,GACViW,MAAMjW,GAGNrE,KAAKwlB,aAAUjoB,EAEfyC,KAAKylB,aAAUloB,EAEfyC,KAAK64D,iBAAct7D,EAEnByC,KAAKu4D,aAAe,GACpBv4D,KAAKk5D,iBAAmB,EAC1B,CAEAr/B,gBAEE,MAAMvM,EAAUttB,KAAK4qD,UAAW/8B,OAAUqqC,GAAsBl4D,KAAKzG,SAAW,GAC1E8yB,EAAIrsB,KAAKob,MAAQpb,KAAKiiB,SAAWqL,EAAQlS,MACzCmR,EAAIvsB,KAAKmb,OAASnb,KAAKkiB,UAAYoL,EAAQnS,OACjDnb,KAAKwlB,QAAUvkB,KAAK+D,MAAMhF,KAAK4S,KAAOyZ,EAAI,EAAIiB,EAAQ1a,MACtD5S,KAAKylB,QAAUxkB,KAAK+D,MAAMhF,KAAKyS,IAAM8Z,EAAI,EAAIe,EAAQ7a,KACrDzS,KAAK64D,YAAc53D,KAAK+D,MAAM/D,KAAKC,IAAImrB,EAAGE,GAAK,EACjD,CAEAyN,sBACE,MAAM94B,IAACA,EAAG+B,IAAEA,GAAOjD,KAAKqR,WAAU,GAElCrR,KAAKkB,KAAMkI,OAASlI,KAASua,MAAMva,GAAOA,EAAM,EAChDlB,KAAKiD,KAAMmG,OAASnG,KAASwY,MAAMxY,GAAOA,EAAM,EAGhDjD,KAAKg1D,wBACP,CAMAQ,mBACE,OAAOv0D,KAAKw0B,KAAKz1B,KAAK64D,YAAcX,GAAsBl4D,KAAKzG,SACjE,CAEAgiC,mBAAmBnhC,GACjB06D,GAAgBjuC,UAAU0U,mBAAmBj6B,KAAKtB,KAAM5F,GAGxD4F,KAAKu4D,aAAev4D,KAAK0Q,YACtBhT,KAAI,CAACpB,EAAOsM,KACX,MAAMzP,GAAQqvC,OAAaxoC,KAAKzG,QAAQ0rB,YAAYuW,SAAU,CAACl/B,EAAOsM,GAAQ5I,MAC9E,OAAO7G,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzCgS,QAAO,CAACmO,EAAGpgB,IAAM8G,KAAK/F,MAAMsiB,kBAAkBrjB,IACnD,CAEA4hC,MACE,MAAM1yB,EAAOpI,KAAKzG,QAEd6O,EAAK1O,SAAW0O,EAAK6c,YAAYvrB,QACnC0+D,GAAmBp4D,MAEnBA,KAAKi5D,eAAe,EAAG,EAAG,EAAG,EAEjC,CAEAA,eAAec,EAAcC,EAAeC,EAAaC,GACvDl6D,KAAKwlB,SAAWvkB,KAAK+D,OAAO+0D,EAAeC,GAAiB,GAC5Dh6D,KAAKylB,SAAWxkB,KAAK+D,OAAOi1D,EAAcC,GAAkB,GAC5Dl6D,KAAK64D,aAAe53D,KAAKC,IAAIlB,KAAK64D,YAAc,EAAG53D,KAAKgC,IAAI82D,EAAcC,EAAeC,EAAaC,GACxG,CAEAv0C,cAAc/c,GACZ,MAAMuxD,EAAkBh6C,KAAOngB,KAAKu4D,aAAav/D,QAAU,GACrD8nB,EAAa9gB,KAAKzG,QAAQunB,YAAc,EAE9C,OAAO4gC,QAAgB94C,EAAQuxD,GAAkBn6C,OAAUc,GAC7D,CAEAiF,8BAA8BzpB,GAC5B,IAAIue,OAAcve,GAChB,OAAO8U,IAIT,MAAMgpD,EAAgBp6D,KAAK64D,aAAe74D,KAAKiD,IAAMjD,KAAKkB,KAC1D,OAAIlB,KAAKzG,QAAQ8O,SACPrI,KAAKiD,IAAM3G,GAAS89D,GAEtB99D,EAAQ0D,KAAKkB,KAAOk5D,CAC9B,CAEAC,8BAA8B9wC,GAC5B,IAAI1O,OAAc0O,GAChB,OAAOnY,IAGT,MAAMkpD,EAAiB/wC,GAAYvpB,KAAK64D,aAAe74D,KAAKiD,IAAMjD,KAAKkB,MACvE,OAAOlB,KAAKzG,QAAQ8O,QAAUrI,KAAKiD,IAAMq3D,EAAiBt6D,KAAKkB,IAAMo5D,CACvE,CAEA3B,qBAAqB/vD,GACnB,MAAMqc,EAAcjlB,KAAKu4D,cAAgB,GAEzC,GAAI3vD,GAAS,GAAKA,EAAQqc,EAAYjsB,OAAQ,CAC5C,MAAMuhE,EAAat1C,EAAYrc,GAC/B,OA1LN,SAAiC8K,EAAQ9K,EAAOzP,GAC9C,OAAOwa,OAAcD,EAAQ,CAC3Bva,QACAyP,QACAvP,KAAM,cAEV,CAoLamhE,CAAwBx6D,KAAKgQ,aAAcpH,EAAO2xD,EAC1D,CACH,CAEA3B,iBAAiBhwD,EAAO6xD,EAAoBhC,EAAkB,GAC5D,MAAMl3C,EAAQvhB,KAAK2lB,cAAc/c,GAASgZ,IAAU62C,EACpD,MAAO,CACL/qD,EAAGzM,KAAKggB,IAAIM,GAASk5C,EAAqBz6D,KAAKwlB,QAC/CrrB,EAAG8G,KAAKkgB,IAAII,GAASk5C,EAAqBz6D,KAAKylB,QAC/ClE,QAEJ,CAEA6E,yBAAyBxd,EAAOtM,GAC9B,OAAO0D,KAAK44D,iBAAiBhwD,EAAO5I,KAAK+lB,8BAA8BzpB,GACzE,CAEAo+D,gBAAgB9xD,GACd,OAAO5I,KAAKomB,yBAAyBxd,GAAS,EAAG5I,KAAK++B,eACxD,CAEA47B,sBAAsB/xD,GACpB,MAAMgK,KAACA,MAAMH,QAAKC,EAAKC,OAAEA,GAAU3S,KAAKk5D,iBAAiBtwD,GACzD,MAAO,CACLgK,OACAH,MACAC,QACAC,SAEJ,CAKA6vB,iBACE,MAAMxjB,gBAACA,EAAiBhF,MAAMgL,SAACA,IAAahlB,KAAKzG,QACjD,GAAIylB,EAAiB,CACnB,MAAMlT,EAAM9L,KAAK8L,IACjBA,EAAI22B,OACJ32B,EAAIq3B,YACJy2B,GAAe55D,KAAMA,KAAK+lB,8BAA8B/lB,KAAK+0D,WAAY/vC,EAAUhlB,KAAKu4D,aAAav/D,QACrG8S,EAAI0rC,YACJ1rC,EAAIiT,UAAYC,EAChBlT,EAAIoB,OACJpB,EAAI62B,SACL,CACH,CAKAE,WACE,MAAM/2B,EAAM9L,KAAK8L,IACX1D,EAAOpI,KAAKzG,SACZwrB,WAACA,EAAU/K,KAAEA,SAAM0K,GAAUtc,EAC7B6mD,EAAajvD,KAAKu4D,aAAav/D,OAErC,IAAIE,EAAG6gB,EAAQpgB,EAmBf,GAjBIyO,EAAK6c,YAAYvrB,SA9UzB,SAAyBwO,EAAO+mD,GAC9B,MAAMnjD,IAACA,EAAKvS,SAAS0rB,YAACA,IAAgB/c,EAEtC,IAAK,IAAIhP,EAAI+1D,EAAa,EAAG/1D,GAAK,EAAGA,IAAK,CACxC,MAAMqnC,EAActb,EAAY6T,WAAW5wB,EAAMywD,qBAAqBz/D,IAChE4/D,GAASzhC,QAAOkJ,EAAYnJ,OAC5B1pB,EAACA,EAACvT,EAAEA,YAAGinC,OAAWxuB,EAAIH,IAAEA,QAAKC,SAAOC,GAAUzK,EAAMgxD,iBAAiBhgE,IACrEmpC,cAACA,GAAiB9B,EAExB,KAAK1lB,OAAcwnB,GAAgB,CACjC,MAAM+S,GAAe2H,QAAcxc,EAAY6U,cACzC9nB,GAAUO,OAAU0S,EAAY6B,iBACtCt2B,EAAIiT,UAAYsjB,EAEhB,MAAMu4B,EAAehoD,EAAO0a,EAAQ1a,KAC9BioD,EAAcpoD,EAAM6a,EAAQ7a,IAC5BqoD,EAAgBpoD,EAAQE,EAAO0a,EAAQlS,MACvC2/C,EAAiBpoD,EAASF,EAAM6a,EAAQnS,OAE1Ctf,OAAOqL,OAAOkuC,GAAchM,MAAK9vB,GAAW,IAANA,KACxCxN,EAAIq3B,aACJ6a,QAAmBlyC,EAAK,CACtB4B,EAAGktD,EACHzgE,EAAG0gE,EACHxuC,EAAGyuC,EACHvuC,EAAGwuC,EACHr9C,OAAQ03B,IAEVtpC,EAAIoB,QAEJpB,EAAI42B,SAASk4B,EAAcC,EAAaC,EAAeC,EAE1D,EAEDl3B,OACE/3B,EACA5D,EAAMqwD,aAAar/D,GACnBwU,EACAvT,EAAK2+D,EAAOxhC,WAAa,EACzBwhC,EACA,CACEl1D,MAAO28B,EAAY38B,MACnBw9B,UAAWA,EACXG,aAAc,UAGpB,CACF,CAgSMy5B,CAAgBh7D,KAAMivD,GAGpBj1C,EAAKtgB,SACPsG,KAAK5F,MAAMyG,SAAQ,CAACoB,EAAM2G,KACxB,GAAc,IAAVA,EAAa,CACfmR,EAAS/Z,KAAK+lB,8BAA8B9jB,EAAK3F,OACjD,MAAMmX,EAAUzT,KAAKgQ,WAAWpH,GAC1B23B,EAAcvmB,EAAK8e,WAAWrlB,GAC9B+sB,EAAoB9b,EAAOoU,WAAWrlB,IAtRtD,SAAwBvL,EAAO+yD,EAAcv9C,EAAQuxC,EAAY3vB,GAC/D,MAAMxzB,EAAM5D,EAAM4D,IACZkZ,EAAWi2C,EAAaj2C,UAExBphB,MAACA,YAAOwb,GAAa67C,GAErBj2C,IAAaiqC,IAAgBrrD,IAAUwb,GAAa1B,EAAS,IAInE5R,EAAI22B,OACJ32B,EAAImT,YAAcrb,EAClBkI,EAAIsT,UAAYA,EAChBtT,EAAIm3B,YAAY3D,EAAWqB,MAC3B70B,EAAIo3B,eAAiB5D,EAAWuB,WAEhC/0B,EAAIq3B,YACJy2B,GAAe1xD,EAAOwV,EAAQsH,EAAUiqC,GACxCnjD,EAAI0rC,YACJ1rC,EAAIw3B,SACJx3B,EAAI62B,UACN,CAmQUu4B,CAAel7D,KAAMugC,EAAaxmB,EAAQk1C,EAAYzuB,EACvD,KAIDzb,EAAWrrB,QAAS,CAGtB,IAFAoS,EAAI22B,OAECvpC,EAAI+1D,EAAa,EAAG/1D,GAAK,EAAGA,IAAK,CACpC,MAAMqnC,EAAcxb,EAAW+T,WAAW94B,KAAK24D,qBAAqBz/D,KAC9D0K,MAACA,YAAOwb,GAAamhB,EAEtBnhB,GAAcxb,IAInBkI,EAAIsT,UAAYA,EAChBtT,EAAImT,YAAcrb,EAElBkI,EAAIm3B,YAAY1C,EAAYG,YAC5B50B,EAAIo3B,eAAiB3C,EAAYK,iBAEjC7mB,EAAS/Z,KAAK+lB,8BAA8B3d,EAAKhO,MAAMiO,QAAUrI,KAAKkB,IAAMlB,KAAKiD,KACjFtJ,EAAWqG,KAAK44D,iBAAiB1/D,EAAG6gB,GACpCjO,EAAIq3B,YACJr3B,EAAIs3B,OAAOpjC,KAAKwlB,QAASxlB,KAAKylB,SAC9B3Z,EAAIu3B,OAAO1pC,EAAS+T,EAAG/T,EAASQ,GAChC2R,EAAIw3B,SACN,CAEAx3B,EAAI62B,SACL,CACH,CAKAa,aAAa,CAKbE,aACE,MAAM53B,EAAM9L,KAAK8L,IACX1D,EAAOpI,KAAKzG,QACZg7B,EAAWnsB,EAAKhO,MAEtB,IAAKm6B,EAAS76B,QACZ,OAGF,MAAMonB,EAAa9gB,KAAK2lB,cAAc,GACtC,IAAI5L,EAAQqB,EAEZtP,EAAI22B,OACJ32B,EAAI0sC,UAAUx4C,KAAKwlB,QAASxlB,KAAKylB,SACjC3Z,EAAIqvD,OAAOr6C,GACXhV,EAAIs1B,UAAY,SAChBt1B,EAAIy1B,aAAe,SAEnBvhC,KAAK5F,MAAMyG,SAAQ,CAACoB,EAAM2G,KACxB,GAAc,IAAVA,IAAgBR,EAAKC,QACvB,OAGF,MAAMk4B,EAAchM,EAASuE,WAAW94B,KAAKgQ,WAAWpH,IAClDi1B,GAAWxG,QAAOkJ,EAAYnJ,MAGpC,GAFArd,EAAS/Z,KAAK+lB,8BAA8B/lB,KAAK5F,MAAMwO,GAAOtM,OAE1DikC,EAAY2B,kBAAmB,CACjCp2B,EAAIsrB,KAAOyG,EAASM,OACpB/iB,EAAQtP,EAAIq7C,YAAYllD,EAAK9I,OAAOiiB,MACpCtP,EAAIiT,UAAYwhB,EAAY8B,cAE5B,MAAM/U,GAAUO,OAAU0S,EAAY6B,iBACtCt2B,EAAI42B,UACDtnB,EAAQ,EAAIkS,EAAQ1a,MACpBmH,EAAS8jB,EAAS71B,KAAO,EAAIslB,EAAQ7a,IACtC2I,EAAQkS,EAAQlS,MAChByiB,EAAS71B,KAAOslB,EAAQnS,OAE3B,EAED0oB,OAAW/3B,EAAK7J,EAAK9I,MAAO,GAAI4gB,EAAQ8jB,EAAU,CAChDj6B,MAAO28B,EAAY38B,OACrB,IAGFkI,EAAI62B,SACN,CAKAoB,YAAY,ECjnBd,MAAMq3B,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMtzD,KAAM,EAAGuvD,MAAO,KAC5CgE,OAAQ,CAACD,QAAQ,EAAMtzD,KAAM,IAAMuvD,MAAO,IAC1CiE,OAAQ,CAACF,QAAQ,EAAMtzD,KAAM,IAAOuvD,MAAO,IAC3CkE,KAAM,CAACH,QAAQ,EAAMtzD,KAAM,KAASuvD,MAAO,IAC3CmE,IAAK,CAACJ,QAAQ,EAAMtzD,KAAM,MAAUuvD,MAAO,IAC3CoE,KAAM,CAACL,QAAQ,EAAOtzD,KAAM,OAAWuvD,MAAO,GAC9CqE,MAAO,CAACN,QAAQ,EAAMtzD,KAAM,OAASuvD,MAAO,IAC5CsE,QAAS,CAACP,QAAQ,EAAOtzD,KAAM,OAASuvD,MAAO,GAC/CuE,KAAM,CAACR,QAAQ,EAAMtzD,KAAM,SAMvB+zD,GAA6ClgE,OAAOC,KAAKs/D,IAM/D,SAASY,GAAOr9D,EAAGC,GACjB,OAAOD,EAAIC,CACb,CAOA,SAASnG,GAAMyP,EAAO+zD,GACpB,IAAIphD,OAAcohD,GAChB,OAAO,KAGT,MAAMC,EAAUh0D,EAAMi0D,UAChBC,OAACA,QAAQlmC,aAAOmmC,GAAcn0D,EAAMo0D,WAC1C,IAAIhgE,EAAQ2/D,EAaZ,MAXsB,mBAAXG,IACT9/D,EAAQ8/D,EAAO9/D,KAIZ8M,OAAS9M,KACZA,EAA0B,iBAAX8/D,EACXF,EAAQzjE,MAAM6D,EAA4B8/D,GAC1CF,EAAQzjE,MAAM6D,IAGN,OAAVA,EACK,MAGL45B,IACF55B,EAAkB,SAAV45B,KAAqB7R,OAASg4C,KAA8B,IAAfA,EAEjDH,EAAQj1C,QAAQ3qB,EAAO45B,GADvBgmC,EAAQj1C,QAAQ3qB,EAAO,UAAW+/D,KAIhC//D,EACV,CAUA,SAASigE,GAA0BC,EAASt7D,EAAK+B,EAAKw5D,GACpD,MAAM9zD,EAAOozD,GAAM/iE,OAEnB,IAAK,IAAIE,EAAI6iE,GAAM3/D,QAAQogE,GAAUtjE,EAAIyP,EAAO,IAAKzP,EAAG,CACtD,MAAMwjE,EAAWtB,GAAUW,GAAM7iE,IAC3ByK,EAAS+4D,EAASnF,MAAQmF,EAASnF,MAAQ7lD,OAAOirD,iBAExD,GAAID,EAASpB,QAAUr6D,KAAKw0B,MAAMxyB,EAAM/B,IAAQyC,EAAS+4D,EAAS10D,QAAUy0D,EAC1E,OAAOV,GAAM7iE,EAEjB,CAEA,OAAO6iE,GAAMpzD,EAAO,EACtB,CAuCA,SAASi0D,GAAQxiE,EAAOyiE,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAW9jE,OAAQ,CAC5B,MAAM8uB,GAACA,EAAEC,GAAEA,IAAMg1C,QAAQD,EAAYD,GAErCziE,EADkB0iE,EAAWh1C,IAAO+0C,EAAOC,EAAWh1C,GAAMg1C,EAAW/0C,KACpD,CACpB,OALC3tB,EAAMyiE,IAAQ,CAMlB,CA8BA,SAASG,GAAoB90D,EAAOhB,EAAQ+1D,GAC1C,MAAM7iE,EAAQ,GAERsD,EAAM,GACNiL,EAAOzB,EAAOlO,OACpB,IAAIE,EAAGoD,EAEP,IAAKpD,EAAI,EAAGA,EAAIyP,IAAQzP,EACtBoD,EAAQ4K,EAAOhO,GACfwE,EAAIpB,GAASpD,EAEbkB,EAAMnB,KAAK,CACTqD,QACA44B,OAAO,IAMX,OAAiB,IAATvsB,GAAes0D,EAxCzB,SAAuB/0D,EAAO9N,EAAOsD,EAAKu/D,GACxC,MAAMf,EAAUh0D,EAAMi0D,SAChB5mC,GAAS2mC,EAAQj1C,QAAQ7sB,EAAM,GAAGkC,MAAO2gE,GACzC3hD,EAAOlhB,EAAMA,EAAMpB,OAAS,GAAGsD,MACrC,IAAI44B,EAAOtsB,EAEX,IAAKssB,EAAQK,EAAOL,GAAS5Z,EAAM4Z,GAASgnC,EAAQt5D,IAAIsyB,EAAO,EAAG+nC,GAChEr0D,EAAQlL,EAAIw3B,GACRtsB,GAAS,IACXxO,EAAMwO,GAAOssB,OAAQ,GAGzB,OAAO96B,CACT,CA2B8C8iE,CAAch1D,EAAO9N,EAAOsD,EAAKu/D,GAAzC7iE,CACtC,CAEe,MAAM+iE,WAAkBxlC,GAErC/rB,UAAY,OAKZA,gBAAkB,CAQhB8wC,OAAQ,OAERv1B,SAAU,GACV01C,KAAM,CACJT,QAAQ,EACRtG,MAAM,EACN5/B,OAAO,EACPmmC,YAAY,EACZG,QAAS,cACTY,eAAgB,IAElBhjE,MAAO,CASLugC,OAAQ,OAERa,UAAU,EAEVtG,MAAO,CACLC,SAAS,KAQfp1B,YAAY+H,GACVwS,MAAMxS,GAGN9H,KAAKmX,OAAS,CACZ5e,KAAM,GACNe,OAAQ,GACRqO,IAAK,IAIP3H,KAAKq9D,MAAQ,MAEbr9D,KAAKs9D,gBAAa//D,EAClByC,KAAKu9D,SAAW,GAChBv9D,KAAKw9D,aAAc,EACnBx9D,KAAKs8D,gBAAa/+D,CACpB,CAEAupB,KAAKkpB,EAAW5nC,EAAO,IACrB,MAAMy0D,EAAO7sB,EAAU6sB,OAAS7sB,EAAU6sB,KAAO,IAE3CX,EAAUl8D,KAAKm8D,SAAW,IAAIh1C,EAASC,MAAM4oB,EAAU7oB,SAAS3mB,MAEtE07D,EAAQp1C,KAAK1e,IAMboiC,QAAQqyB,EAAKO,eAAgBlB,EAAQn1C,WAErC/mB,KAAKs8D,WAAa,CAChBF,OAAQS,EAAKT,OACblmC,MAAO2mC,EAAK3mC,MACZmmC,WAAYQ,EAAKR,YAGnB/hD,MAAMwM,KAAKkpB,GAEXhwC,KAAKw9D,YAAcp1D,EAAKq1D,UAC1B,CAOAhlE,MAAMob,EAAKjL,GACT,YAAYrL,IAARsW,EACK,KAEFpb,GAAMuH,KAAM6T,EACrB,CAEA4a,eACEnU,MAAMmU,eACNzuB,KAAKmX,OAAS,CACZ5e,KAAM,GACNe,OAAQ,GACRqO,IAAK,GAET,CAEAqyB,sBACE,MAAMzgC,EAAUyG,KAAKzG,QACf2iE,EAAUl8D,KAAKm8D,SACfrG,EAAOv8D,EAAQsjE,KAAK/G,MAAQ,MAElC,IAAI50D,IAACA,MAAK+B,aAAK8O,aAAYC,GAAchS,KAAKiS,gBAK9C,SAASyrD,EAAahhB,GACf3qC,GAAe0J,MAAMihC,EAAOx7C,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKw7C,EAAOx7C,MAExB8Q,GAAeyJ,MAAMihC,EAAOz5C,OAC/BA,EAAMhC,KAAKgC,IAAIA,EAAKy5C,EAAOz5C,KAE/B,CAGK8O,GAAeC,IAElB0rD,EAAa19D,KAAK29D,mBAIK,UAAnBpkE,EAAQmjD,QAA+C,WAAzBnjD,EAAQa,MAAMugC,QAC9C+iC,EAAa19D,KAAKqR,WAAU,KAIhCnQ,GAAMkI,OAASlI,KAASua,MAAMva,GAAOA,GAAOg7D,EAAQj1C,QAAQzlB,KAAKC,MAAOq0D,GACxE7yD,GAAMmG,OAASnG,KAASwY,MAAMxY,GAAOA,GAAOi5D,EAAQh1C,MAAM1lB,KAAKC,MAAOq0D,GAAQ,EAG9E91D,KAAKkB,IAAMD,KAAKC,IAAIA,EAAK+B,EAAM,GAC/BjD,KAAKiD,IAAMhC,KAAKgC,IAAI/B,EAAM,EAAG+B,EAC/B,CAKA06D,kBACE,MAAMvnD,EAAMpW,KAAK49D,qBACjB,IAAI18D,EAAMwQ,OAAOC,kBACb1O,EAAMyO,OAAOE,kBAMjB,OAJIwE,EAAIpd,SACNkI,EAAMkV,EAAI,GACVnT,EAAMmT,EAAIA,EAAIpd,OAAS,IAElB,CAACkI,MAAK+B,MACf,CAKAm3B,aACE,MAAM7gC,EAAUyG,KAAKzG,QACfskE,EAAWtkE,EAAQsjE,KACnBtoC,EAAWh7B,EAAQa,MACnB0iE,EAAiC,WAApBvoC,EAASoG,OAAsB36B,KAAK49D,qBAAuB59D,KAAK89D,YAE5D,UAAnBvkE,EAAQmjD,QAAsBogB,EAAW9jE,SAC3CgH,KAAKkB,IAAMlB,KAAKw4B,UAAYskC,EAAW,GACvC98D,KAAKiD,IAAMjD,KAAKu4B,UAAYukC,EAAWA,EAAW9jE,OAAS,IAG7D,MAAMkI,EAAMlB,KAAKkB,IACX+B,EAAMjD,KAAKiD,IAEX7I,GAAQ2jE,QAAejB,EAAY57D,EAAK+B,GAgB9C,OAXAjD,KAAKq9D,MAAQQ,EAAS/H,OAASvhC,EAASD,SACpCioC,GAA0BsB,EAASrB,QAASx8D,KAAKkB,IAAKlB,KAAKiD,IAAKjD,KAAKg+D,kBAAkB98D,IArR/F,SAAoCgH,EAAOwzB,EAAU8gC,EAASt7D,EAAK+B,GACjE,IAAK,IAAI/J,EAAI6iE,GAAM/iE,OAAS,EAAGE,GAAK6iE,GAAM3/D,QAAQogE,GAAUtjE,IAAK,CAC/D,MAAM48D,EAAOiG,GAAM7iE,GACnB,GAAIkiE,GAAUtF,GAAMwF,QAAUpzD,EAAMi0D,SAASn1C,KAAK/jB,EAAK/B,EAAK40D,IAASp6B,EAAW,EAC9E,OAAOo6B,CAEX,CAEA,OAAOiG,GAAMS,EAAUT,GAAM3/D,QAAQogE,GAAW,EAClD,CA6QQyB,CAA2Bj+D,KAAM5F,EAAMpB,OAAQ6kE,EAASrB,QAASx8D,KAAKkB,IAAKlB,KAAKiD,MACpFjD,KAAKs9D,WAAc/oC,EAASW,MAAMC,SAA0B,SAAfn1B,KAAKq9D,MAxQtD,SAA4BvH,GAC1B,IAAK,IAAI58D,EAAI6iE,GAAM3/D,QAAQ05D,GAAQ,EAAGntD,EAAOozD,GAAM/iE,OAAQE,EAAIyP,IAAQzP,EACrE,GAAIkiE,GAAUW,GAAM7iE,IAAIoiE,OACtB,OAAOS,GAAM7iE,EAGnB,CAmQQglE,CAAmBl+D,KAAKq9D,YADyC9/D,EAErEyC,KAAKm+D,YAAYrB,GAEbvjE,EAAQ8O,SACVjO,EAAMiO,UAGD20D,GAAoBh9D,KAAM5F,EAAO4F,KAAKs9D,WAC/C,CAEA1iC,gBAGM56B,KAAKzG,QAAQ6kE,qBACfp+D,KAAKm+D,YAAYn+D,KAAK5F,MAAMsD,KAAIuE,IAASA,EAAK3F,QAElD,CAUA6hE,YAAYrB,EAAa,IACvB,IAEIvnC,EAAOja,EAFPna,EAAQ,EACRmH,EAAM,EAGNtI,KAAKzG,QAAQwgB,QAAU+iD,EAAW9jE,SACpCu8B,EAAQv1B,KAAKq+D,mBAAmBvB,EAAW,IAEzC37D,EADwB,IAAtB27D,EAAW9jE,OACL,EAAIu8B,GAEHv1B,KAAKq+D,mBAAmBvB,EAAW,IAAMvnC,GAAS,EAE7Dja,EAAOtb,KAAKq+D,mBAAmBvB,EAAWA,EAAW9jE,OAAS,IAE5DsP,EADwB,IAAtBw0D,EAAW9jE,OACPsiB,GAECA,EAAOtb,KAAKq+D,mBAAmBvB,EAAWA,EAAW9jE,OAAS,KAAO,GAGhF,MAAMqnC,EAAQy8B,EAAW9jE,OAAS,EAAI,GAAM,IAC5CmI,GAAQm7B,OAAYn7B,EAAO,EAAGk/B,GAC9B/3B,GAAMg0B,OAAYh0B,EAAK,EAAG+3B,GAE1BrgC,KAAKu9D,SAAW,CAACp8D,QAAOmH,MAAK3E,OAAQ,GAAKxC,EAAQ,EAAImH,GACxD,CASAw1D,YACE,MAAM5B,EAAUl8D,KAAKm8D,SACfj7D,EAAMlB,KAAKkB,IACX+B,EAAMjD,KAAKiD,IACX1J,EAAUyG,KAAKzG,QACfskE,EAAWtkE,EAAQsjE,KAEnByB,EAAQT,EAAS/H,MAAQyG,GAA0BsB,EAASrB,QAASt7D,EAAK+B,EAAKjD,KAAKg+D,kBAAkB98D,IACtGq0D,GAAW1nD,OAAetU,EAAQa,MAAMm7D,SAAU,GAClDgJ,EAAoB,SAAVD,GAAmBT,EAASxB,WACtCmC,GAAan6C,OAASk6C,KAAwB,IAAZA,EAClCnkE,EAAQ,GACd,IACIyiE,EAAM3sD,EADNqlB,EAAQr0B,EAYZ,GARIs9D,IACFjpC,GAAS2mC,EAAQj1C,QAAQsO,EAAO,UAAWgpC,IAI7ChpC,GAAS2mC,EAAQj1C,QAAQsO,EAAOipC,EAAa,MAAQF,GAGjDpC,EAAQl1C,KAAK/jB,EAAK/B,EAAKo9D,GAAS,IAAS/I,EAC3C,MAAM,IAAI7uC,MAAMxlB,EAAM,QAAU+B,EAAM,uCAAyCsyD,EAAW,IAAM+I,GAGlG,MAAMxB,EAAsC,SAAzBvjE,EAAQa,MAAMugC,QAAqB36B,KAAKy+D,oBAC3D,IAAK5B,EAAOtnC,EAAOrlB,EAAQ,EAAG2sD,EAAO55D,EAAK45D,GAAQX,EAAQt5D,IAAIi6D,EAAMtH,EAAU+I,GAAQpuD,IACpF0sD,GAAQxiE,EAAOyiE,EAAMC,GAQvB,OALID,IAAS55D,GAA0B,UAAnB1J,EAAQmjD,QAAgC,IAAVxsC,GAChD0sD,GAAQxiE,EAAOyiE,EAAMC,GAIhBjhE,OAAOC,KAAK1B,GAAO4B,MAAK,CAAC2C,EAAGC,IAAMD,EAAIC,IAAGlB,KAAIgQ,IAAMA,GAC5D,CAMA4E,iBAAiBhW,GACf,MAAM4/D,EAAUl8D,KAAKm8D,SACf0B,EAAW79D,KAAKzG,QAAQsjE,KAE9B,OAAIgB,EAASa,cACJxC,EAAQ7hE,OAAOiC,EAAOuhE,EAASa,eAEjCxC,EAAQ7hE,OAAOiC,EAAOuhE,EAAST,eAAeuB,SACvD,CAOAtkE,OAAOiC,EAAOjC,GACZ,MACM0sB,EADU/mB,KAAKzG,QACGsjE,KAAKO,eACvBtH,EAAO91D,KAAKq9D,MACZuB,EAAMvkE,GAAU0sB,EAAQ+uC,GAC9B,OAAO91D,KAAKm8D,SAAS9hE,OAAOiC,EAAOsiE,EACrC,CAWAC,oBAAoBhC,EAAMj0D,EAAOxO,EAAOC,GACtC,MAAMd,EAAUyG,KAAKzG,QACfulE,EAAYvlE,EAAQa,MAAMohC,SAEhC,GAAIsjC,EACF,OAAOx9D,OAAKw9D,EAAW,CAACjC,EAAMj0D,EAAOxO,GAAQ4F,MAG/C,MAAM+mB,EAAUxtB,EAAQsjE,KAAKO,eACvBtH,EAAO91D,KAAKq9D,MACZJ,EAAYj9D,KAAKs9D,WACjByB,EAAcjJ,GAAQ/uC,EAAQ+uC,GAC9BkJ,EAAc/B,GAAal2C,EAAQk2C,GACnCh7D,EAAO7H,EAAMwO,GACbssB,EAAQ+nC,GAAa+B,GAAe/8D,GAAQA,EAAKizB,MAEvD,OAAOl1B,KAAKm8D,SAAS9hE,OAAOwiE,EAAMxiE,IAAW66B,EAAQ8pC,EAAcD,GACrE,CAKAxjC,mBAAmBnhC,GACjB,IAAIlB,EAAGyP,EAAM1G,EAEb,IAAK/I,EAAI,EAAGyP,EAAOvO,EAAMpB,OAAQE,EAAIyP,IAAQzP,EAC3C+I,EAAO7H,EAAMlB,GACb+I,EAAK9I,MAAQ6G,KAAK6+D,oBAAoB58D,EAAK3F,MAAOpD,EAAGkB,EAEzD,CAMAikE,mBAAmB/hE,GACjB,OAAiB,OAAVA,EAAiB8U,KAAO9U,EAAQ0D,KAAKkB,MAAQlB,KAAKiD,IAAMjD,KAAKkB,IACtE,CAMA2W,iBAAiBvb,GACf,MAAM2iE,EAAUj/D,KAAKu9D,SACfjzC,EAAMtqB,KAAKq+D,mBAAmB/hE,GACpC,OAAO0D,KAAK0c,oBAAoBuiD,EAAQ99D,MAAQmpB,GAAO20C,EAAQt7D,OACjE,CAMAiZ,iBAAiB8hB,GACf,MAAMugC,EAAUj/D,KAAKu9D,SACfjzC,EAAMtqB,KAAK8+B,mBAAmBJ,GAASugC,EAAQt7D,OAASs7D,EAAQ32D,IACtE,OAAOtI,KAAKkB,IAAMopB,GAAOtqB,KAAKiD,IAAMjD,KAAKkB,IAC3C,CAOAg+D,cAAc/lE,GACZ,MAAMgmE,EAAYn/D,KAAKzG,QAAQa,MACzBglE,EAAiBp/D,KAAK8L,IAAIq7C,YAAYhuD,GAAOiiB,MAC7CmG,GAAQvB,OAAUhgB,KAAKya,eAAiB0kD,EAAUvjC,YAAcujC,EAAUxjC,aAC1E0jC,EAAcp+D,KAAKggB,IAAIM,GACvB+9C,EAAcr+D,KAAKkgB,IAAII,GACvBg+C,EAAev/D,KAAKk+B,wBAAwB,GAAGl2B,KAErD,MAAO,CACLqkB,EAAI+yC,EAAiBC,EAAgBE,EAAeD,EACpD/yC,EAAI6yC,EAAiBE,EAAgBC,EAAeF,EAExD,CAOArB,kBAAkBwB,GAChB,MAAM3B,EAAW79D,KAAKzG,QAAQsjE,KACxBO,EAAiBS,EAAST,eAG1B/iE,EAAS+iE,EAAeS,EAAS/H,OAASsH,EAAe/B,YACzDoE,EAAez/D,KAAK6+D,oBAAoBW,EAAa,EAAGxC,GAAoBh9D,KAAM,CAACw/D,GAAcx/D,KAAKs9D,YAAajjE,GACnH2N,EAAOhI,KAAKk/D,cAAcO,GAG1BhD,EAAWx7D,KAAK+D,MAAMhF,KAAKya,eAAiBza,KAAKob,MAAQpT,EAAKqkB,EAAIrsB,KAAKmb,OAASnT,EAAKukB,GAAK,EAChG,OAAOkwC,EAAW,EAAIA,EAAW,CACnC,CAKAgC,oBACE,IACIvlE,EAAGyP,EADHm0D,EAAa98D,KAAKmX,OAAO5e,MAAQ,GAGrC,GAAIukE,EAAW9jE,OACb,OAAO8jE,EAGT,MAAM5jC,EAAQl5B,KAAKiK,0BAEnB,GAAIjK,KAAKw9D,aAAetkC,EAAMlgC,OAC5B,OAAQgH,KAAKmX,OAAO5e,KAAO2gC,EAAM,GAAG/uB,WAAWgI,mBAAmBnS,MAGpE,IAAK9G,EAAI,EAAGyP,EAAOuwB,EAAMlgC,OAAQE,EAAIyP,IAAQzP,EAC3C4jE,EAAaA,EAAWxlD,OAAO4hB,EAAMhgC,GAAGiR,WAAWgI,mBAAmBnS,OAGxE,OAAQA,KAAKmX,OAAO5e,KAAOyH,KAAK0/D,UAAU5C,EAC5C,CAKAc,qBACE,MAAMd,EAAa98D,KAAKmX,OAAO7d,QAAU,GACzC,IAAIJ,EAAGyP,EAEP,GAAIm0D,EAAW9jE,OACb,OAAO8jE,EAGT,MAAMxjE,EAAS0G,KAAK0Q,YACpB,IAAKxX,EAAI,EAAGyP,EAAOrP,EAAON,OAAQE,EAAIyP,IAAQzP,EAC5C4jE,EAAW7jE,KAAKR,GAAMuH,KAAM1G,EAAOJ,KAGrC,OAAQ8G,KAAKmX,OAAO7d,OAAS0G,KAAKw9D,YAAcV,EAAa98D,KAAK0/D,UAAU5C,EAC9E,CAMA4C,UAAUx4D,GAER,OAAOqQ,OAAarQ,EAAOlL,KAAKggE,IAClC,ECtpBF,SAAS3gB,GAAYskB,EAAOnkD,EAAKnT,GAC/B,IAEIu3D,EAAYC,EAAYC,EAAYC,EAFpCj4C,EAAK,EACLC,EAAK43C,EAAM3mE,OAAS,EAEpBqP,GACEmT,GAAOmkD,EAAM73C,GAAIwC,KAAO9O,GAAOmkD,EAAM53C,GAAIuC,OACzCxC,KAAIC,OAAMJ,OAAag4C,EAAO,MAAOnkD,MAEvC8O,IAAKs1C,EAAY/C,KAAMiD,GAAcH,EAAM73C,MAC3CwC,IAAKu1C,EAAYhD,KAAMkD,GAAcJ,EAAM53C,MAEzCvM,GAAOmkD,EAAM73C,GAAI+0C,MAAQrhD,GAAOmkD,EAAM53C,GAAI80C,QAC1C/0C,KAAIC,OAAMJ,OAAag4C,EAAO,OAAQnkD,MAExCqhD,KAAM+C,EAAYt1C,IAAKw1C,GAAcH,EAAM73C,MAC3C+0C,KAAMgD,EAAYv1C,IAAKy1C,GAAcJ,EAAM53C,KAG/C,MAAMi4C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAetkD,EAAMokD,GAAcI,EAAOF,CACrF,CAEA,MAAMG,WAAwB9C,GAE5BvxD,UAAY,aAKZA,gBAAkBuxD,GAAU12D,SAK5B1G,YAAY+H,GACVwS,MAAMxS,GAGN9H,KAAKkgE,OAAS,GAEdlgE,KAAKmgE,aAAU5iE,EAEfyC,KAAKogE,iBAAc7iE,CACrB,CAKA4gE,cACE,MAAMrB,EAAa98D,KAAKqgE,yBAClBV,EAAQ3/D,KAAKkgE,OAASlgE,KAAKsgE,iBAAiBxD,GAClD98D,KAAKmgE,QAAU9kB,GAAYskB,EAAO3/D,KAAKkB,KACvClB,KAAKogE,YAAc/kB,GAAYskB,EAAO3/D,KAAKiD,KAAOjD,KAAKmgE,QACvD7lD,MAAM6jD,YAAYrB,EACpB,CAaAwD,iBAAiBxD,GACf,MAAM57D,IAACA,EAAG+B,IAAEA,GAAOjD,KACb4B,EAAQ,GACR+9D,EAAQ,GACd,IAAIzmE,EAAGyP,EAAM0H,EAAMoH,EAAMwF,EAEzB,IAAK/jB,EAAI,EAAGyP,EAAOm0D,EAAW9jE,OAAQE,EAAIyP,IAAQzP,EAChDue,EAAOqlD,EAAW5jE,GACdue,GAAQvW,GAAOuW,GAAQxU,GACzBrB,EAAM3I,KAAKwe,GAIf,GAAI7V,EAAM5I,OAAS,EAEjB,MAAO,CACL,CAAC6jE,KAAM37D,EAAKopB,IAAK,GACjB,CAACuyC,KAAM55D,EAAKqnB,IAAK,IAIrB,IAAKpxB,EAAI,EAAGyP,EAAO/G,EAAM5I,OAAQE,EAAIyP,IAAQzP,EAC3C+jB,EAAOrb,EAAM1I,EAAI,GACjBmX,EAAOzO,EAAM1I,EAAI,GACjBue,EAAO7V,EAAM1I,GAGT+H,KAAKi1B,OAAOjZ,EAAO5M,GAAQ,KAAOoH,GACpCkoD,EAAM1mE,KAAK,CAAC4jE,KAAMplD,EAAM6S,IAAKpxB,GAAKyP,EAAO,KAG7C,OAAOg3D,CACT,CAOAU,yBACE,IAAIvD,EAAa98D,KAAKmX,OAAOxP,KAAO,GAEpC,GAAIm1D,EAAW9jE,OACb,OAAO8jE,EAGT,MAAMvkE,EAAOyH,KAAKy+D,oBACZtlE,EAAQ6G,KAAK49D,qBAUnB,OANEd,EAHEvkE,EAAKS,QAAUG,EAAMH,OAGVgH,KAAK0/D,UAAUnnE,EAAK+e,OAAOne,IAE3BZ,EAAKS,OAAST,EAAOY,EAEpC2jE,EAAa98D,KAAKmX,OAAOxP,IAAMm1D,EAExBA,CACT,CAMAuB,mBAAmB/hE,GACjB,OAAQ++C,GAAYr7C,KAAKkgE,OAAQ5jE,GAAS0D,KAAKmgE,SAAWngE,KAAKogE,WACjE,CAMAxjD,iBAAiB8hB,GACf,MAAMugC,EAAUj/D,KAAKu9D,SACf5+B,EAAU3+B,KAAK8+B,mBAAmBJ,GAASugC,EAAQt7D,OAASs7D,EAAQ32D,IAC1E,OAAO+yC,GAAYr7C,KAAKkgE,OAAQvhC,EAAU3+B,KAAKogE,YAAcpgE,KAAKmgE,SAAS,EAC7E,E,gJCvIWtgE,SAAgB,CAC3B4mC,EACAxzB,GACAyL,GACAllB,G;;;;;;;urGCbK,SAASu1D,IACd,CAMK,MAAM7gB,EAAO,MAClB,IAAIrjC,EAAK,EACT,MAAO,IAAMA,GACf,EAHoB,GAUb,SAASgQ,EAAcve,GAC5B,OAAOA,OACT,CAOO,SAASyK,EAAqBzK,GACnC,GAAI4S,MAAMnI,SAAWmI,MAAMnI,QAAQzK,GACjC,OAAO,EAET,MAAMjD,EAAOwC,OAAOgrB,UAAU05C,SAASj/D,KAAKhF,GAC5C,MAAyB,YAArBjD,EAAKo3C,MAAM,EAAG,IAAuC,WAAnBp3C,EAAKo3C,OAAM,EAInD,CAOO,SAASlqC,EAASjK,GACvB,OAAiB,OAAVA,GAA4D,oBAA1CT,OAAOgrB,UAAU05C,SAASj/D,KAAKhF,EAC1D,CAMA,SAASkkE,EAAelkE,GACtB,OAAyB,iBAAVA,GAAsBA,aAAiBoV,SAAWtI,UAAU9M,EAC7E,CAUO,SAAS28B,EAAgB38B,EAAgBmkE,GAC9C,OAAOD,EAAelkE,GAASA,EAAQmkE,CACzC,CAOO,SAAS5yD,EAAkBvR,EAAsBmkE,GACtD,YAAwB,IAAVnkE,EAAwBmkE,EAAenkE,CACvD,CAEamkB,QAAe,CAACnkB,EAAwBokE,IAClC,iBAAVpkE,GAAsBA,EAAMqkE,SAAS,KAC1Cle,WAAWnmD,GAAS,KACjBA,EAAQokE,EAEFt+C,EAAc,CAAC9lB,EAAwBokE,IACjC,iBAAVpkE,GAAsBA,EAAMqkE,SAAS,KAC1Cle,WAAWnmD,GAAS,IAAMokE,GACvBpkE,EASA,SAASk/B,EACd16B,EACA2V,EACAmqD,GAEA,GAAI9/D,GAAyB,mBAAZA,EAAGQ,KAClB,OAAOR,EAAG8qD,MAAMgV,EAASnqD,EAE7B,CAuBO,SAAS+X,EACdqyC,EACA//D,EACA8/D,EACAv4D,GAEA,IAAInP,EAAW08B,EAAa95B,EAC5B,GAAIiL,EAAQ85D,GAEV,GADAjrC,EAAMirC,EAAS7nE,OACXqP,EACF,IAAKnP,EAAI08B,EAAM,EAAG18B,GAAK,EAAGA,IACxB4H,EAAGQ,KAAKs/D,EAASC,EAAS3nE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAI08B,EAAK18B,IACnB4H,EAAGQ,KAAKs/D,EAASC,EAAS3nE,GAAIA,QAG7B,GAAIqN,EAASs6D,GAGlB,IAFA/kE,EAAOD,OAAOC,KAAK+kE,GACnBjrC,EAAM95B,EAAK9C,OACNE,EAAI,EAAGA,EAAI08B,EAAK18B,IACnB4H,EAAGQ,KAAKs/D,EAASC,EAAS/kE,EAAK5C,IAAK4C,EAAK5C,GAG/C,CAQO,SAAS+6C,EAAe6sB,EAAuBC,GACpD,IAAI7nE,EAAWyP,EAAc+hB,EAAqBvR,EAElD,IAAK2nD,IAAOC,GAAMD,EAAG9nE,SAAW+nE,EAAG/nE,OACjC,OAAO,EAGT,IAAKE,EAAI,EAAGyP,EAAOm4D,EAAG9nE,OAAQE,EAAIyP,IAAQzP,EAIxC,GAHAwxB,EAAKo2C,EAAG5nE,GACRigB,EAAK4nD,EAAG7nE,GAEJwxB,EAAGxhB,eAAiBiQ,EAAGjQ,cAAgBwhB,EAAG9hB,QAAUuQ,EAAGvQ,MACzD,OAAO,EAIX,OAAO,CACT,CAMO,SAASo4D,EAASrmC,GACvB,GAAI5zB,EAAQ4zB,GACV,OAAOA,EAAOj9B,IAAIsjE,GAGpB,GAAIz6D,EAASo0B,GAAS,CACpB,MAAMr2B,EAASzI,OAAOgpC,OAAO,MACvB/oC,EAAOD,OAAOC,KAAK6+B,GACnBsmC,EAAOnlE,EAAK9C,OAClB,IAAI2lD,EAAI,EAER,KAAOA,EAAIsiB,IAAQtiB,EACjBr6C,EAAOxI,EAAK6iD,IAAMqiB,EAAMrmC,EAAO7+B,EAAK6iD,KAGtC,OAAOr6C,CACR,CAED,OAAOq2B,CACT,CAEA,SAASumC,EAAWr6D,GAClB,OAAkE,IAA3D,CAAC,YAAa,YAAa,eAAezK,QAAQyK,EAC3D,CAOO,SAASs6D,EAAQt6D,EAAavC,EAAmBq2B,EAAmBphC,GACzE,IAAK2nE,EAAWr6D,GACd,OAGF,MAAMu6D,EAAO98D,EAAOuC,GACdw6D,EAAO1mC,EAAO9zB,GAEhBN,EAAS66D,IAAS76D,EAAS86D,GAE7Bh8B,EAAM+7B,EAAMC,EAAM9nE,GAElB+K,EAAOuC,GAAOm6D,EAAMK,EAExB,CA0BO,SAASh8B,EAAS/gC,EAAWq2B,EAAqBphC,GACvD,MAAM4oD,EAAUp7C,EAAQ4zB,GAAUA,EAAS,CAACA,GACtChyB,EAAOw5C,EAAQnpD,OAErB,IAAKuN,EAASjC,GACZ,OAAOA,EAIT,MAAMg9D,GADN/nE,EAAUA,GAAW,IACE+nE,QAAUH,EACjC,IAAII,EAEJ,IAAK,IAAIroE,EAAI,EAAGA,EAAIyP,IAAQzP,EAAG,CAE7B,GADAqoE,EAAUpf,EAAQjpD,IACbqN,EAASg7D,GACZ,SAGF,MAAMzlE,EAAOD,OAAOC,KAAKylE,GACzB,IAAK,IAAI5iB,EAAI,EAAGsiB,EAAOnlE,EAAK9C,OAAQ2lD,EAAIsiB,IAAQtiB,EAC9C2iB,EAAOxlE,EAAK6iD,GAAIr6C,EAAQi9D,EAAShoE,EAErC,CAEA,OAAO+K,CACT,CAgBO,SAASkmC,EAAWlmC,EAAWq2B,GAEpC,OAAO0K,EAAS/gC,EAAQq2B,EAAQ,CAAC2mC,OAAQE,GAC3C,CAMO,SAASA,EAAU36D,EAAavC,EAAmBq2B,GACxD,IAAKumC,EAAWr6D,GACd,OAGF,MAAMu6D,EAAO98D,EAAOuC,GACdw6D,EAAO1mC,EAAO9zB,GAEhBN,EAAS66D,IAAS76D,EAAS86D,GAC7B72B,EAAQ42B,EAAMC,GACJxlE,OAAOgrB,UAAU46C,eAAengE,KAAKgD,EAAQuC,KACvDvC,EAAOuC,GAAOm6D,EAAMK,GAExB,CAKO,SAASK,EAAY/8B,EAAeroC,EAAgBw8C,EAAkByoB,QAC7DhkE,IAAVjB,GACF8Q,QAAQC,KAAKs3B,EAAQ,MAAQmU,EAC3B,gCAAkCyoB,EAAU,YAElD,CAGA,MAAMI,EAAe,CAEnB,GAAIroD,GAAKA,EAET5L,EAAGynC,GAAKA,EAAEznC,EACVvT,EAAGg7C,GAAKA,EAAEh7C,GAML,SAASynE,EAAU/6D,GACxB,MAAMi/B,EAAQj/B,EAAI6+B,MAAM,KAClB5pC,EAAiB,GACvB,IAAI+lE,EAAM,GACV,IAAK,MAAMC,KAAQh8B,EACjB+7B,GAAOC,EACHD,EAAIlB,SAAS,MACfkB,EAAMA,EAAIpxB,MAAM,GAAG,GAAM,KAEzB30C,EAAK7C,KAAK4oE,GACVA,EAAM,IAGV,OAAO/lE,CACT,CAiBO,SAASgV,EAAiBuJ,EAAgBxT,GAC/C,MAAMqlC,EAAWy1B,EAAa96D,KAAS86D,EAAa96D,GAhBtD,SAAyBA,GACvB,MAAM/K,EAAO8lE,EAAU/6D,GACvB,OAAOwT,IACL,IAAK,MAAMskC,KAAK7iD,EAAM,CACpB,GAAU,KAAN6iD,EAGF,MAEFtkC,EAAMA,GAAOA,EAAIskC,EACnB,CACA,OAAOtkC,EAEX,CAG6D0nD,CAAgBl7D,IAC3E,OAAOqlC,EAAS7xB,EAClB,CAKO,SAAS0tB,EAAY+jB,GAC1B,OAAOA,EAAI/jD,OAAO,GAAGi6D,cAAgBlW,EAAIrb,MAAM,EACjD,CAGap8B,QAAW/X,QAAoC,IAAVA,EAErCiwC,EAAcjwC,GAAsE,mBAAVA,EAG1Ew1C,EAAY,CAAInzC,EAAWC,KACtC,GAAID,EAAEqJ,OAASpJ,EAAEoJ,KACf,OAAO,EAGT,IAAK,MAAMnG,KAAQlD,EACjB,IAAKC,EAAEiE,IAAIhB,GACT,OAAO,EAIX,OAAO,CAAI,EAON,SAASgzC,EAAct1B,GAC5B,MAAkB,YAAXA,EAAElmB,MAAiC,UAAXkmB,EAAElmB,MAA+B,gBAAXkmB,EAAElmB,IACzD,CCvZO,MAAMyoB,EAAK7gB,KAAK6gB,GACV3B,EAAM,EAAI2B,EACVmgD,EAAQ9hD,EAAM2B,EACdogD,EAAWxwD,OAAOC,kBAClBwwD,EAAcrgD,EAAK,IACnBF,EAAUE,EAAK,EACfsgD,EAAatgD,EAAK,EAClBugD,EAAqB,EAALvgD,EAAS,EAEzBo1C,EAAQj2D,KAAKi2D,MACb7tD,EAAOpI,KAAKoI,KAElB,SAASmtD,EAAa9oD,EAAWvT,EAAW28B,GACjD,OAAO71B,KAAK2W,IAAIlK,EAAIvT,GAAK28B,CAC3B,CAKO,SAASw/B,EAAQplD,GACtB,MAAMoxD,EAAerhE,KAAKi1B,MAAMhlB,GAChCA,EAAQslD,EAAatlD,EAAOoxD,EAAcpxD,EAAQ,KAAQoxD,EAAepxD,EACzE,MAAMqxD,EAAYthE,KAAKkoB,IAAI,GAAIloB,KAAK+D,MAAMkyD,EAAMhmD,KAC1CsxD,EAAWtxD,EAAQqxD,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CACxB,CAMO,SAASxsC,EAAWz5B,GACzB,MAAM84B,EAAmB,GACnBlM,EAAOjoB,KAAKioB,KAAK5sB,GACvB,IAAIpD,EAEJ,IAAKA,EAAI,EAAGA,EAAIgwB,EAAMhwB,IAChBoD,EAAQpD,GAAM,IAChBk8B,EAAOn8B,KAAKC,GACZk8B,EAAOn8B,KAAKqD,EAAQpD,IAQxB,OALIgwB,KAAiB,EAAPA,IACZkM,EAAOn8B,KAAKiwB,GAGdkM,EAAOp5B,MAAK,CAAC2C,EAAGC,IAAMD,EAAIC,IAAGsD,MACtBkzB,CACT,CAEO,SAAS/Q,EAASo+C,GACvB,OAAQhnD,MAAMgnC,WAAWggB,KAAiBr5D,SAASq5D,EACrD,CAEO,SAASlM,EAAY7oD,EAAWopB,GACrC,MAAM4rC,EAAUzhE,KAAKi1B,MAAMxoB,GAC3B,OAAOg1D,EAAY5rC,GAAYppB,GAAQg1D,EAAU5rC,GAAYppB,CAC/D,CAKO,SAASkpD,EACdvsC,EACA/lB,EACAkhC,GAEA,IAAItsC,EAAWyP,EAAcrM,EAE7B,IAAKpD,EAAI,EAAGyP,EAAO0hB,EAAMrxB,OAAQE,EAAIyP,EAAMzP,IACzCoD,EAAQ+tB,EAAMnxB,GAAGssC,GACZ/pB,MAAMnf,KACTgI,EAAOpD,IAAMD,KAAKC,IAAIoD,EAAOpD,IAAK5E,GAClCgI,EAAOrB,IAAMhC,KAAKgC,IAAIqB,EAAOrB,IAAK3G,GAGxC,CAEO,SAAS0jB,EAAU2iD,GACxB,OAAOA,GAAW7gD,EAAK,IACzB,CAEO,SAASya,EAAUqmC,GACxB,OAAOA,GAAW,IAAM9gD,EAC1B,CASO,SAAS40C,EAAehpD,GAC7B,IAAKm1D,EAAen1D,GAClB,OAEF,IAAI6R,EAAI,EACJwtB,EAAI,EACR,KAAO9rC,KAAKi1B,MAAMxoB,EAAI6R,GAAKA,IAAM7R,GAC/B6R,GAAK,GACLwtB,IAEF,OAAOA,CACT,CAGO,SAASrjB,EACdo5C,EACAC,GAEA,MAAMC,EAAsBD,EAAWr1D,EAAIo1D,EAAYp1D,EACjDu1D,EAAsBF,EAAW5oE,EAAI2oE,EAAY3oE,EACjD+oE,EAA2BjiE,KAAKioB,KAAK85C,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAI1hD,EAAQtgB,KAAKkiE,MAAMF,EAAqBD,GAM5C,OAJIzhD,GAAS,GAAOO,IAClBP,GAASpB,GAGJ,CACLoB,QACAgI,SAAU25C,EAEd,CAEO,SAASzX,EAAsB3iC,EAAYC,GAChD,OAAO9nB,KAAKioB,KAAKjoB,KAAKkoB,IAAIJ,EAAIrb,EAAIob,EAAIpb,EAAG,GAAKzM,KAAKkoB,IAAIJ,EAAI5uB,EAAI2uB,EAAI3uB,EAAG,GACxE,CAMO,SAASipE,GAAWzkE,EAAWC,GACpC,OAAQD,EAAIC,EAAIqjE,GAAS9hD,EAAM2B,CACjC,CAMO,SAAS4/B,GAAgB/iD,GAC9B,OAAQA,EAAIwhB,EAAMA,GAAOA,CAC3B,CAKO,SAASqB,GAAcD,EAAepgB,EAAemH,EAAa+6D,GACvE,MAAM1kE,EAAI+iD,GAAgBngC,GACpB+hD,EAAI5hB,GAAgBvgD,GACpBoe,EAAImiC,GAAgBp5C,GACpBi7D,EAAe7hB,GAAgB4hB,EAAI3kE,GACnC6kE,EAAa9hB,GAAgBniC,EAAI5gB,GACjC8kE,EAAe/hB,GAAgB/iD,EAAI2kE,GACnCI,EAAahiB,GAAgB/iD,EAAI4gB,GACvC,OAAO5gB,IAAM2kE,GAAK3kE,IAAM4gB,GAAM8jD,GAAyBC,IAAM/jD,GACvDgkD,EAAeC,GAAcC,EAAeC,CACpD,CASO,SAASpnC,GAAYhgC,EAAe4E,EAAa+B,GACtD,OAAOhC,KAAKgC,IAAI/B,EAAKD,KAAKC,IAAI+B,EAAK3G,GACrC,CAMO,SAASsiC,GAAYtiC,GAC1B,OAAOggC,GAAYhgC,GAAO,MAAQ,MACpC,CASO,SAAS+7C,GAAW/7C,EAAe6E,EAAemH,EAAawuB,EAAU,MAC9E,OAAOx6B,GAAS2E,KAAKC,IAAIC,EAAOmH,GAAOwuB,GAAWx6B,GAAS2E,KAAKgC,IAAI9B,EAAOmH,GAAOwuB,CACpF,CCpLO,SAASimC,GACd4C,EACArjE,EACAqnE,GAEAA,EAAMA,GAAQ,CAAC/6D,GAAU+2D,EAAM/2D,GAAStM,GACxC,IAEIsnE,EAFA77C,EAAK43C,EAAM3mE,OAAS,EACpB8uB,EAAK,EAGT,KAAOC,EAAKD,EAAK,GACf87C,EAAO97C,EAAKC,GAAO,EACf47C,EAAIC,GACN97C,EAAK87C,EAEL77C,EAAK67C,EAIT,MAAO,CAAC97C,KAAIC,KACd,CAUO,MAAMJ,GAAe,CAC1Bg4C,EACA94D,EACAvK,EACAgf,IAEAyhD,GAAQ4C,EAAOrjE,EAAOgf,EAClB1S,IACA,MAAMi7D,EAAKlE,EAAM/2D,GAAO/B,GACxB,OAAOg9D,EAAKvnE,GAASunE,IAAOvnE,GAASqjE,EAAM/2D,EAAQ,GAAG/B,KAASvK,GAE/DsM,GAAS+2D,EAAM/2D,GAAO/B,GAAOvK,GAStBorB,GAAgB,CAC3Bi4C,EACA94D,EACAvK,IAEAygE,GAAQ4C,EAAOrjE,GAAOsM,GAAS+2D,EAAM/2D,GAAO/B,IAAQvK,IAS/C,SAASyhE,GAAe72D,EAAkBhG,EAAa+B,GAC5D,IAAI9B,EAAQ,EACRmH,EAAMpB,EAAOlO,OAEjB,KAAOmI,EAAQmH,GAAOpB,EAAO/F,GAASD,GACpCC,IAEF,KAAOmH,EAAMnH,GAAS+F,EAAOoB,EAAM,GAAKrF,GACtCqF,IAGF,OAAOnH,EAAQ,GAAKmH,EAAMpB,EAAOlO,OAC7BkO,EAAOupC,MAAMtvC,EAAOmH,GACpBpB,CACN,CAEA,MAAM48D,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WAgBhD,SAASz0D,GAAkBgb,EAAO4E,GACnC5E,EAAM05C,SACR15C,EAAM05C,SAASrjE,UAAUzH,KAAKg2B,IAIhCpzB,OAAOqjD,eAAe70B,EAAO,WAAY,CACvC80B,cAAc,EACdC,YAAY,EACZ9iD,MAAO,CACLoE,UAAW,CAACuuB,MAIhB60C,GAAYjjE,SAASgG,IACnB,MAAMX,EAAS,UAAY6hC,EAAYlhC,GACjCiS,EAAOuR,EAAMxjB,GAEnBhL,OAAOqjD,eAAe70B,EAAOxjB,EAAK,CAChCs4C,cAAc,EACdC,YAAY,EACZ9iD,SAASma,GACP,MAAM1Q,EAAM+S,EAAK8yC,MAAM5rD,KAAMyW,GAQ7B,OANA4T,EAAM05C,SAASrjE,UAAUG,SAASmjE,IACF,mBAAnBA,EAAO99D,IAChB89D,EAAO99D,MAAWuQ,MAIf1Q,CACT,GACF,IAEJ,CAQO,SAASgJ,GAAoBsb,EAAO4E,GACzC,MAAMg1C,EAAO55C,EAAM05C,SACnB,IAAKE,EACH,OAGF,MAAMvjE,EAAYujE,EAAKvjE,UACjBkI,EAAQlI,EAAUtE,QAAQ6yB,IAClB,IAAVrmB,GACFlI,EAAU6V,OAAO3N,EAAO,GAGtBlI,EAAU1H,OAAS,IAIvB8qE,GAAYjjE,SAASgG,WACZwjB,EAAMxjB,EAAI,WAGZwjB,EAAM05C,SACf,CAKO,SAASxsD,GAAgB3V,GAC9B,MAAMY,EAAM,IAAIuoC,IAChB,IAAI7xC,EAAWyP,EAEf,IAAKzP,EAAI,EAAGyP,EAAO/G,EAAM5I,OAAQE,EAAIyP,IAAQzP,EAC3CsJ,EAAII,IAAIhB,EAAM1I,IAGhB,OAAIsJ,EAAIwF,OAASW,EACR/G,EAGFsN,MAAMrU,KAAK2H,EACpB,CC/LO,SAASs7B,GAAWomC,EAAmBC,EAAmBC,GAC/D,OAAOD,EAAY,IAAMD,EAAY,MAAQE,CAC/C,CAKa/iE,SACW,oBAAX7J,OACF,SAASgkC,GACd,OAAOA,GACT,EAEKhkC,OAAO6sE,sBAOT,SAASpyC,GACdnxB,EACA8/D,GAEA,IAAI0D,EAAY,GACZC,GAAU,EAEd,OAAO,YAAY9tD,GAEjB6tD,EAAY7tD,EACP8tD,IACHA,GAAU,EACVljE,GAAiBC,KAAK9J,QAAQ,KAC5B+sE,GAAU,EACVzjE,EAAG8qD,MAAMgV,EAAS0D,MAGxB,CACF,CAKO,SAASx1B,GAAmChuC,EAA8BmE,GAC/E,IAAIu/D,EACJ,OAAO,YAAY/tD,GAOjB,OANIxR,GACFw/D,aAAaD,GACbA,EAAUE,WAAW5jE,EAAImE,EAAOwR,IAEhC3V,EAAG8qD,MAAM5rD,KAAMyW,GAEVxR,CACT,CACF,CAMO,MAAMwyB,GAAsBD,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrH0M,GAAiB,CAAC1M,EAAmCr2B,EAAemH,IAA0B,UAAVkvB,EAAoBr2B,EAAkB,QAAVq2B,EAAkBlvB,GAAOnH,EAAQmH,GAAO,EAMxJghD,GAAS,CAAC9xB,EAAoC5kB,EAAcF,EAAeu1C,IAE/EzwB,KADOywB,EAAM,OAAS,SACJv1C,EAAkB,WAAV8kB,GAAsB5kB,EAAOF,GAAS,EAAIE,EAOtE,SAASkR,GAAiCva,EAAqCoU,EAAwBkG,GAC5G,MAAM87B,EAAahiC,EAAO3kB,OAE1B,IAAImI,EAAQ,EACR+O,EAAQyvC,EAEZ,GAAIp2C,EAAK6G,QAAS,CAChB,MAAM7F,OAACA,UAAQe,GAAW/B,EACpBkB,EAAOF,EAAOE,MACdvJ,IAACA,EAAG+B,IAAEA,EAAG8O,WAAEA,EAAUC,WAAEA,GAAczH,EAAO0H,gBAE9CF,IACF5Q,EAAQm7B,GAAYr7B,KAAKC,IAEvBymB,GAAarc,EAASf,EAAOE,KAAMvJ,GAAK4mB,GAExCjE,EAAqB87B,EAAah4B,GAAahK,EAAQlT,EAAMF,EAAOsN,iBAAiB3W,IAAM4mB,IAC7F,EAAG63B,EAAa,IAGhBzvC,EADE8B,EACMsqB,GAAYr7B,KAAKgC,IAEvB0kB,GAAarc,EAASf,EAAOE,KAAMxH,GAAK,GAAM8kB,GAAK,EAEnDlE,EAAqB,EAAI8D,GAAahK,EAAQlT,EAAMF,EAAOsN,iBAAiB5U,IAAM,GAAM8kB,GAAK,GAC/F5mB,EAAOw+C,GAAcx+C,EAEbw+C,EAAax+C,CAExB,CAED,MAAO,CAACA,QAAO+O,QACjB,CAQO,SAAS6T,GAAoBxa,GAClC,MAAM+E,OAACA,EAAME,OAAEA,eAAQm2D,GAAgBp7D,EACjCq7D,EAAY,CAChBC,KAAMv2D,EAAOpN,IACb4jE,KAAMx2D,EAAOrL,IACb8hE,KAAMv2D,EAAOtN,IACb8jE,KAAMx2D,EAAOvL,KAEf,IAAK0hE,EAEH,OADAp7D,EAAKo7D,aAAeC,GACb,EAET,MAAM13C,EAAUy3C,EAAaE,OAASv2D,EAAOpN,KAC1CyjE,EAAaG,OAASx2D,EAAOrL,KAC7B0hE,EAAaI,OAASv2D,EAAOtN,KAC7ByjE,EAAaK,OAASx2D,EAAOvL,IAGhC,OADApH,OAAOwL,OAAOs9D,EAAcC,GACrB13C,CACT,CC/IA,MAAM+3C,GAAUzyD,GAAoB,IAANA,GAAiB,IAANA,EACnC0yD,GAAY,CAAC1yD,EAAW8wD,EAAWv2B,KAAgB9rC,KAAKkoB,IAAI,EAAG,IAAM3W,GAAK,IAAMvR,KAAKkgB,KAAK3O,EAAI8wD,GAAKnjD,EAAM4sB,GACzGo4B,GAAa,CAAC3yD,EAAW8wD,EAAWv2B,IAAc9rC,KAAKkoB,IAAI,GAAG,GAAM3W,GAAKvR,KAAKkgB,KAAK3O,EAAI8wD,GAAKnjD,EAAM4sB,GAAK,EAOvGnoC,GAAU,CACdE,OAAS0N,GAAcA,EAEvB4yD,WAAa5yD,GAAcA,EAAIA,EAE/B6yD,YAAc7yD,IAAeA,GAAKA,EAAI,GAEtC8yD,cAAgB9yD,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACV,MAAWA,GAAMA,EAAI,GAAK,GAE9B+yD,YAAc/yD,GAAcA,EAAIA,EAAIA,EAEpCgzD,aAAehzD,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhDizD,eAAiBjzD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9BkzD,YAAclzD,GAAcA,EAAIA,EAAIA,EAAIA,EAExCmzD,aAAenzD,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtDozD,eAAiBpzD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GAClB,KAASA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnCqzD,YAAcrzD,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5CszD,aAAetzD,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExDuzD,eAAiBvzD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtCwzD,WAAaxzD,GAAuC,EAAxBvR,KAAKggB,IAAIzO,EAAIoP,GAEzCqkD,YAAczzD,GAAcvR,KAAKkgB,IAAI3O,EAAIoP,GAEzCskD,cAAgB1zD,IAAc,IAAQvR,KAAKggB,IAAIa,EAAKtP,GAAK,GAEzD2zD,WAAa3zD,GAAqB,IAAPA,EAAY,EAAIvR,KAAKkoB,IAAI,EAAG,IAAM3W,EAAI,IAEjE4zD,YAAc5zD,GAAqB,IAAPA,EAAY,EAA4B,EAAvBvR,KAAKkoB,IAAI,GAAG,GAAM3W,GAE/D6zD,cAAgB7zD,GAAcyyD,GAAOzyD,GAAKA,EAAIA,EAAI,GAC9C,GAAMvR,KAAKkoB,IAAI,EAAG,IAAU,EAAJ3W,EAAQ,IAChC,IAAyC,EAAjCvR,KAAKkoB,IAAI,GAAG,IAAW,EAAJ3W,EAAQ,KAEvC8zD,WAAa9zD,GAAcA,GAAM,EAAKA,IAAMvR,KAAKioB,KAAK,EAAI1W,EAAIA,GAAK,GAEnE+zD,YAAc/zD,GAAcvR,KAAKioB,KAAK,GAAK1W,GAAK,GAAKA,GAErDg0D,cAAgBh0D,IAAgBA,GAAK,IAAO,GACxC,IAAQvR,KAAKioB,KAAK,EAAI1W,EAAIA,GAAK,GAC/B,IAAOvR,KAAKioB,KAAK,GAAK1W,GAAK,GAAKA,GAAK,GAEzCi0D,cAAgBj0D,GAAcyyD,GAAOzyD,GAAKA,EAAI0yD,GAAU1yD,EAAG,KAAO,IAElEk0D,eAAiBl0D,GAAcyyD,GAAOzyD,GAAKA,EAAI2yD,GAAW3yD,EAAG,KAAO,IAEpEm0D,iBAAiBn0D,GACf,MAAM8wD,EAAI,MAEV,OAAO2B,GAAOzyD,GAAKA,EACjBA,EAAI,GACA,GAAM0yD,GAAc,EAAJ1yD,EAAO8wD,EAHnB,KAIJ,GAAM,GAAM6B,GAAe,EAAJ3yD,EAAQ,EAAG8wD,EAJ9B,IAKZ,EAEAsD,WAAWp0D,GACT,MAAM8wD,EAAI,QACV,OAAO9wD,EAAIA,IAAM8wD,EAAI,GAAK9wD,EAAI8wD,EAChC,EAEAuD,YAAYr0D,GACV,MAAM8wD,EAAI,QACV,OAAQ9wD,GAAK,GAAKA,IAAM8wD,EAAI,GAAK9wD,EAAI8wD,GAAK,CAC5C,EAEAwD,cAAct0D,GACZ,IAAI8wD,EAAI,QACR,OAAK9wD,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhB8wD,GAAM,QAAe9wD,EAAI8wD,GAA3C,GAEF,KAAQ9wD,GAAK,GAAKA,IAAuB,GAAhB8wD,GAAM,QAAe9wD,EAAI8wD,GAAK,EAChE,EAEAyD,aAAev0D,GAAc,EAAI5N,GAAQoiE,cAAc,EAAIx0D,GAE3Dw0D,cAAcx0D,GACZ,MAAM4kD,EAAI,OACJrX,EAAI,KACV,OAAIvtC,EAAK,EAAIutC,EACJqX,EAAI5kD,EAAIA,EAEbA,EAAK,EAAIutC,EACJqX,GAAK5kD,GAAM,IAAMutC,GAAMvtC,EAAI,IAEhCA,EAAK,IAAMutC,EACNqX,GAAK5kD,GAAM,KAAOutC,GAAMvtC,EAAI,MAE9B4kD,GAAK5kD,GAAM,MAAQutC,GAAMvtC,EAAI,OACtC,EAEAy0D,gBAAkBz0D,GAAeA,EAAI,GACH,GAA9B5N,GAAQmiE,aAAiB,EAAJv0D,GACc,GAAnC5N,GAAQoiE,cAAkB,EAAJx0D,EAAQ,GAAW,ICpHxC,SAAS00D,GAAoB5qE,GAClC,GAAIA,GAA0B,iBAAVA,EAAoB,CACtC,MAAMjD,EAAOiD,EAAMikE,WACnB,MAAgB,2BAATlnE,GAA8C,4BAATA,CAC7C,CAED,OAAO,CACT,CAWO,SAASuK,GAAMtH,GACpB,OAAO4qE,GAAoB5qE,GAASA,EAAQ,IAAI6qE,WAAM7qE,EACxD,CAKO,SAAS8qE,GAAc9qE,GAC5B,OAAO4qE,GAAoB5qE,GACvBA,EACA,IAAI6qE,WAAM7qE,GAAO+qE,SAAS,IAAKC,OAAO,IAAKpjE,WACjD,CC/BA,MAAM9F,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CmpE,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAIrnE,IAaf,SAAS8iB,GAAawkD,EAAavkD,EAAgB3pB,GACxD,OAZF,SAAyB2pB,EAAgB3pB,GACvCA,EAAUA,GAAW,GACrB,MAAM4a,EAAW+O,EAAS1qB,KAAKkvE,UAAUnuE,GACzC,IAAIulE,EAAY0I,GAAUnlE,IAAI8R,GAK9B,OAJK2qD,IACHA,EAAY,IAAI6I,KAAKC,aAAa1kD,EAAQ3pB,GAC1CiuE,GAAUhlE,IAAI2R,EAAU2qD,IAEnBA,CACT,CAGS+I,CAAgB3kD,EAAQ3pB,GAASc,OAAOotE,EACjD,CCRA,MAAM1Q,GAAa,CAOjB7vD,OAAO5K,GACEyK,EAAQzK,GAAkCA,EAAS,GAAKA,EAWjE06D,QAAQ8Q,EAAWl/D,EAAOxO,GACxB,GAAkB,IAAd0tE,EACF,MAAO,IAGT,MAAM5kD,EAASljB,KAAK/F,MAAMV,QAAQ2pB,OAClC,IAAI6kD,EACAC,EAAQF,EAEZ,GAAI1tE,EAAMpB,OAAS,EAAG,CAEpB,MAAMivE,EAAUhnE,KAAKgC,IAAIhC,KAAK2W,IAAIxd,EAAM,GAAGkC,OAAQ2E,KAAK2W,IAAIxd,EAAMA,EAAMpB,OAAS,GAAGsD,SAChF2rE,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAmCN,SAAwBF,EAAW1tE,GAGjC,IAAI4tE,EAAQ5tE,EAAMpB,OAAS,EAAIoB,EAAM,GAAGkC,MAAQlC,EAAM,GAAGkC,MAAQlC,EAAM,GAAGkC,MAAQlC,EAAM,GAAGkC,MAGvF2E,KAAK2W,IAAIowD,IAAU,GAAKF,IAAc7mE,KAAK+D,MAAM8iE,KAEnDE,EAAQF,EAAY7mE,KAAK+D,MAAM8iE,IAEjC,OAAOE,CACT,CA9CcE,CAAeJ,EAAW1tE,EACnC,CAED,MAAM+tE,EAAWjR,EAAMj2D,KAAK2W,IAAIowD,IAC1BI,EAAannE,KAAKgC,IAAIhC,KAAKC,KAAI,EAAKD,KAAK+D,MAAMmjE,GAAW,IAAK,GAE/D5uE,EAAU,CAACwuE,WAAUztE,sBAAuB8tE,EAAYC,sBAAuBD,GAGrF,OAFAvsE,OAAOwL,OAAO9N,EAASyG,KAAKzG,QAAQa,MAAMC,QAEnC4oB,GAAa6kD,EAAW5kD,EAAQ3pB,EACzC,EAWAy+D,YAAY8P,EAAWl/D,EAAOxO,GAC5B,GAAkB,IAAd0tE,EACF,MAAO,IAET,MAAMniE,EAASvL,EAAMwO,GAAOivD,aAAgBiQ,EAAa7mE,KAAKkoB,IAAI,GAAIloB,KAAK+D,MAAMkyD,EAAM4Q,KACvF,MAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAI98C,SAASrlB,IAAWiD,EAAQ,GAAMxO,EAAMpB,OACxD+9D,GAAWC,QAAQ11D,KAAKtB,KAAM8nE,EAAWl/D,EAAOxO,GAElD,EACT,GAsBF,IAAA08D,GAAe,CAACC,eCzFHzwB,SAAYzqC,OAAOgpC,OAAO,MAC1BsB,GAActqC,OAAOgpC,OAAO,MAOzC,SAASyjC,GAAS53C,EAAM7pB,GACtB,IAAKA,EACH,OAAO6pB,EAET,MAAM50B,EAAO+K,EAAI6+B,MAAM,KACvB,IAAK,IAAIxsC,EAAI,EAAGupE,EAAI3mE,EAAK9C,OAAQE,EAAIupE,IAAKvpE,EAAG,CAC3C,MAAMylD,EAAI7iD,EAAK5C,GACfw3B,EAAOA,EAAKiuB,KAAOjuB,EAAKiuB,GAAK9iD,OAAOgpC,OAAO,MAC7C,CACA,OAAOnU,CACT,CAEA,SAASluB,GAAI+lE,EAAM5jC,EAAOz9B,GACxB,MAAqB,iBAAVy9B,EACFU,EAAMijC,GAASC,EAAM5jC,GAAQz9B,GAE/Bm+B,EAAMijC,GAASC,EAAM,IAAK5jC,EACnC,CAMO,MAAM6jC,GACXzoE,YAAYsoC,EAAcogC,GACxBzoE,KAAK0G,eAAYnJ,EACjByC,KAAKgf,gBAAkB,kBACvBhf,KAAKkf,YAAc,kBACnBlf,KAAK4D,MAAQ,OACb5D,KAAKtH,SAAW,GAChBsH,KAAK2xB,iBAAoBle,GAAYA,EAAQxZ,MAAMuxC,SAASrc,sBAC5DnvB,KAAKiT,SAAW,GAChBjT,KAAK6xC,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEF7xC,KAAKo3B,KAAO,CACVsxC,OAAQ,qDACR1gE,KAAM,GACN8W,MAAO,SACPwY,WAAY,IACZ/T,OAAQ,MAEVvjB,KAAKq0C,MAAQ,GACbr0C,KAAK2oE,qBAAuB,CAAC78D,EAAKvS,IAAY6tE,GAAc7tE,EAAQylB,iBACpEhf,KAAK4oE,iBAAmB,CAAC98D,EAAKvS,IAAY6tE,GAAc7tE,EAAQ2lB,aAChElf,KAAK6oE,WAAa,CAAC/8D,EAAKvS,IAAY6tE,GAAc7tE,EAAQqK,OAC1D5D,KAAKiO,UAAY,IACjBjO,KAAKsmB,YAAc,CACjBrd,KAAM,UACNse,WAAW,EACXe,kBAAkB,GAEpBtoB,KAAKivC,qBAAsB,EAC3BjvC,KAAKg1C,QAAU,KACfh1C,KAAKsf,QAAU,KACftf,KAAKiQ,SAAU,EACfjQ,KAAK0e,QAAU,GACf1e,KAAKkvC,YAAa,EAClBlvC,KAAKkI,WAAQ3K,EACbyC,KAAKxG,OAAS,GACdwG,KAAKyjB,UAAW,EAChBzjB,KAAKoT,yBAA0B,EAE/BpT,KAAKomC,SAASiC,GACdroC,KAAK4rD,MAAM6c,EACb,CAMAjmE,IAAImiC,EAAOz9B,GACT,OAAO1E,GAAIxC,KAAM2kC,EAAOz9B,EAC1B,CAKA7E,IAAIsiC,GACF,OAAO2jC,GAAStoE,KAAM2kC,EACxB,CAMAyB,SAASzB,EAAOz9B,GACd,OAAO1E,GAAI2jC,GAAaxB,EAAOz9B,EACjC,CAEA09B,SAASD,EAAOz9B,GACd,OAAO1E,GAAI8jC,GAAW3B,EAAOz9B,EAC/B,CAmBA++B,MAAMtB,EAAO/oB,EAAMoqB,EAAaD,GAC9B,MAAM+iC,EAAcR,GAAStoE,KAAM2kC,GAC7BokC,EAAoBT,GAAStoE,KAAMgmC,GACnCgjC,EAAc,IAAMptD,EAE1B/f,OAAOotE,iBAAiBH,EAAa,CAEnCE,CAACA,GAAc,CACb1sE,MAAOwsE,EAAYltD,GACnByjC,UAAU,GAGZzjC,CAACA,GAAO,CACNwjC,YAAY,EACZ/8C,MACE,MAAMymC,EAAQ9oC,KAAKgpE,GACb1kE,EAASykE,EAAkBhjC,GACjC,OAAIx/B,EAASuiC,GACJjtC,OAAOwL,OAAO,GAAI/C,EAAQwkC,GAE5Bj7B,EAAei7B,EAAOxkC,EAC/B,EACA9B,IAAIlG,GACF0D,KAAKgpE,GAAe1sE,CACtB,IAGN,CAEAsvD,MAAMsd,GACJA,EAASroE,SAAS+qD,GAAUA,EAAM5rD,OACpC,EAIF,IAAAyG,GAA+B,IAAI+hE,GAAS,CAC1CjqD,YAAc3C,IAAUA,EAAK8uC,WAAW,MACxClsC,WAAa5C,GAAkB,WAATA,EACtBy4B,MAAO,CACL2f,UAAW,eAEb1tC,YAAa,CACX/H,aAAa,EACbC,YAAY,IAEb,CH3KI,SAAiC/X,GACtCA,EAASjE,IAAI,YAAa,CACxByC,WAAO1H,EACPqD,SAAU,IACViE,OAAQ,eACR/D,QAAIvD,EACJ1C,UAAM0C,EACN4H,UAAM5H,EACNxC,QAAIwC,EACJlE,UAAMkE,IAGRkJ,EAAS2/B,SAAS,YAAa,CAC7B4tB,WAAW,EACXx1C,YAAY,EACZD,YAAc3C,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3EnV,EAASjE,IAAI,aAAc,CACzB+kE,OAAQ,CACNluE,KAAM,QACN2N,WAAYugE,IAEdnpE,QAAS,CACP/E,KAAM,SACN2N,WAAY5I,MAIhBqI,EAAS2/B,SAAS,aAAc,CAC9B4tB,UAAW,cAGbvtD,EAASjE,IAAI,cAAe,CAC1BiD,OAAQ,CACNiB,UAAW,CACT9F,SAAU,MAGdgxB,OAAQ,CACNlrB,UAAW,CACT9F,SAAU,IAGdqyC,KAAM,CACJzrC,WAAY,CACV+/D,OAAQ,CACN1sE,KAAM,eAERi2C,QAAS,CACPz3C,KAAM,UACNuH,SAAU,KAIhBoyC,KAAM,CACJxrC,WAAY,CACV+/D,OAAQ,CACNxsE,GAAI,eAEN+1C,QAAS,CACPz3C,KAAM,UACNwL,OAAQ,SACR/D,GAAIwY,GAAS,EAAJA,MAKnB,EIvEO,SAA8B7S,GACnCA,EAASjE,IAAI,SAAU,CACrB8uC,aAAa,EACbhkB,QAAS,CACP7a,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGZ,ECRO,SAA4BnM,GACjCA,EAASjE,IAAI,QAAS,CACpB9I,SAAS,EACTqgB,QAAQ,EACR1R,SAAS,EACT6R,aAAa,EASbwiC,OAAQ,QAMRhjB,MAAO,EAGP1f,KAAM,CACJtgB,SAAS,EACT0lB,UAAW,EACXmkB,iBAAiB,EACjBtM,WAAW,EACXxC,WAAY,EACZoH,UAAW,CAAChwB,EAAMtS,IAAYA,EAAQ6lB,UACtC0hB,UAAW,CAACj1B,EAAMtS,IAAYA,EAAQqK,MACtCmW,QAAQ,GAGV2K,OAAQ,CACNhrB,SAAS,EACTinC,KAAM,GACNE,WAAY,EACZzlB,MAAO,GAITxhB,MAAO,CAELF,SAAS,EAGTG,KAAM,GAGNyzB,QAAS,CACP7a,IAAK,EACLE,OAAQ,IAKZvY,MAAO,CACLuhC,YAAa,EACbC,YAAa,GACbmB,QAAQ,EACRgF,gBAAiB,EACjBF,gBAAiB,GACjBvU,QAAS,EACT5zB,SAAS,EACT46B,UAAU,EACV6K,gBAAiB,EACjBuC,YAAa,EAEblG,SAAUs7B,GAAMC,WAAW7vD,OAC3Bo3D,MAAO,GACPppC,MAAO,GACPsC,MAAO,SACPyJ,WAAY,OAEZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAIrB37B,EAASw/B,MAAM,cAAe,QAAS,GAAI,SAC3Cx/B,EAASw/B,MAAM,aAAc,QAAS,GAAI,eAC1Cx/B,EAASw/B,MAAM,eAAgB,QAAS,GAAI,eAC5Cx/B,EAASw/B,MAAM,cAAe,QAAS,GAAI,SAE3Cx/B,EAAS2/B,SAAS,QAAS,CACzB4tB,WAAW,EACXz1C,YAAc3C,IAAUA,EAAK8uC,WAAW,YAAc9uC,EAAK8uC,WAAW,UAAqB,aAAT9uC,GAAgC,WAATA,EACzG4C,WAAa5C,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9EnV,EAAS2/B,SAAS,SAAU,CAC1B4tB,UAAW,UAGbvtD,EAAS2/B,SAAS,cAAe,CAC/B7nB,YAAc3C,GAAkB,oBAATA,GAAuC,aAATA,EACrD4C,WAAa5C,GAAkB,oBAATA,GAE1B,ICjFO,SAASutD,GAAa/xC,GAC3B,OAAKA,GAAQvc,EAAcuc,EAAKpvB,OAAS6S,EAAcuc,EAAKsxC,QACnD,MAGDtxC,EAAKtY,MAAQsY,EAAKtY,MAAQ,IAAM,KACrCsY,EAAK7T,OAAS6T,EAAK7T,OAAS,IAAM,IACnC6T,EAAKpvB,KAAO,MACZovB,EAAKsxC,MACT,CAKO,SAASrqC,GAAavyB,EAAKvT,EAAM6lC,EAAIgrC,EAASjrC,GACnD,IAAIyqB,EAAYrwD,EAAK4lC,GAQrB,OAPKyqB,IACHA,EAAYrwD,EAAK4lC,GAAUryB,EAAIq7C,YAAYhpB,GAAQ/iB,MACnDgjB,EAAGnlC,KAAKklC,IAENyqB,EAAYwgB,IACdA,EAAUxgB,GAELwgB,CACT,CAKO,SAASrQ,GAAajtD,EAAKsrB,EAAMiyC,EAAen1D,GAErD,IAAI3b,GADJ2b,EAAQA,GAAS,IACA3b,KAAO2b,EAAM3b,MAAQ,GAClC6lC,EAAKlqB,EAAMqqB,eAAiBrqB,EAAMqqB,gBAAkB,GAEpDrqB,EAAMkjB,OAASA,IACjB7+B,EAAO2b,EAAM3b,KAAO,GACpB6lC,EAAKlqB,EAAMqqB,eAAiB,GAC5BrqB,EAAMkjB,KAAOA,GAGftrB,EAAI22B,OAEJ32B,EAAIsrB,KAAOA,EACX,IAAIgyC,EAAU,EACd,MAAMzgE,EAAO0gE,EAAcrwE,OAC3B,IAAIE,EAAGivB,EAAGyV,EAAM0rC,EAAOC,EACvB,IAAKrwE,EAAI,EAAGA,EAAIyP,EAAMzP,IAIpB,GAHAowE,EAAQD,EAAcnwE,GAGlBowE,UAA4D,IAAnBviE,EAAQuiE,GACnDF,EAAU/qC,GAAavyB,EAAKvT,EAAM6lC,EAAIgrC,EAASE,QAC1C,GAAIviE,EAAQuiE,GAGjB,IAAKnhD,EAAI,EAAGyV,EAAO0rC,EAAMtwE,OAAQmvB,EAAIyV,EAAMzV,IACzCohD,EAAcD,EAAMnhD,GAEhBohD,SAAsDxiE,EAAQwiE,KAChEH,EAAU/qC,GAAavyB,EAAKvT,EAAM6lC,EAAIgrC,EAASG,IAMvDz9D,EAAI62B,UAEJ,MAAMrE,EAAQF,EAAGplC,OAAS,EAC1B,GAAIslC,EAAQ+qC,EAAcrwE,OAAQ,CAChC,IAAKE,EAAI,EAAGA,EAAIolC,EAAOplC,WACdX,EAAK6lC,EAAGllC,IAEjBklC,EAAG7nB,OAAO,EAAG+nB,EACd,CACD,OAAO8qC,CACT,CAUO,SAASvqC,GAAY5kC,EAAOykC,EAAOtjB,GACxC,MAAMuW,EAAmB13B,EAAM43B,wBACzB23C,EAAsB,IAAVpuD,EAAcna,KAAKgC,IAAImY,EAAQ,EAAG,IAAO,EAC3D,OAAOna,KAAKi1B,OAAOwI,EAAQ8qC,GAAa73C,GAAoBA,EAAmB63C,CACjF,CAOO,SAASn6B,GAAYn3C,EAAQ4T,IAClCA,EAAMA,GAAO5T,EAAO8X,WAAW,OAE3ByyB,OAGJ32B,EAAI29D,iBACJ39D,EAAI49D,UAAU,EAAG,EAAGxxE,EAAOkjB,MAAOljB,EAAOijB,QACzCrP,EAAI62B,SACN,CAEO,SAASyZ,GAAUtwC,EAAKvS,EAASmU,EAAGvT,GACzC+uD,GAAgBp9C,EAAKvS,EAASmU,EAAGvT,EAAG,KACtC,CAEO,SAAS+uD,GAAgBp9C,EAAKvS,EAASmU,EAAGvT,EAAGkyB,GAClD,IAAIhzB,EAAMswE,EAASC,EAAS5hE,EAAMsmD,EAAclzC,EAAOyuD,EAAUC,EACjE,MAAMhrD,EAAQvlB,EAAQslB,WAChBT,EAAW7kB,EAAQ6kB,SACnBV,EAASnkB,EAAQmkB,OACvB,IAAIm3C,GAAOz2C,GAAY,GAAK+jD,EAE5B,GAAIrjD,GAA0B,iBAAVA,IAClBzlB,EAAOylB,EAAMyhD,WACA,8BAATlnE,GAAiD,+BAATA,GAM1C,OALAyS,EAAI22B,OACJ32B,EAAI0sC,UAAU9qC,EAAGvT,GACjB2R,EAAIqvD,OAAOtG,GACX/oD,EAAIi+D,UAAUjrD,GAAQA,EAAM1D,MAAQ,GAAI0D,EAAM3D,OAAS,EAAG2D,EAAM1D,MAAO0D,EAAM3D,aAC7ErP,EAAI62B,UAKR,KAAIlnB,MAAMiC,IAAWA,GAAU,GAA/B,CAMA,OAFA5R,EAAIq3B,YAEIrkB,GAER,QACMuN,EACFvgB,EAAIk+D,QAAQt8D,EAAGvT,EAAGkyB,EAAI,EAAG3O,EAAQ,EAAG,EAAGyC,GAEvCrU,EAAIiX,IAAIrV,EAAGvT,EAAGujB,EAAQ,EAAGyC,GAE3BrU,EAAI0rC,YACJ,MACF,IAAK,WACHp8B,EAAQiR,EAAIA,EAAI,EAAI3O,EACpB5R,EAAIs3B,OAAO11B,EAAIzM,KAAKkgB,IAAI0zC,GAAOz5C,EAAOjhB,EAAI8G,KAAKggB,IAAI4zC,GAAOn3C,GAC1Dm3C,GAAOwN,EACPv2D,EAAIu3B,OAAO31B,EAAIzM,KAAKkgB,IAAI0zC,GAAOz5C,EAAOjhB,EAAI8G,KAAKggB,IAAI4zC,GAAOn3C,GAC1Dm3C,GAAOwN,EACPv2D,EAAIu3B,OAAO31B,EAAIzM,KAAKkgB,IAAI0zC,GAAOz5C,EAAOjhB,EAAI8G,KAAKggB,IAAI4zC,GAAOn3C,GAC1D5R,EAAI0rC,YACJ,MACF,IAAK,cAQH8W,EAAwB,KAAT5wC,EACf1V,EAAO0V,EAAS4wC,EAChBqb,EAAU1oE,KAAKggB,IAAI4zC,EAAMuN,GAAcp6D,EACvC6hE,EAAW5oE,KAAKggB,IAAI4zC,EAAMuN,IAAe/1C,EAAIA,EAAI,EAAIiiC,EAAetmD,GACpE4hE,EAAU3oE,KAAKkgB,IAAI0zC,EAAMuN,GAAcp6D,EACvC8hE,EAAW7oE,KAAKkgB,IAAI0zC,EAAMuN,IAAe/1C,EAAIA,EAAI,EAAIiiC,EAAetmD,GACpE8D,EAAIiX,IAAIrV,EAAIm8D,EAAU1vE,EAAIyvE,EAAStb,EAAcuG,EAAM/yC,EAAI+yC,EAAMjzC,GACjE9V,EAAIiX,IAAIrV,EAAIo8D,EAAU3vE,EAAIwvE,EAASrb,EAAcuG,EAAMjzC,EAASizC,GAChE/oD,EAAIiX,IAAIrV,EAAIm8D,EAAU1vE,EAAIyvE,EAAStb,EAAcuG,EAAKA,EAAMjzC,GAC5D9V,EAAIiX,IAAIrV,EAAIo8D,EAAU3vE,EAAIwvE,EAASrb,EAAcuG,EAAMjzC,EAASizC,EAAM/yC,GACtEhW,EAAI0rC,YACJ,MACF,IAAK,OACH,IAAKp5B,EAAU,CACbpW,EAAO/G,KAAKgpE,QAAUvsD,EACtBtC,EAAQiR,EAAIA,EAAI,EAAIrkB,EACpB8D,EAAI4xC,KAAKhwC,EAAI0N,EAAOjhB,EAAI6N,EAAM,EAAIoT,EAAO,EAAIpT,GAC7C,KACD,CACD6sD,GAAOuN,EAET,IAAK,UACHyH,EAAW5oE,KAAKggB,IAAI4zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxCisD,EAAU1oE,KAAKggB,IAAI4zC,GAAOn3C,EAC1BksD,EAAU3oE,KAAKkgB,IAAI0zC,GAAOn3C,EAC1BosD,EAAW7oE,KAAKkgB,IAAI0zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxC5R,EAAIs3B,OAAO11B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIu3B,OAAO31B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B79D,EAAIu3B,OAAO31B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIu3B,OAAO31B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B79D,EAAI0rC,YACJ,MACF,IAAK,WACHqd,GAAOuN,EAET,IAAK,QACHyH,EAAW5oE,KAAKggB,IAAI4zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxCisD,EAAU1oE,KAAKggB,IAAI4zC,GAAOn3C,EAC1BksD,EAAU3oE,KAAKkgB,IAAI0zC,GAAOn3C,EAC1BosD,EAAW7oE,KAAKkgB,IAAI0zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxC5R,EAAIs3B,OAAO11B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIu3B,OAAO31B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIs3B,OAAO11B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B79D,EAAIu3B,OAAO31B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B,MACF,IAAK,OACHE,EAAW5oE,KAAKggB,IAAI4zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxCisD,EAAU1oE,KAAKggB,IAAI4zC,GAAOn3C,EAC1BksD,EAAU3oE,KAAKkgB,IAAI0zC,GAAOn3C,EAC1BosD,EAAW7oE,KAAKkgB,IAAI0zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxC5R,EAAIs3B,OAAO11B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIu3B,OAAO31B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIs3B,OAAO11B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B79D,EAAIu3B,OAAO31B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B9U,GAAOuN,EACPyH,EAAW5oE,KAAKggB,IAAI4zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxCisD,EAAU1oE,KAAKggB,IAAI4zC,GAAOn3C,EAC1BksD,EAAU3oE,KAAKkgB,IAAI0zC,GAAOn3C,EAC1BosD,EAAW7oE,KAAKkgB,IAAI0zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GACxC5R,EAAIs3B,OAAO11B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIu3B,OAAO31B,EAAIm8D,EAAU1vE,EAAIyvE,GAC7B99D,EAAIs3B,OAAO11B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B79D,EAAIu3B,OAAO31B,EAAIo8D,EAAU3vE,EAAIwvE,GAC7B,MACF,IAAK,OACHA,EAAUt9C,EAAIA,EAAI,EAAIprB,KAAKggB,IAAI4zC,GAAOn3C,EACtCksD,EAAU3oE,KAAKkgB,IAAI0zC,GAAOn3C,EAC1B5R,EAAIs3B,OAAO11B,EAAIi8D,EAASxvE,EAAIyvE,GAC5B99D,EAAIu3B,OAAO31B,EAAIi8D,EAASxvE,EAAIyvE,GAC5B,MACF,IAAK,OACH99D,EAAIs3B,OAAO11B,EAAGvT,GACd2R,EAAIu3B,OAAO31B,EAAIzM,KAAKggB,IAAI4zC,IAAQxoC,EAAIA,EAAI,EAAI3O,GAASvjB,EAAI8G,KAAKkgB,IAAI0zC,GAAOn3C,GACzE,MACF,KAAK,EACH5R,EAAI0rC,YAIN1rC,EAAIoB,OACA3T,EAAQ8lB,YAAc,GACxBvT,EAAIw3B,QAjHJ,CAmHJ,CAUO,SAAS9a,GAAe5K,EAAO1K,EAAM2Z,GAG1C,OAFAA,EAASA,GAAU,IAEX3Z,GAAS0K,GAASA,EAAMlQ,EAAIwF,EAAKN,KAAOia,GAAUjP,EAAMlQ,EAAIwF,EAAKR,MAAQma,GACjFjP,EAAMzjB,EAAI+Y,EAAKT,IAAMoa,GAAUjP,EAAMzjB,EAAI+Y,EAAKP,OAASka,CACzD,CAEO,SAAS8W,GAAS73B,EAAKoH,GAC5BpH,EAAI22B,OACJ32B,EAAIq3B,YACJr3B,EAAI4xC,KAAKxqC,EAAKN,KAAMM,EAAKT,IAAKS,EAAKR,MAAQQ,EAAKN,KAAMM,EAAKP,OAASO,EAAKT,KACzE3G,EAAIiH,MACN,CAEO,SAAS+wB,GAAWh4B,GACzBA,EAAI62B,SACN,CAKO,SAAS6W,GAAe1tC,EAAKgtC,EAAUx0C,EAAQ4lE,EAAMjhE,GAC1D,IAAK6vC,EACH,OAAOhtC,EAAIu3B,OAAO/+B,EAAOoJ,EAAGpJ,EAAOnK,GAErC,GAAa,WAAT8O,EAAmB,CACrB,MAAMkhE,GAAYrxB,EAASprC,EAAIpJ,EAAOoJ,GAAK,EAC3C5B,EAAIu3B,OAAO8mC,EAAUrxB,EAAS3+C,GAC9B2R,EAAIu3B,OAAO8mC,EAAU7lE,EAAOnK,EAC9B,KAAoB,UAAT8O,KAAuBihE,EAChCp+D,EAAIu3B,OAAOyV,EAASprC,EAAGpJ,EAAOnK,GAE9B2R,EAAIu3B,OAAO/+B,EAAOoJ,EAAGorC,EAAS3+C,GAEhC2R,EAAIu3B,OAAO/+B,EAAOoJ,EAAGpJ,EAAOnK,EAC9B,CAKO,SAASw/C,GAAe7tC,EAAKgtC,EAAUx0C,EAAQ4lE,GACpD,IAAKpxB,EACH,OAAOhtC,EAAIu3B,OAAO/+B,EAAOoJ,EAAGpJ,EAAOnK,GAErC2R,EAAIs+D,cACFF,EAAOpxB,EAASuxB,KAAOvxB,EAASwxB,KAChCJ,EAAOpxB,EAASyxB,KAAOzxB,EAAS0xB,KAChCN,EAAO5lE,EAAOgmE,KAAOhmE,EAAO+lE,KAC5BH,EAAO5lE,EAAOkmE,KAAOlmE,EAAOimE,KAC5BjmE,EAAOoJ,EACPpJ,EAAOnK,EACX,CAKO,SAAS0pC,GAAW/3B,EAAKjS,EAAM6T,EAAGvT,EAAGi9B,EAAMhvB,EAAO,IACvD,MAAM0kD,EAAQ/lD,EAAQlN,GAAQA,EAAO,CAACA,GAChCypC,EAASl7B,EAAK05B,YAAc,GAA0B,KAArB15B,EAAKw5B,YAC5C,IAAI1oC,EAAGyqB,EAMP,IAJA7X,EAAI22B,OACJ32B,EAAIsrB,KAAOA,EAAK+G,OA+BlB,SAAuBryB,EAAK1D,GACtBA,EAAKk6B,aACPx2B,EAAI0sC,UAAUpwC,EAAKk6B,YAAY,GAAIl6B,EAAKk6B,YAAY,IAGjDznB,EAAczS,EAAKgW,WACtBtS,EAAIqvD,OAAO/yD,EAAKgW,UAGdhW,EAAKxE,QACPkI,EAAIiT,UAAY3W,EAAKxE,OAGnBwE,EAAKg5B,YACPt1B,EAAIs1B,UAAYh5B,EAAKg5B,WAGnBh5B,EAAKm5B,eACPz1B,EAAIy1B,aAAen5B,EAAKm5B,aAE5B,CAlDEkpC,CAAc3+D,EAAK1D,GAEdlP,EAAI,EAAGA,EAAI4zD,EAAM9zD,SAAUE,EAC9ByqB,EAAOmpC,EAAM5zD,GAETkP,EAAK45B,UACP0oC,GAAa5+D,EAAK1D,EAAK45B,UAGrBsB,IACEl7B,EAAKw5B,cACP91B,EAAImT,YAAc7W,EAAKw5B,aAGpB/mB,EAAczS,EAAK05B,eACtBh2B,EAAIsT,UAAYhX,EAAK05B,aAGvBh2B,EAAI6+D,WAAWhnD,EAAMjW,EAAGvT,EAAGiO,EAAK6Z,WAGlCnW,EAAI09C,SAAS7lC,EAAMjW,EAAGvT,EAAGiO,EAAK6Z,UAC9B2oD,GAAa9+D,EAAK4B,EAAGvT,EAAGwpB,EAAMvb,GAE9BjO,GAAKi9B,EAAKE,WAGZxrB,EAAI62B,SACN,CAwBA,SAASioC,GAAa9+D,EAAK4B,EAAGvT,EAAGwpB,EAAMvb,GACrC,GAAIA,EAAKmhD,eAAiBnhD,EAAKyiE,UAAW,CAQxC,MAAMC,EAAUh/D,EAAIq7C,YAAYxjC,GAC1B/Q,EAAOlF,EAAIo9D,EAAQC,sBACnBr4D,EAAQhF,EAAIo9D,EAAQE,uBACpBv4D,EAAMtY,EAAI2wE,EAAQG,wBAClBt4D,EAASxY,EAAI2wE,EAAQI,yBACrBC,EAAc/iE,EAAKmhD,eAAiB92C,EAAME,GAAU,EAAIA,EAE9D7G,EAAImT,YAAcnT,EAAIiT,UACtBjT,EAAIq3B,YACJr3B,EAAIsT,UAAYhX,EAAKgjE,iBAAmB,EACxCt/D,EAAIs3B,OAAOxwB,EAAMu4D,GACjBr/D,EAAIu3B,OAAO3wB,EAAOy4D,GAClBr/D,EAAIw3B,QACL,CACH,CAEA,SAASonC,GAAa5+D,EAAK1D,GACzB,MAAMijE,EAAWv/D,EAAIiT,UAErBjT,EAAIiT,UAAY3W,EAAKxE,MACrBkI,EAAI42B,SAASt6B,EAAKwK,KAAMxK,EAAKqK,IAAKrK,EAAKgT,MAAOhT,EAAK+S,QACnDrP,EAAIiT,UAAYssD,CAClB,CAOO,SAASrtB,GAAmBlyC,EAAK4xC,GACtC,MAAMhwC,EAACA,EAACvT,EAAEA,EAACkyB,EAAEA,EAACE,EAAEA,EAAC7O,OAAEA,GAAUggC,EAG7B5xC,EAAIiX,IAAIrV,EAAIgQ,EAAOw/B,QAAS/iD,EAAIujB,EAAOw/B,QAASx/B,EAAOw/B,SAAUt7B,EAASE,GAAI,GAG9EhW,EAAIu3B,OAAO31B,EAAGvT,EAAIoyB,EAAI7O,EAAO0/B,YAG7BtxC,EAAIiX,IAAIrV,EAAIgQ,EAAO0/B,WAAYjjD,EAAIoyB,EAAI7O,EAAO0/B,WAAY1/B,EAAO0/B,WAAYt7B,EAAIF,GAAS,GAG1F9V,EAAIu3B,OAAO31B,EAAI2e,EAAI3O,EAAO2/B,YAAaljD,EAAIoyB,GAG3CzgB,EAAIiX,IAAIrV,EAAI2e,EAAI3O,EAAO2/B,YAAaljD,EAAIoyB,EAAI7O,EAAO2/B,YAAa3/B,EAAO2/B,YAAaz7B,EAAS,GAAG,GAGhG9V,EAAIu3B,OAAO31B,EAAI2e,EAAGlyB,EAAIujB,EAAOy/B,UAG7BrxC,EAAIiX,IAAIrV,EAAI2e,EAAI3O,EAAOy/B,SAAUhjD,EAAIujB,EAAOy/B,SAAUz/B,EAAOy/B,SAAU,GAAIv7B,GAAS,GAGpF9V,EAAIu3B,OAAO31B,EAAIgQ,EAAOw/B,QAAS/iD,EACjC,CClcA,MAAMmxE,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAalvE,EAAwB0L,GACnD,MAAMyjE,GAAW,GAAKnvE,GAAOovE,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPzjE,EAKT,OAFA1L,GAASmvE,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAOnvE,EACT,IAAK,IACHA,GAAS,IAMb,OAAO0L,EAAO1L,CAChB,CAUO,SAAS+4C,GAAkB/4C,EAAwCwL,GACxE,MAAMusB,EAAM,GACNs3C,EAAWplE,EAASuB,GACpBhM,EAAO6vE,EAAW9vE,OAAOC,KAAKgM,GAASA,EACvC8jE,EAAOrlE,EAASjK,GAClBqvE,EACEpnE,GAAQsJ,EAAevR,EAAMiI,GAAOjI,EAAMwL,EAAMvD,KAChDA,GAAQjI,EAAMiI,GAChB,IAAMjI,EAEV,IAAK,MAAMiI,KAAQzI,EACjBu4B,EAAI9vB,IAAqBqnE,EAAKrnE,IAnBS,EAqBzC,OAAO8vB,CACT,CAUO,SAASwoB,GAAOvgD,GACrB,OAAO+4C,GAAkB/4C,EAAO,CAACmW,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC5E,CASO,SAASmqC,GAAczgD,GAC5B,OAAO+4C,GAAkB/4C,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CAUO,SAASuxB,GAAUvxB,GACxB,MAAM+d,EAAMwiC,GAAOvgD,GAKnB,OAHA+d,EAAIe,MAAQf,EAAIzH,KAAOyH,EAAI3H,MAC3B2H,EAAIc,OAASd,EAAI5H,IAAM4H,EAAI1H,OAEpB0H,CACT,CAcO,SAASgd,GAAO99B,EAA4B49B,GACjD59B,EAAUA,GAAW,GACrB49B,EAAWA,GAAY1wB,GAAS2wB,KAEhC,IAAIpvB,EAAO6F,EAAetU,EAAQyO,KAAMmvB,EAASnvB,MAE7B,iBAATA,IACTA,EAAO6jE,SAAS7jE,EAAM,KAExB,IAAI8W,EAAQjR,EAAetU,EAAQulB,MAAOqY,EAASrY,OAC/CA,KAAW,GAAKA,GAAO4sD,MAAMH,MAC/Bn+D,QAAQC,KAAK,kCAAoCyR,EAAQ,KACzDA,OAAQvhB,GAGV,MAAM65B,EAAO,CACXsxC,OAAQ76D,EAAetU,EAAQmvE,OAAQvxC,EAASuxC,QAChDpxC,WAAYk0C,GAAa39D,EAAetU,EAAQ+9B,WAAYH,EAASG,YAAatvB,GAClFA,OACA8W,QACAyE,OAAQ1V,EAAetU,EAAQgqB,OAAQ4T,EAAS5T,QAChD4a,OAAQ,IAIV,OADA/G,EAAK+G,OAASgrC,GAAa/xC,GACpBA,CACT,CAaO,SAAS3yB,GAAQqnE,EAAwBr4D,EAAkB7K,EAAgBmjE,GAChF,IACI7yE,EAAWyP,EAAcrM,EADzB0vE,GAAY,EAGhB,IAAK9yE,EAAI,EAAGyP,EAAOmjE,EAAO9yE,OAAQE,EAAIyP,IAAQzP,EAE5C,GADAoD,EAAQwvE,EAAO5yE,QACDqE,IAAVjB,SAGYiB,IAAZkW,GAA0C,mBAAVnX,IAClCA,EAAQA,EAAMmX,GACdu4D,GAAY,QAEAzuE,IAAVqL,GAAuB7B,EAAQzK,KACjCA,EAAQA,EAAMsM,EAAQtM,EAAMtD,QAC5BgzE,GAAY,QAEAzuE,IAAVjB,GAIF,OAHIyvE,IAASC,IACXD,EAAKC,WAAY,GAEZ1vE,CAGb,CAQO,SAAS49B,GAAU+xC,EAAuCvyC,EAAwBxf,GACvF,MAAMhZ,IAACA,MAAK+B,GAAOgpE,EACbr9C,EAASxM,EAAYsX,GAAQz2B,EAAM/B,GAAO,GAC1CgrE,EAAW,CAAC5vE,EAAesG,IAAgBsX,GAAyB,IAAV5d,EAAc,EAAIA,EAAQsG,EAC1F,MAAO,CACL1B,IAAKgrE,EAAShrE,GAAMD,KAAK2W,IAAIgX,IAC7B3rB,IAAKipE,EAASjpE,EAAK2rB,GAEvB,CAUO,SAASjb,GAAcw4D,EAAuB14D,GACnD,OAAO5X,OAAOwL,OAAOxL,OAAOgpC,OAAOsnC,GAAgB14D,EACrD,CCrMO,SAASq5B,GAAgBj9B,EAAQ0E,EAAW,CAAC,IAAK63D,EAAav8D,EAAQsnB,EAAUk1C,EAAY,KAAMx8D,EAAO,KAC1GwE,EAAQ8iB,KACXA,EAAWm1C,GAAS,YAAaz8D,IAEnC,MAAMqE,EAAQ,CACZ,CAACq4D,OAAOC,aAAc,SACtB13D,YAAY,EACZ23D,QAAS58D,EACT68D,YAAaN,EACbpY,UAAW78B,EACXmsB,WAAY+oB,EACZznC,SAAWD,GAAUmI,GAAgB,CAACnI,KAAU90B,GAAS0E,EAAU63D,EAAYj1C,IAEjF,OAAO,IAAIw1C,MAAMz4D,EAAO,CAItB04D,gBAAetoE,EAAQC,YACdD,EAAOC,UACPD,EAAOuoE,aACPh9D,EAAO,GAAGtL,IACV,GAMTlC,KAAIiC,EAAQC,IACHuoE,GAAQxoE,EAAQC,GACrB,IA+QR,SAA8BA,EAAMgQ,EAAU1E,EAAQ6iB,GACpD,IAAIp2B,EACJ,IAAK,MAAMs3C,KAAUr/B,EAEnB,GADAjY,EAAQgwE,GAASS,GAAQn5B,EAAQrvC,GAAOsL,GACpCwE,EAAQ/X,GACV,OAAO0wE,GAAiBzoE,EAAMjI,GAC1B2wE,GAAkBp9D,EAAQ6iB,EAAOnuB,EAAMjI,GACvCA,CAGV,CAzRc4wE,CAAqB3oE,EAAMgQ,EAAU1E,EAAQvL,KAOvD6oE,0BAAyB7oE,EAAQC,IACxB6oE,QAAQD,yBAAyB7oE,EAAOmoE,QAAQ,GAAIloE,GAM7D0gC,mBACSmoC,QAAQnoC,eAAep1B,EAAO,IAMvChN,KAAIyB,EAAQC,IACH8oE,GAAqB/oE,GAAQ0mB,SAASzmB,GAM/C+oE,QAAQhpE,GACC+oE,GAAqB/oE,GAM9B9B,IAAI8B,EAAQC,EAAMjI,GAChB,MAAMixE,EAAUjpE,EAAOkpE,WAAalpE,EAAOkpE,SAAWnB,KAGtD,OAFA/nE,EAAOC,GAAQgpE,EAAQhpE,GAAQjI,SACxBgI,EAAOuoE,OACP,CACT,GAEJ,CAUO,SAASlgC,GAAeja,EAAOjf,EAASg6D,EAAU7gC,GACvD,MAAM14B,EAAQ,CACZY,YAAY,EACZs1B,OAAQ1X,EACRg7C,SAAUj6D,EACVk6D,UAAWF,EACXxiD,OAAQ,IAAI8f,IACZ1C,aAAcA,GAAa3V,EAAOka,GAClC9T,WAAahtB,GAAQ6gC,GAAeja,EAAO5mB,EAAK2hE,EAAU7gC,GAC1DhI,SAAWD,GAAUgI,GAAeja,EAAMkS,SAASD,GAAQlxB,EAASg6D,EAAU7gC,IAEhF,OAAO,IAAI+/B,MAAMz4D,EAAO,CAItB04D,gBAAetoE,EAAQC,YACdD,EAAOC,UACPmuB,EAAMnuB,IACN,GAMTlC,KAAIiC,EAAQC,EAAMqpE,IACTd,GAAQxoE,EAAQC,GACrB,IA0ER,SAA6BD,EAAQC,EAAMqpE,GACzC,MAAMxjC,OAACA,EAAMsjC,SAAEA,EAAQC,UAAEA,EAAWtlC,aAAclC,GAAe7hC,EACjE,IAAIhI,EAAQ8tC,EAAO7lC,GAGfgoC,EAAWjwC,IAAU6pC,EAAYkG,aAAa9nC,KAChDjI,EAYJ,SAA4BiI,EAAMjI,EAAOgI,EAAQspE,GAC/C,MAAMxjC,OAACA,WAAQsjC,YAAUC,EAAS1iD,OAAEA,GAAU3mB,EAC9C,GAAI2mB,EAAOpoB,IAAI0B,GAEb,MAAM,IAAImiB,MAAM,uBAAyBxX,MAAMrU,KAAKowB,GAAQ4a,KAAK,MAAQ,KAAOthC,GAElF0mB,EAAOroB,IAAI2B,GACXjI,EAAQA,EAAMoxE,EAAUC,GAAaC,GACrC3iD,EAAO3nB,OAAOiB,GACVyoE,GAAiBzoE,EAAMjI,KAEzBA,EAAQ2wE,GAAkB7iC,EAAOqiC,QAASriC,EAAQ7lC,EAAMjI,IAE1D,OAAOA,CACT,CA1BYuxE,CAAmBtpE,EAAMjI,EAAOgI,EAAQspE,IAE9C7mE,EAAQzK,IAAUA,EAAMtD,SAC1BsD,EAyBJ,SAAuBiI,EAAMjI,EAAOgI,EAAQgoC,GAC1C,MAAMlC,OAACA,EAAMsjC,SAAEA,EAAQC,UAAEA,EAAWtlC,aAAclC,GAAe7hC,EAEjE,GAAI+P,EAAQq5D,EAAS9kE,QAAU0jC,EAAY/nC,GACzCjI,EAAQA,EAAMoxE,EAAS9kE,MAAQtM,EAAMtD,aAChC,GAAIuN,EAASjK,EAAM,IAAK,CAE7B,MAAM8Z,EAAM9Z,EACNuT,EAASu6B,EAAOqiC,QAAQthE,QAAOm4D,GAAKA,IAAMltD,IAChD9Z,EAAQ,GACR,IAAK,MAAMuF,KAAQuU,EAAK,CACtB,MAAM81B,EAAW+gC,GAAkBp9D,EAAQu6B,EAAQ7lC,EAAM1C,GACzDvF,EAAMrD,KAAK0zC,GAAeT,EAAUwhC,EAAUC,GAAaA,EAAUppE,GAAO4hC,GAC9E,CACD,CACD,OAAO7pC,CACT,CAzCYwxE,CAAcvpE,EAAMjI,EAAOgI,EAAQ6hC,EAAYmG,cAErD0gC,GAAiBzoE,EAAMjI,KAEzBA,EAAQqwC,GAAerwC,EAAOoxE,EAAUC,GAAaA,EAAUppE,GAAO4hC,IAExE,OAAO7pC,CACT,CA1FcyxE,CAAoBzpE,EAAQC,EAAMqpE,KAO5CT,0BAAyB7oE,EAAQC,IACxBD,EAAO+jC,aAAamB,QACvB4jC,QAAQvqE,IAAI6vB,EAAOnuB,GAAQ,CAAC66C,YAAY,EAAMD,cAAc,QAAQ5hD,EACpE6vE,QAAQD,yBAAyBz6C,EAAOnuB,GAM9C0gC,mBACSmoC,QAAQnoC,eAAevS,GAMhC7vB,KAAIyB,EAAQC,IACH6oE,QAAQvqE,IAAI6vB,EAAOnuB,GAM5B+oE,YACSF,QAAQE,QAAQ56C,GAMzBlwB,KAAI8B,EAAQC,EAAMjI,KAChBo2B,EAAMnuB,GAAQjI,SACPgI,EAAOC,IACP,IAGb,CAKO,SAAS8jC,GAAa3V,EAAOjsB,EAAW,CAAC6iC,YAAY,EAAMC,WAAW,IAC3E,MAAMhrB,YAACA,EAAc9X,EAAS6iC,WAAU9qB,WAAEA,EAAa/X,EAAS8iC,UAASykC,SAAEA,EAAWvnE,EAAS+iC,SAAW9W,EAC1G,MAAO,CACL8W,QAASwkC,EACT1kC,WAAY/qB,EACZgrB,UAAW/qB,EACX6tB,aAAcE,EAAWhuB,GAAeA,EAAc,IAAMA,EAC5D+tB,YAAaC,EAAW/tB,GAAcA,EAAa,IAAMA,EAE7D,CAEA,MAAMuuD,GAAU,CAACn5B,EAAQh4B,IAASg4B,EAASA,EAAS7L,EAAYnsB,GAAQA,EAClEoxD,GAAmB,CAACzoE,EAAMjI,IAAUiK,EAASjK,IAAmB,aAATiI,IACzB,OAAjC1I,OAAOopC,eAAe3oC,IAAmBA,EAAMyD,cAAgBlE,QAElE,SAASixE,GAAQxoE,EAAQC,EAAME,GAC7B,GAAI5I,OAAOgrB,UAAU46C,eAAengE,KAAKgD,EAAQC,GAC/C,OAAOD,EAAOC,GAGhB,MAAMjI,EAAQmI,IAGd,OADAH,EAAOC,GAAQjI,EACRA,CACT,CAsDA,SAAS2xE,GAAgB92C,EAAU5yB,EAAMjI,GACvC,OAAOiwC,EAAWpV,GAAYA,EAAS5yB,EAAMjI,GAAS66B,CACxD,CAEA,MAAMmxC,GAAW,CAACzhE,EAAK6M,KAAmB,IAAR7M,EAAe6M,EAC9B,iBAAR7M,EAAmBiK,EAAiB4C,EAAQ7M,QAAOtJ,EAE9D,SAAS2wE,GAAU1rE,EAAK2rE,EAActnE,EAAKunE,EAAgB9xE,GACzD,IAAK,MAAMoX,KAAUy6D,EAAc,CACjC,MAAMxpC,EAAQ2jC,GAASzhE,EAAK6M,GAC5B,GAAIixB,EAAO,CACTniC,EAAII,IAAI+hC,GACR,MAAMxN,EAAW82C,GAAgBtpC,EAAMqvB,UAAWntD,EAAKvK,GACvD,GAAI+X,EAAQ8iB,IAAaA,IAAatwB,GAAOswB,IAAai3C,EAGxD,OAAOj3C,CAEX,MAAO,IAAc,IAAVwN,GAAmBtwB,EAAQ+5D,IAAmBvnE,IAAQunE,EAG/D,OAAO,IAEX,CACA,OAAO,CACT,CAEA,SAASnB,GAAkBkB,EAAcjiC,EAAU3nC,EAAMjI,GACvD,MAAM8vE,EAAalgC,EAASwgC,YACtBv1C,EAAW82C,GAAgB/hC,EAAS8nB,UAAWzvD,EAAMjI,GACrD+xE,EAAY,IAAIF,KAAiB/B,GACjC5pE,EAAM,IAAIuoC,IAChBvoC,EAAII,IAAItG,GACR,IAAIuK,EAAMynE,GAAiB9rE,EAAK6rE,EAAW9pE,EAAM4yB,GAAY5yB,EAAMjI,GACnE,OAAY,OAARuK,MAGAwN,EAAQ8iB,IAAaA,IAAa5yB,IACpCsC,EAAMynE,GAAiB9rE,EAAK6rE,EAAWl3C,EAAUtwB,EAAKvK,GAC1C,OAARuK,KAICimC,GAAgB59B,MAAMrU,KAAK2H,GAAM,CAAC,IAAK4pE,EAAYj1C,GACxD,IAUJ,SAAsB+U,EAAU3nC,EAAMjI,GACpC,MAAMoX,EAASw4B,EAASoX,aAClB/+C,KAAQmP,IACZA,EAAOnP,GAAQ,IAEjB,MAAMD,EAASoP,EAAOnP,GACtB,OAAIwC,EAAQzC,IAAWiC,EAASjK,GAEvBA,EAEFgI,GAAU,EACnB,CArBUiqE,CAAariC,EAAU3nC,EAAMjI,KACvC,CAEA,SAASgyE,GAAiB9rE,EAAK6rE,EAAWxnE,EAAKswB,EAAUt1B,GACvD,KAAOgF,GACLA,EAAMqnE,GAAU1rE,EAAK6rE,EAAWxnE,EAAKswB,EAAUt1B,GAEjD,OAAOgF,CACT,CA2BA,SAASylE,GAASzlE,EAAKgJ,GACrB,IAAK,MAAM80B,KAAS90B,EAAQ,CAC1B,IAAK80B,EACH,SAEF,MAAMroC,EAAQqoC,EAAM99B,GACpB,GAAIwN,EAAQ/X,GACV,OAAOA,CAEX,CACF,CAEA,SAAS+wE,GAAqB/oE,GAC5B,IAAIxI,EAAOwI,EAAOuoE,MAIlB,OAHK/wE,IACHA,EAAOwI,EAAOuoE,MAKlB,SAAkCh9D,GAChC,MAAMrN,EAAM,IAAIuoC,IAChB,IAAK,MAAMpG,KAAS90B,EAClB,IAAK,MAAMhJ,KAAOhL,OAAOC,KAAK6oC,GAAOx5B,QAAOwzC,IAAMA,EAAE+L,WAAW,OAC7DloD,EAAII,IAAIiE,GAGZ,OAAOqI,MAAMrU,KAAK2H,EACpB,CAb0BgsE,CAAyBlqE,EAAOmoE,UAEjD3wE,CACT,CAYO,SAASopB,GAA4B3b,EAAMhR,EAAM4I,EAAO+O,GAC7D,MAAM3F,OAACA,GAAUhB,GACX1C,IAACA,EAAM,KAAO7G,KAAKkM,SACnB9B,EAAS,IAAI8E,MAAMgB,GACzB,IAAIhX,EAAGyP,EAAMC,EAAO/G,EAEpB,IAAK3I,EAAI,EAAGyP,EAAOuH,EAAOhX,EAAIyP,IAAQzP,EACpC0P,EAAQ1P,EAAIiI,EACZU,EAAOtJ,EAAKqQ,GACZwB,EAAOlR,GAAK,CACVyE,EAAG4M,EAAO9R,MAAMqY,EAAiBjP,EAAMgF,GAAM+B,IAGjD,OAAOwB,CACT,CC/VA,MAAMqkE,GAAU/8D,OAAO+8D,SAAW,MAG5BC,GAAW,CAAC/wD,EAAuBzkB,IAAmCA,EAAIykB,EAAO3kB,SAAW2kB,EAAOzkB,GAAG6kB,MAAQJ,EAAOzkB,GACrHy1E,GAAgB1gE,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAAS2gE,GACdjqD,EACAkqD,EACAC,EACAt8D,GAUA,MAAMsmC,EAAWn0B,EAAW5G,KAAO8wD,EAAclqD,EAC3C48C,EAAUsN,EACV5xD,EAAO6xD,EAAW/wD,KAAO8wD,EAAcC,EACvCC,EAAMtjB,EAAsB8V,EAASzoB,GACrCk2B,EAAMvjB,EAAsBxuC,EAAMskD,GAExC,IAAI0N,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAMxzD,MAAMwzD,GAAO,EAAIA,EACvBC,EAAMzzD,MAAMyzD,GAAO,EAAIA,EAEvB,MAAMC,EAAK38D,EAAIy8D,EACTG,EAAK58D,EAAI08D,EAEf,MAAO,CACLp2B,SAAU,CACRprC,EAAG6zD,EAAQ7zD,EAAIyhE,GAAMlyD,EAAKvP,EAAIorC,EAASprC,GACvCvT,EAAGonE,EAAQpnE,EAAIg1E,GAAMlyD,EAAK9iB,EAAI2+C,EAAS3+C,IAEzC8iB,KAAM,CACJvP,EAAG6zD,EAAQ7zD,EAAI0hE,GAAMnyD,EAAKvP,EAAIorC,EAASprC,GACvCvT,EAAGonE,EAAQpnE,EAAIi1E,GAAMnyD,EAAK9iB,EAAI2+C,EAAS3+C,IAG7C,CAsEO,SAASk1E,GAAoB1xD,EAAuB1P,EAAuB,KAChF,MAAMqhE,EAAYX,GAAa1gE,GACzBshE,EAAY5xD,EAAO3kB,OACnBw2E,EAAmBtgE,MAAMqgE,GAAWriE,KAAK,GACzCuiE,EAAevgE,MAAMqgE,GAG3B,IAAIr2E,EAAGw2E,EAAkCC,EACrCC,EAAalB,GAAS/wD,EAAQ,GAElC,IAAKzkB,EAAI,EAAGA,EAAIq2E,IAAar2E,EAI3B,GAHAw2E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS/wD,EAAQzkB,EAAI,GAC7By2E,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAW3hE,GAAa0hE,EAAa1hE,GAGxDuhE,EAAOt2E,GAAoB,IAAf22E,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACjG,CACDJ,EAAGv2E,GAAMw2E,EACJE,EACEvmE,EAAKmmE,EAAOt2E,EAAI,MAAQmQ,EAAKmmE,EAAOt2E,IAAO,GACzCs2E,EAAOt2E,EAAI,GAAKs2E,EAAOt2E,IAAM,EAFpBs2E,EAAOt2E,EAAI,GADNs2E,EAAOt2E,EATnB,EAhFf,SAAwBykB,EAAuB6xD,EAAkBC,GAC/D,MAAMF,EAAY5xD,EAAO3kB,OAEzB,IAAI82E,EAAgBC,EAAeC,EAAcC,EAA0BN,EACvEC,EAAalB,GAAS/wD,EAAQ,GAClC,IAAK,IAAIzkB,EAAI,EAAGA,EAAIq2E,EAAY,IAAKr2E,EACnCy2E,EAAeC,EACfA,EAAalB,GAAS/wD,EAAQzkB,EAAI,GAC7By2E,GAAiBC,IAIlBpZ,EAAagZ,EAAOt2E,GAAI,EAAGu1E,IAC7BgB,EAAGv2E,GAAKu2E,EAAGv2E,EAAI,GAAK,GAItB42E,EAASL,EAAGv2E,GAAKs2E,EAAOt2E,GACxB62E,EAAQN,EAAGv2E,EAAI,GAAKs2E,EAAOt2E,GAC3B+2E,EAAmBhvE,KAAKkoB,IAAI2mD,EAAQ,GAAK7uE,KAAKkoB,IAAI4mD,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAI/uE,KAAKioB,KAAK+mD,GACrBR,EAAGv2E,GAAK42E,EAASE,EAAOR,EAAOt2E,GAC/Bu2E,EAAGv2E,EAAI,GAAK62E,EAAQC,EAAOR,EAAOt2E,KAEtC,CAmEEg3E,CAAevyD,EAAQ6xD,EAAQC,GAjEjC,SAAyB9xD,EAAuB8xD,EAAcxhE,EAAuB,KACnF,MAAMqhE,EAAYX,GAAa1gE,GACzBshE,EAAY5xD,EAAO3kB,OACzB,IAAIgvE,EAAe0H,EAAkCC,EACjDC,EAAalB,GAAS/wD,EAAQ,GAElC,IAAK,IAAIzkB,EAAI,EAAGA,EAAIq2E,IAAar2E,EAAG,CAIlC,GAHAw2E,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS/wD,EAAQzkB,EAAI,IAC7By2E,EACH,SAGF,MAAM9xD,EAAS8xD,EAAa1hE,GACtB6P,EAAS6xD,EAAaL,GACxBI,IACF1H,GAASnqD,EAAS6xD,EAAYzhE,IAAc,EAC5C0hE,EAAa,MAAM1hE,KAAe4P,EAASmqD,EAC3C2H,EAAa,MAAML,KAAexxD,EAASkqD,EAAQyH,EAAGv2E,IAEpD02E,IACF5H,GAAS4H,EAAW3hE,GAAa4P,GAAU,EAC3C8xD,EAAa,MAAM1hE,KAAe4P,EAASmqD,EAC3C2H,EAAa,MAAML,KAAexxD,EAASkqD,EAAQyH,EAAGv2E,GAE1D,CACF,CAwCEi3E,CAAgBxyD,EAAQ8xD,EAAIxhE,EAC9B,CAEA,SAASmiE,GAAgBve,EAAY3wD,EAAa+B,GAChD,OAAOhC,KAAKgC,IAAIhC,KAAKC,IAAI2wD,EAAI5uD,GAAM/B,EACrC,CA2BO,SAASi6C,GACdx9B,EACApkB,EACA2Z,EACA/N,EACA8I,GAEA,IAAI/U,EAAWyP,EAAciV,EAAoByyD,EAOjD,GAJI92E,EAAQmqB,WACV/F,EAASA,EAAOxS,QAAQ0mD,IAAQA,EAAG9zC,QAGE,aAAnCxkB,EAAQmgD,uBACV21B,GAAoB1xD,EAAQ1P,OACvB,CACL,IAAIoC,EAAOlL,EAAOwY,EAAOA,EAAO3kB,OAAS,GAAK2kB,EAAO,GACrD,IAAKzkB,EAAI,EAAGyP,EAAOgV,EAAO3kB,OAAQE,EAAIyP,IAAQzP,EAC5C0kB,EAAQD,EAAOzkB,GACfm3E,EAAgBzB,GACdv+D,EACAuN,EACAD,EAAO1c,KAAKC,IAAIhI,EAAI,EAAGyP,GAAQxD,EAAO,EAAI,IAAMwD,GAChDpP,EAAQkgD,SAEV77B,EAAMysD,KAAOgG,EAAcv3B,SAASprC,EACpCkQ,EAAM2sD,KAAO8F,EAAcv3B,SAAS3+C,EACpCyjB,EAAM0sD,KAAO+F,EAAcpzD,KAAKvP,EAChCkQ,EAAM4sD,KAAO6F,EAAcpzD,KAAK9iB,EAChCkW,EAAOuN,CAEV,CAEGrkB,EAAQwhD,iBA3Dd,SAAyBp9B,EAAuBzK,GAC9C,IAAIha,EAAGyP,EAAMiV,EAAO0yD,EAAQC,EACxBC,EAAahoD,GAAe7K,EAAO,GAAIzK,GAC3C,IAAKha,EAAI,EAAGyP,EAAOgV,EAAO3kB,OAAQE,EAAIyP,IAAQzP,EAC5Cq3E,EAAaD,EACbA,EAASE,EACTA,EAAat3E,EAAIyP,EAAO,GAAK6f,GAAe7K,EAAOzkB,EAAI,GAAIga,GACtDo9D,IAGL1yD,EAAQD,EAAOzkB,GACXq3E,IACF3yD,EAAMysD,KAAO+F,GAAgBxyD,EAAMysD,KAAMn3D,EAAKN,KAAMM,EAAKR,OACzDkL,EAAM2sD,KAAO6F,GAAgBxyD,EAAM2sD,KAAMr3D,EAAKT,IAAKS,EAAKP,SAEtD69D,IACF5yD,EAAM0sD,KAAO8F,GAAgBxyD,EAAM0sD,KAAMp3D,EAAKN,KAAMM,EAAKR,OACzDkL,EAAM4sD,KAAO4F,GAAgBxyD,EAAM4sD,KAAMt3D,EAAKT,IAAKS,EAAKP,SAG9D,CAwCIooC,CAAgBp9B,EAAQzK,EAE5B,CC1NO,SAAS6gB,KACd,MAAyB,oBAAXv8B,QAA8C,oBAAbW,QACjD,CAKO,SAAS65B,GAAey+C,GAC7B,IAAI/8D,EAAS+8D,EAAQC,WAIrB,OAHIh9D,GAAgC,wBAAtBA,EAAO6sD,aACnB7sD,EAAUA,EAAsBi9D,MAE3Bj9D,CACT,CAOA,SAASk9D,GAAcC,EAA6BngD,EAAmBogD,GACrE,IAAIC,EAYJ,MAX0B,iBAAfF,GACTE,EAAgBlF,SAASgF,EAAY,KAEL,IAA5BA,EAAWz0E,QAAQ,OAErB20E,EAAgBA,EAAiB,IAAOrgD,EAAKggD,WAAWI,KAG1DC,EAAgBF,EAGXE,CACT,CAEA,MAAMC,GAAoB39D,GACxBA,EAAQ49D,cAAcC,YAAYF,iBAAiB39D,EAAS,MAEvD,SAASC,GAASsU,EAAiB4d,GACxC,OAAOwrC,GAAiBppD,GAAIupD,iBAAiB3rC,EAC/C,CAEA,MAAM5Y,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASwkD,GAAmBC,EAA6BvyD,EAAewyD,GACtE,MAAMl8C,EAAS,GACfk8C,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAIp4E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMoxB,EAAMsC,GAAU1zB,GACtBk8B,EAAO9K,GAAOm4B,WAAW4uB,EAAOvyD,EAAQ,IAAMwL,EAAMgnD,KAAY,CAClE,CAGA,OAFAl8C,EAAOha,MAAQga,EAAOxiB,KAAOwiB,EAAO1iB,MACpC0iB,EAAOja,OAASia,EAAO3iB,IAAM2iB,EAAOziB,OAC7ByiB,CACT,CA0CO,SAASnL,GACdvnB,EACAzI,GAEA,GAAI,WAAYyI,EACd,OAAOA,EAGT,MAAMxK,OAACA,0BAAQ25B,GAA2B53B,EACpC6kB,EAAQkyD,GAAiB94E,GACzBq5E,EAAgC,eAApBzyD,EAAMoU,UAClBs+C,EAAWJ,GAAmBtyD,EAAO,WACrC2yD,EAAUL,GAAmBtyD,EAAO,SAAU,UAC9CpR,EAACA,IAAGvT,MAAGqwB,GA7Cf,SACEjL,EACArnB,GAMA,MAAMw5E,EAAUnyD,EAAkBmyD,QAC5B/2C,EAAU+2C,GAAWA,EAAQ14E,OAAS04E,EAAQ,GAAKnyD,GACnDK,QAACA,UAASC,GAAW8a,EAC3B,IACIjtB,EAAGvT,EADHqwB,GAAM,EAEV,GArBmB,EAAC9c,EAAWvT,EAAWmK,KACzCoJ,EAAI,GAAKvT,EAAI,MAAQmK,IAAWA,EAAwBqtE,YAoBrDC,CAAahyD,EAASC,EAASN,EAAEjb,QACnCoJ,EAAIkS,EACJzlB,EAAI0lB,MACC,CACL,MAAM69B,EAAOxlD,EAAO25E,wBACpBnkE,EAAIitB,EAAOm3C,QAAUp0B,EAAK9qC,KAC1BzY,EAAIwgC,EAAOo3C,QAAUr0B,EAAKjrC,IAC1B+X,GAAM,CACP,CACD,MAAO,CAAC9c,IAAGvT,IAAGqwB,MAChB,CAsBsBwnD,CAAkBtvE,EAAOxK,GACvCyxE,EAAU6H,EAAS5+D,MAAQ4X,GAAOinD,EAAQ7+D,MAC1Cg3D,EAAU4H,EAAS/+D,KAAO+X,GAAOinD,EAAQh/D,KAE/C,IAAI2I,MAACA,SAAOD,GAAUlhB,EAKtB,OAJIs3E,IACFn2D,GAASo2D,EAASp2D,MAAQq2D,EAAQr2D,MAClCD,GAAUq2D,EAASr2D,OAASs2D,EAAQt2D,QAE/B,CACLzN,EAAGzM,KAAKi1B,OAAOxoB,EAAIi8D,GAAWvuD,EAAQljB,EAAOkjB,MAAQyW,GACrD13B,EAAG8G,KAAKi1B,OAAO/7B,EAAIyvE,GAAWzuD,EAASjjB,EAAOijB,OAAS0W,GAE3D,CA6BA,MAAMogD,GAAU34D,GAAcrY,KAAKi1B,MAAU,GAAJ5c,GAAU,GAG5C,SAAS8V,GACdl3B,EACAg6E,EACAC,EACA1zD,GAEA,MAAMK,EAAQkyD,GAAiB94E,GACzBuhC,EAAU23C,GAAmBtyD,EAAO,UACpCmD,EAAW2uD,GAAc9xD,EAAMmD,SAAU/pB,EAAQ,gBAAkBgqE,EACnEhgD,EAAY0uD,GAAc9xD,EAAMoD,UAAWhqB,EAAQ,iBAAmBgqE,EACtEkQ,EAxCR,SAA0Bl6E,EAA2BkjB,EAAeD,GAClE,IAAI8G,EAAkBC,EAEtB,QAAc3kB,IAAV6d,QAAkC7d,IAAX4d,EAAsB,CAC/C,MAAM4W,EAAYC,GAAe95B,GACjC,GAAK65B,EAGE,CACL,MAAM2rB,EAAO3rB,EAAU8/C,wBACjBQ,EAAiBrB,GAAiBj/C,GAClCugD,EAAkBlB,GAAmBiB,EAAgB,SAAU,SAC/DE,EAAmBnB,GAAmBiB,EAAgB,WAC5Dj3D,EAAQsiC,EAAKtiC,MAAQm3D,EAAiBn3D,MAAQk3D,EAAgBl3D,MAC9DD,EAASuiC,EAAKviC,OAASo3D,EAAiBp3D,OAASm3D,EAAgBn3D,OACjE8G,EAAW2uD,GAAcyB,EAAepwD,SAAU8P,EAAW,eAC7D7P,EAAY0uD,GAAcyB,EAAenwD,UAAW6P,EAAW,eAChE,MAXC3W,EAAQljB,EAAOg6B,YACf/W,EAASjjB,EAAOs6E,YAWnB,CACD,MAAO,CACLp3D,QACAD,SACA8G,SAAUA,GAAYigD,EACtBhgD,UAAWA,GAAaggD,EAE5B,CAewBuQ,CAAiBv6E,EAAQg6E,EAASC,GACxD,IAAI/2D,MAACA,SAAOD,GAAUi3D,EAEtB,GAAwB,gBAApBtzD,EAAMoU,UAA6B,CACrC,MAAMu+C,EAAUL,GAAmBtyD,EAAO,SAAU,SAC9C0yD,EAAWJ,GAAmBtyD,EAAO,WAC3C1D,GAASo2D,EAASp2D,MAAQq2D,EAAQr2D,MAClCD,GAAUq2D,EAASr2D,OAASs2D,EAAQt2D,MACrC,CACDC,EAAQna,KAAKgC,IAAI,EAAGmY,EAAQqe,EAAQre,OACpCD,EAASla,KAAKgC,IAAI,EAAGwb,EAAcrD,EAAQqD,EAActD,EAASse,EAAQte,QAC1EC,EAAQ62D,GAAOhxE,KAAKC,IAAIka,EAAO6G,EAAUmwD,EAAcnwD,WACvD9G,EAAS82D,GAAOhxE,KAAKC,IAAIia,EAAQ+G,EAAWkwD,EAAclwD,YACtD9G,IAAUD,IAGZA,EAAS82D,GAAO72D,EAAQ,IAU1B,YAPmC7d,IAAZ20E,QAAsC30E,IAAb40E,IAE1B1zD,GAAe2zD,EAAcj3D,QAAUA,EAASi3D,EAAcj3D,SAClFA,EAASi3D,EAAcj3D,OACvBC,EAAQ62D,GAAOhxE,KAAK+D,MAAMmW,EAASsD,KAG9B,CAACrD,QAAOD,SACjB,CAQO,SAASg0B,GACdl1C,EACAy4E,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAe5xE,KAAK+D,MAAM/K,EAAMkhB,OAASy3D,GACzCE,EAAc7xE,KAAK+D,MAAM/K,EAAMmhB,MAAQw3D,GAE7C34E,EAAMkhB,OAASla,KAAK+D,MAAM/K,EAAMkhB,QAChClhB,EAAMmhB,MAAQna,KAAK+D,MAAM/K,EAAMmhB,OAE/B,MAAMljB,EAAS+B,EAAM/B,OAUrB,OALIA,EAAO4mB,QAAU6zD,IAAgBz6E,EAAO4mB,MAAM3D,SAAWjjB,EAAO4mB,MAAM1D,SACxEljB,EAAO4mB,MAAM3D,OAAS,GAAGlhB,EAAMkhB,WAC/BjjB,EAAO4mB,MAAM1D,MAAQ,GAAGnhB,EAAMmhB,YAG5BnhB,EAAM43B,0BAA4B+gD,GAC/B16E,EAAOijB,SAAW03D,GAClB36E,EAAOkjB,QAAU03D,KACtB74E,EAAM43B,wBAA0B+gD,EAChC16E,EAAOijB,OAAS03D,EAChB36E,EAAOkjB,MAAQ03D,EACf74E,EAAM6R,IAAIinE,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CAOaviD,SAAgC,WAC3C,IAAI2iD,GAAmB,EACvB,IACE,MAAMz5E,EAAU,CACV+2B,cAEF,OADA0iD,GAAmB,GACZ,CACT,GAGFx7E,OAAOgD,iBAAiB,OAAQ,KAAMjB,GACtC/B,OAAO03B,oBAAoB,OAAQ,KAAM31B,EAG3C,CAFE,MAAOgmB,GAET,CACA,OAAOyzD,CACT,CAhB6C,GA4BtC,SAAS5/C,GACd/f,EACAmyB,GAEA,MAAMlpC,EAAQgX,GAASD,EAASmyB,GAC1BimC,EAAUnvE,GAASA,EAAMovE,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKluE,CACjC,CC3RO,SAASm+C,GAAa3Y,EAAWC,EAAWxwB,EAAWvJ,GAC5D,MAAO,CACLyE,EAAGq1B,EAAGr1B,EAAI8E,GAAKwwB,EAAGt1B,EAAIq1B,EAAGr1B,GACzBvT,EAAG4oC,EAAG5oC,EAAIqY,GAAKwwB,EAAG7oC,EAAI4oC,EAAG5oC,GAE7B,CAKO,SAASqhD,GACdzY,EACAC,EACAxwB,EAAWvJ,GAEX,MAAO,CACLyE,EAAGq1B,EAAGr1B,EAAI8E,GAAKwwB,EAAGt1B,EAAIq1B,EAAGr1B,GACzBvT,EAAY,WAAT8O,EAAoBuJ,EAAI,GAAMuwB,EAAG5oC,EAAI6oC,EAAG7oC,EAC9B,UAAT8O,EAAmBuJ,EAAI,EAAIuwB,EAAG5oC,EAAI6oC,EAAG7oC,EACnCqY,EAAI,EAAIwwB,EAAG7oC,EAAI4oC,EAAG5oC,EAE5B,CAKO,SAASshD,GAAqB1Y,EAAiBC,EAAiBxwB,EAAWvJ,GAChF,MAAMgqE,EAAM,CAACvlE,EAAGq1B,EAAGunC,KAAMnwE,EAAG4oC,EAAGynC,MACzB0I,EAAM,CAACxlE,EAAGs1B,EAAGqnC,KAAMlwE,EAAG6oC,EAAGunC,MACzB5rE,EAAI+8C,GAAa3Y,EAAIkwC,EAAKzgE,GAC1B5T,EAAI88C,GAAau3B,EAAKC,EAAK1gE,GAC3B9T,EAAIg9C,GAAaw3B,EAAKlwC,EAAIxwB,GAC1ButC,EAAIrE,GAAa/8C,EAAGC,EAAG4T,GACvB+M,EAAIm8B,GAAa98C,EAAGF,EAAG8T,GAC7B,OAAOkpC,GAAaqE,EAAGxgC,EAAG/M,EAC5B,CCSO,SAAS21C,GAAcF,EAAckrB,EAAe/3D,GACzD,OAAO6sC,EA3CqB,SAASkrB,EAAe/3D,GACpD,MAAO,CACL1N,EAAEA,GACOylE,EAAQA,EAAQ/3D,EAAQ1N,EAEjCm7C,SAASx8B,GACPjR,EAAQiR,CACV,EACA+U,UAAU5J,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtCyxB,OAAMv7C,EAAGpR,IACAoR,EAAIpR,EAEb+rD,YAAW36C,EAAGw5C,IACLx5C,EAAIw5C,EAGjB,CAsBeksB,CAAsBD,EAAO/3D,GAnBnC,CACL1N,EAAEA,GACOA,EAETm7C,SAASx8B,GAAG,EAEZ+U,UAAU5J,GACDA,EAETyxB,OAAMv7C,EAAGpR,IACAoR,EAAIpR,EAEb+rD,YAAW36C,EAAG2lE,IACL3lE,EAOb,CAEO,SAASg7C,GAAsB58C,EAA+BwnE,GACnE,IAAIx0D,EAA4By0D,EACd,QAAdD,GAAqC,QAAdA,IACzBx0D,EAAQhT,EAAI5T,OAAO4mB,MACnBy0D,EAAW,CACTz0D,EAAMqyD,iBAAiB,aACvBryD,EAAM00D,oBAAoB,cAG5B10D,EAAM20D,YAAY,YAAaH,EAAW,aACzCxnE,EAAiD4nE,kBAAoBH,EAE1E,CAEO,SAAS9pB,GAAqB39C,EAA+BynE,QACjDh2E,IAAbg2E,WACMznE,EAAiD4nE,kBACzD5nE,EAAI5T,OAAO4mB,MAAM20D,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CChEA,SAASI,GAAWnuC,GAClB,MAAiB,UAAbA,EACK,CACLouC,QAASpyD,GACTqyD,QAASzQ,GACT1D,UAAWhe,IAGR,CACLkyB,QAASv7B,GACTw7B,QAAS,CAACl1E,EAAGC,IAAMD,EAAIC,EACvB8gE,UAAWhyD,GAAKA,EAEpB,CAEA,SAASomE,IAAiB3yE,MAACA,EAAKmH,IAAEA,EAAG4H,MAAEA,EAAK/K,KAAEA,EAAI2Z,MAAEA,IAClD,MAAO,CACL3d,MAAOA,EAAQ+O,EACf5H,IAAKA,EAAM4H,EACX/K,KAAMA,IAASmD,EAAMnH,EAAQ,GAAK+O,GAAU,EAC5C4O,QAEJ,CA4CO,SAAS+lC,GAAc3gC,EAASvG,EAAQ++B,GAC7C,IAAKA,EACH,MAAO,CAACx4B,GAGV,MAAMshB,SAACA,EAAUrkC,MAAO4yE,EAAYzrE,IAAK0rE,GAAYt3B,EAC/CxsC,EAAQyN,EAAO3kB,QACf66E,QAACA,UAASD,YAASlU,GAAaiU,GAAWnuC,IAC3CrkC,MAACA,MAAOmH,OAAKnD,QAAM2Z,GAlD3B,SAAoBoF,EAASvG,EAAQ++B,GACnC,MAAMlX,SAACA,EAAUrkC,MAAO4yE,EAAYzrE,IAAK0rE,GAAYt3B,GAC/Ck3B,QAACA,EAAOlU,UAAEA,GAAaiU,GAAWnuC,GAClCt1B,EAAQyN,EAAO3kB,OAErB,IACIE,EAAGyP,GADHxH,MAACA,EAAKmH,IAAEA,OAAKnD,GAAQ+e,EAGzB,GAAI/e,EAAM,CAGR,IAFAhE,GAAS+O,EACT5H,GAAO4H,EACFhX,EAAI,EAAGyP,EAAOuH,EAAOhX,EAAIyP,GACvBirE,EAAQlU,EAAU/hD,EAAOxc,EAAQ+O,GAAOs1B,IAAYuuC,EAAYC,KADjC96E,EAIpCiI,IACAmH,IAEFnH,GAAS+O,EACT5H,GAAO4H,CACR,CAKD,OAHI5H,EAAMnH,IACRmH,GAAO4H,GAEF,CAAC/O,QAAOmH,MAAKnD,OAAM2Z,MAAOoF,EAAQpF,MAC3C,CAwBoCm1D,CAAW/vD,EAASvG,EAAQ++B,GAExDtnB,EAAS,GACf,IAEI94B,EAAOshB,EAAOs2D,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAc,IAAMF,GAFEP,EAAQG,EAAYG,EAAW53E,IAA6C,IAAnCu3E,EAAQE,EAAYG,GAGnFI,EAAa,KAAOH,GAF6B,IAA7BN,EAAQG,EAAU13E,IAAgBs3E,EAAQI,EAAUE,EAAW53E,GAIzF,IAAK,IAAIpD,EAAIiI,EAAOkP,EAAOlP,EAAOjI,GAAKoP,IAAOpP,EAC5C0kB,EAAQD,EAAOzkB,EAAIgX,GAEf0N,EAAMG,OAIVzhB,EAAQojE,EAAU9hD,EAAM4nB,IAEpBlpC,IAAU43E,IAIdC,EAASP,EAAQt3E,EAAOy3E,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BP,EAAQv3E,EAAOy3E,GAAoB76E,EAAImX,GAGnC,OAAb+jE,GAAqBE,MACvBl/C,EAAOn8B,KAAK66E,GAAiB,CAAC3yE,MAAOizE,EAAU9rE,IAAKpP,EAAGiM,OAAM+K,QAAO4O,WACpEs1D,EAAW,MAEb/jE,EAAOnX,EACPg7E,EAAY53E,IAOd,OAJiB,OAAb83E,GACFh/C,EAAOn8B,KAAK66E,GAAiB,CAAC3yE,MAAOizE,EAAU9rE,MAAKnD,OAAM+K,QAAO4O,WAG5DsW,CACT,CAYO,SAASkmB,GAAe33B,EAAM+4B,GACnC,MAAMtnB,EAAS,GACTulB,EAAWh3B,EAAKg3B,SAEtB,IAAK,IAAIzhD,EAAI,EAAGA,EAAIyhD,EAAS3hD,OAAQE,IAAK,CACxC,MAAMq7E,EAAM1vB,GAAclK,EAASzhD,GAAIyqB,EAAKhG,OAAQ++B,GAChD63B,EAAIv7E,QACNo8B,EAAOn8B,QAAQs7E,EAEnB,CACA,OAAOn/C,CACT,CAsFO,SAASgmB,GAAiBz3B,EAAM6wD,GACrC,MAAM72D,EAASgG,EAAKhG,OACd+F,EAAWC,EAAKpqB,QAAQmqB,SACxBxT,EAAQyN,EAAO3kB,OAErB,IAAKkX,EACH,MAAO,GAGT,MAAM/K,IAASwe,EAAKze,OACd/D,MAACA,MAAOmH,GA3FhB,SAAyBqV,EAAQzN,EAAO/K,EAAMue,GAC5C,IAAIviB,EAAQ,EACRmH,EAAM4H,EAAQ,EAElB,GAAI/K,IAASue,EAEX,KAAOviB,EAAQ+O,IAAUyN,EAAOxc,GAAO4c,MACrC5c,IAKJ,KAAOA,EAAQ+O,GAASyN,EAAOxc,GAAO4c,MACpC5c,IAWF,IAPAA,GAAS+O,EAEL/K,IAEFmD,GAAOnH,GAGFmH,EAAMnH,GAASwc,EAAOrV,EAAM4H,GAAO6N,MACxCzV,IAMF,OAFAA,GAAO4H,EAEA,CAAC/O,QAAOmH,MACjB,CA2DuBmsE,CAAgB92D,EAAQzN,EAAO/K,EAAMue,GAE1D,IAAiB,IAAbA,EACF,OAAOgxD,GAAc/wD,EAAM,CAAC,CAACxiB,QAAOmH,MAAKnD,SAAQwY,EAAQ62D,GAK3D,OAAOE,GAAc/wD,EA1DvB,SAAuBhG,EAAQxc,EAAO8B,EAAKkC,GACzC,MAAM+K,EAAQyN,EAAO3kB,OACfo8B,EAAS,GACf,IAEI9sB,EAFAgT,EAAOna,EACPkP,EAAOsN,EAAOxc,GAGlB,IAAKmH,EAAMnH,EAAQ,EAAGmH,GAAOrF,IAAOqF,EAAK,CACvC,MAAMtF,EAAM2a,EAAOrV,EAAM4H,GACrBlN,EAAI+a,MAAQ/a,EAAIG,KACbkN,EAAK0N,OACR5Y,GAAO,EACPiwB,EAAOn8B,KAAK,CAACkI,MAAOA,EAAQ+O,EAAO5H,KAAMA,EAAM,GAAK4H,EAAO/K,SAE3DhE,EAAQma,EAAOtY,EAAIG,KAAOmF,EAAM,OAGlCgT,EAAOhT,EACH+H,EAAK0N,OACP5c,EAAQmH,IAGZ+H,EAAOrN,CACT,CAMA,OAJa,OAATsY,GACF8Z,EAAOn8B,KAAK,CAACkI,MAAOA,EAAQ+O,EAAO5H,IAAKgT,EAAOpL,EAAO/K,SAGjDiwB,CACT,CA4B6Bu/C,CAAch3D,EAAQxc,EAFrCmH,EAAMnH,EAAQmH,EAAM4H,EAAQ5H,IACjBqb,EAAKuC,WAAuB,IAAV/kB,GAAemH,IAAQ4H,EAAQ,GACIyN,EAAQ62D,EACtF,CAQA,SAASE,GAAc/wD,EAAMg3B,EAAUh9B,EAAQ62D,GAC7C,OAAKA,GAAmBA,EAAe17C,YAAenb,EAaxD,SAAyBgG,EAAMg3B,EAAUh9B,EAAQ62D,GAC/C,MAAMI,EAAejxD,EAAKrsB,OAAO0Y,aAC3B6kE,EAAYC,GAAUnxD,EAAKpqB,UAC1ByqB,cAAe9a,EAAc3P,SAASmqB,SAACA,IAAaC,EACrDzT,EAAQyN,EAAO3kB,OACfo8B,EAAS,GACf,IAAI2/C,EAAYF,EACZ1zE,EAAQw5C,EAAS,GAAGx5C,MACpBjI,EAAIiI,EAER,SAAS6zE,EAAS1R,EAAG/jD,EAAGvgB,EAAGi2E,GACzB,MAAMC,EAAMxxD,GAAW,EAAK,EAC5B,GAAI4/C,IAAM/jD,EAAV,CAKA,IADA+jD,GAAKpzD,EACEyN,EAAO2lD,EAAIpzD,GAAO6N,MACvBulD,GAAK4R,EAEP,KAAOv3D,EAAO4B,EAAIrP,GAAO6N,MACvBwB,GAAK21D,EAEH5R,EAAIpzD,GAAUqP,EAAIrP,IACpBklB,EAAOn8B,KAAK,CAACkI,MAAOmiE,EAAIpzD,EAAO5H,IAAKiX,EAAIrP,EAAO/K,KAAMnG,EAAG8f,MAAOm2D,IAC/DF,EAAYE,EACZ9zE,EAAQoe,EAAIrP,EAbZ,CAeJ,CAEA,IAAK,MAAMgU,KAAWy2B,EAAU,CAC9Bx5C,EAAQuiB,EAAWviB,EAAQ+iB,EAAQ/iB,MACnC,IACI2d,EADAzO,EAAOsN,EAAOxc,EAAQ+O,GAE1B,IAAKhX,EAAIiI,EAAQ,EAAGjI,GAAKgrB,EAAQ5b,IAAKpP,IAAK,CACzC,MAAM24D,EAAKl0C,EAAOzkB,EAAIgX,GACtB4O,EAAQg2D,GAAUN,EAAe17C,WAAWnlB,GAAcihE,EAAc,CACtEv7E,KAAM,UACN87E,GAAI9kE,EACJ0yB,GAAI8uB,EACJujB,aAAcl8E,EAAI,GAAKgX,EACvBmlE,YAAan8E,EAAIgX,EACjBhH,mBAEEosE,GAAax2D,EAAOi2D,IACtBC,EAAS7zE,EAAOjI,EAAI,EAAGgrB,EAAQ/e,KAAM4vE,GAEvC1kE,EAAOwhD,EACPkjB,EAAYj2D,CACd,CACI3d,EAAQjI,EAAI,GACd87E,EAAS7zE,EAAOjI,EAAI,EAAGgrB,EAAQ/e,KAAM4vE,EAEzC,CAEA,OAAO3/C,CACT,CAlESmgD,CAAgB5xD,EAAMg3B,EAAUh9B,EAAQ62D,GAFtC75B,CAGX,CAmEA,SAASm6B,GAAUv7E,GACjB,MAAO,CACLylB,gBAAiBzlB,EAAQylB,gBACzB65B,eAAgBt/C,EAAQs/C,eACxBnY,WAAYnnC,EAAQmnC,WACpBE,iBAAkBrnC,EAAQqnC,iBAC1B8W,gBAAiBn+C,EAAQm+C,gBACzBr4B,YAAa9lB,EAAQ8lB,YACrBH,YAAa3lB,EAAQ2lB,YAEzB,CAEA,SAASo2D,GAAax2D,EAAOi2D,GAC3B,OAAOA,GAAav8E,KAAKkvE,UAAU5oD,KAAWtmB,KAAKkvE,UAAUqN,EAC/D,C;;;;;;;ACvVA,IAAAr9E,EAAAH,EAAA,2DAAS2+B,EAAM5c,GACb,OAAOA,EAAI,GAAM,CACnB,C,uBAokBA5hB,EAAA89E,OAAA51E,EAAA,aAASunE,IAATzvE,EAAA89E,OAAA51E,EAAA,WAAgB61E,IAAhB/9E,EAAA89E,OAAA51E,EAAA,WAAqB81E,IAArBh+E,EAAA89E,OAAA51E,EAAA,eAA0B+1E,IAA1Bj+E,EAAA89E,OAAA51E,EAAA,gBAAgDg2E,IAAhDl+E,EAAA89E,OAAA51E,EAAA,iBAA0DsE,IAA1DxM,EAAA89E,OAAA51E,EAAA,eAAqEi2E,IAArEn+E,EAAA89E,OAAA51E,EAAA,iBAA8Ek2E,IAA9Ep+E,EAAA89E,OAAA51E,EAAA,eAAyFm2E,IAAzFr+E,EAAA89E,OAAA51E,EAAA,gBAAkGo2E,IAAlGt+E,EAAA89E,OAAA51E,EAAA,eAA4Gq2E,IAA5Gv+E,EAAA89E,OAAA51E,EAAA,WAAqHs2E,IAArHx+E,EAAA89E,OAAA51E,EAAA,WAA0Hu2E,IAA1Hz+E,EAAA89E,OAAA51E,EAAA,WAA+Hw2E,IAA/H1+E,EAAA89E,OAAA51E,EAAA,iBAAoIy2E,IAApI3+E,EAAA89E,OAAA51E,EAAA,WAA+I02E,IAA/I5+E,EAAA89E,OAAA51E,EAAA,eAAoJ22E,IAApJ7+E,EAAA89E,OAAA51E,EAAA,gBAA6J42E,IAA7J9+E,EAAA89E,OAAA51E,EAAA,iBAAuK62E,IAAvK/+E,EAAA89E,OAAA51E,EAAA,cAAkLu7D,IAAlLzjE,EAAA89E,OAAA51E,EAAA,aAA0Ls2B,IAnkB1L,MAAMggD,EAAM,CAAC58D,EAAGta,EAAGutB,IAAMtrB,KAAKgC,IAAIhC,KAAKC,IAAIoY,EAAGiT,GAAIvtB,GAClD,SAASs3E,EAAIh9D,GACX,OAAO48D,EAAIhgD,EAAU,KAAJ5c,GAAW,EAAG,IACjC,CACA,SAASo8D,EAAIp8D,GACX,OAAO48D,EAAIhgD,EAAM5c,EAAI,MAAO,EAAG,IACjC,CACA,SAAS68D,EAAI78D,GACX,OAAO48D,EAAIhgD,EAAU,IAAJ5c,GAAU,EAAG,IAChC,CACA,SAASm8D,EAAIn8D,GACX,OAAO48D,EAAIhgD,EAAM5c,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAAS88D,EAAI98D,GACX,OAAO48D,EAAIhgD,EAAU,IAAJ5c,GAAU,EAAG,IAChC,CAEA,MAAMo9D,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIr4E,EAAG,GAAIC,EAAG,GAAIF,EAAG,GAAIqhD,EAAG,GAAIxgC,EAAG,GAAI03D,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKv4E,GAAKs4E,EAAQ,GAAJt4E,GACdw4E,EAAKx4E,GAAKs4E,GAAS,IAAJt4E,IAAa,GAAKs4E,EAAQ,GAAJt4E,GACrCy4E,EAAKz4E,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAEvC,SAASg3E,EAAS9pB,GAChB,IACIz3B,EADAuB,EAAMk2B,EAAI9yD,OAmBd,MAjBe,MAAX8yD,EAAI,KACM,IAARl2B,GAAqB,IAARA,EACfvB,EAAM,CACJ12B,EAAG,IAAsB,GAAhB+4E,EAAM5qB,EAAI,IACnBwrB,EAAG,IAAsB,GAAhBZ,EAAM5qB,EAAI,IACnBltD,EAAG,IAAsB,GAAhB83E,EAAM5qB,EAAI,IACnBntD,EAAW,IAARi3B,EAA4B,GAAhB8gD,EAAM5qB,EAAI,IAAW,KAErB,IAARl2B,GAAqB,IAARA,IACtBvB,EAAM,CACJ12B,EAAG+4E,EAAM5qB,EAAI,KAAO,EAAI4qB,EAAM5qB,EAAI,IAClCwrB,EAAGZ,EAAM5qB,EAAI,KAAO,EAAI4qB,EAAM5qB,EAAI,IAClCltD,EAAG83E,EAAM5qB,EAAI,KAAO,EAAI4qB,EAAM5qB,EAAI,IAClCntD,EAAW,IAARi3B,EAAa8gD,EAAM5qB,EAAI,KAAO,EAAI4qB,EAAM5qB,EAAI,IAAO,OAIrDz3B,CACT,CAEA,SAASnwB,EAAUoV,GACjB,IAAI29D,EAzBU,CAAA39D,GAAK+9D,EAAG/9D,EAAE3b,IAAM05E,EAAG/9D,EAAEg+D,IAAMD,EAAG/9D,EAAE1a,IAAMy4E,EAAG/9D,EAAE3a,GAyBjD44E,CAAQj+D,GAAK69D,EAAKC,EAC1B,OAAO99D,EACH,IAAM29D,EAAE39D,EAAE3b,GAAKs5E,EAAE39D,EAAEg+D,GAAKL,EAAE39D,EAAE1a,GAJpB,EAACD,EAAGs4E,IAAMt4E,EAAI,IAAMs4E,EAAEt4E,GAAK,GAIFy3C,CAAM98B,EAAE3a,EAAGs4E,QAC5C15E,CACN,CAEA,MAAMi6E,EAAS,+GACf,SAASC,EAASlrD,EAAG+2C,EAAGtkE,GACtB,MAAML,EAAI2kE,EAAIriE,KAAKC,IAAIlC,EAAG,EAAIA,GACxBi4E,EAAI,CAACxU,EAAG9jB,GAAK8jB,EAAIl2C,EAAI,IAAM,KAAOvtB,EAAIL,EAAIsC,KAAKgC,IAAIhC,KAAKC,IAAIy9C,EAAI,EAAG,EAAIA,EAAG,IAAI,GACpF,MAAO,CAACs4B,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASS,EAASnrD,EAAG+2C,EAAGhqD,GACtB,MAAM29D,EAAI,CAACxU,EAAG9jB,GAAK8jB,EAAIl2C,EAAI,IAAM,IAAMjT,EAAIA,EAAIgqD,EAAIriE,KAAKgC,IAAIhC,KAAKC,IAAIy9C,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACs4B,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASU,EAASprD,EAAGF,EAAGztB,GACtB,MAAMg5E,EAAMH,EAASlrD,EAAG,EAAG,IAC3B,IAAIrzB,EAMJ,IALImzB,EAAIztB,EAAI,IACV1F,EAAI,GAAKmzB,EAAIztB,GACbytB,GAAKnzB,EACL0F,GAAK1F,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjB0+E,EAAI1+E,IAAM,EAAImzB,EAAIztB,EAClBg5E,EAAI1+E,IAAMmzB,EAEZ,OAAOurD,CACT,CAUA,SAASrB,EAAQj9D,GACf,MACM3b,EAAI2b,EAAE3b,EADE,IAER25E,EAAIh+D,EAAEg+D,EAFE,IAGR14E,EAAI0a,EAAE1a,EAHE,IAIRqE,EAAMhC,KAAKgC,IAAItF,EAAG25E,EAAG14E,GACrBsC,EAAMD,KAAKC,IAAIvD,EAAG25E,EAAG14E,GACrBI,GAAKiE,EAAM/B,GAAO,EACxB,IAAIqrB,EAAG+2C,EAAGvjB,EAOV,OANI98C,IAAQ/B,IACV6+C,EAAI98C,EAAM/B,EACVoiE,EAAItkE,EAAI,GAAM+gD,GAAK,EAAI98C,EAAM/B,GAAO6+C,GAAK98C,EAAM/B,GAC/CqrB,EArBJ,SAAkB5uB,EAAG25E,EAAG14E,EAAGmhD,EAAG98C,GAC5B,OAAItF,IAAMsF,GACCq0E,EAAI14E,GAAKmhD,GAAMu3B,EAAI14E,EAAI,EAAI,GAElC04E,IAAMr0E,GACArE,EAAIjB,GAAKoiD,EAAI,GAEfpiD,EAAI25E,GAAKv3B,EAAI,CACvB,CAaQ83B,CAASl6E,EAAG25E,EAAG14E,EAAGmhD,EAAG98C,GACzBspB,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO+2C,GAAK,EAAGtkE,EACzB,CACA,SAAS84E,EAAMb,EAAGt4E,EAAGC,EAAGF,GACtB,OACEwQ,MAAMnI,QAAQpI,GACVs4E,EAAEt4E,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBs4E,EAAEt4E,EAAGC,EAAGF,IACZhB,IAAIy4E,EACR,CACA,SAASN,EAAQtpD,EAAG+2C,EAAGtkE,GACrB,OAAO84E,EAAML,EAAUlrD,EAAG+2C,EAAGtkE,EAC/B,CACA,SAASi3E,EAAQ1pD,EAAGF,EAAGztB,GACrB,OAAOk5E,EAAMH,EAAUprD,EAAGF,EAAGztB,EAC/B,CACA,SAASm3E,EAAQxpD,EAAG+2C,EAAGhqD,GACrB,OAAOw+D,EAAMJ,EAAUnrD,EAAG+2C,EAAGhqD,EAC/B,CACA,SAASy+D,EAAIxrD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASypD,EAASlqB,GAChB,MAAMsL,EAAIogB,EAAOQ,KAAKlsB,GACtB,IACIxyC,EADA3a,EAAI,IAER,IAAKy4D,EACH,OAEEA,EAAE,KAAO99C,IACX3a,EAAIy4D,EAAE,GAAKkf,GAAKlf,EAAE,IAAM+e,GAAK/e,EAAE,KAEjC,MAAM7qC,EAAIwrD,GAAK3gB,EAAE,IACXr0B,GAAMq0B,EAAE,GAAK,IACbp0B,GAAMo0B,EAAE,GAAK,IAQnB,OANE99C,EADW,QAAT89C,EAAE,GACA6e,EAAQ1pD,EAAGwW,EAAIC,GACD,QAATo0B,EAAE,GACP2e,EAAQxpD,EAAGwW,EAAIC,GAEf6yC,EAAQtpD,EAAGwW,EAAIC,GAEd,CACLrlC,EAAG2b,EAAE,GACLg+D,EAAGh+D,EAAE,GACL1a,EAAG0a,EAAE,GACL3a,EAAGA,EAEP,CACA,SAASw8D,EAAO7hD,EAAG2+D,GACjB,IAAI1rD,EAAIgqD,EAAQj9D,GAChBiT,EAAE,GAAKwrD,EAAIxrD,EAAE,GAAK0rD,GAClB1rD,EAAIspD,EAAQtpD,GACZjT,EAAE3b,EAAI4uB,EAAE,GACRjT,EAAEg+D,EAAI/qD,EAAE,GACRjT,EAAE1a,EAAI2tB,EAAE,EACV,CACA,SAASupD,EAAUx8D,GACjB,IAAKA,EACH,OAEF,MAAM3a,EAAI43E,EAAQj9D,GACZiT,EAAI5tB,EAAE,GACN2kE,EAAI8S,EAAIz3E,EAAE,IACVK,EAAIo3E,EAAIz3E,EAAE,IAChB,OAAO2a,EAAE3a,EAAI,IACT,QAAQ4tB,MAAM+2C,OAAOtkE,OAAOy2E,EAAIn8D,EAAE3a,MAClC,OAAO4tB,MAAM+2C,OAAOtkE,KAC1B,CAEA,MAAMtB,EAAM,CACVgQ,EAAG,OACHwqE,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH5B,EAAG,KACH6B,EAAG,KACHC,EAAG,KACH7B,EAAG,KACHC,EAAG,QACHC,EAAG,QACH4B,EAAG,KACHC,EAAG,WACH5B,EAAG,KACH6B,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHhC,EAAG,KACHiC,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIluE,EACJ,SAAS6hE,EAAUvqB,GACZt3C,IACHA,EApBJ,WACE,MAAMmuE,EAAW,CAAC,EACZ7mF,EAAOD,OAAOC,KAAKw9E,GACnBsJ,EAAQ/mF,OAAOC,KAAK4B,GAC1B,IAAIxE,EAAGivB,EAAGw2B,EAAGkkC,EAAIC,EACjB,IAAK5pF,EAAI,EAAGA,EAAI4C,EAAK9C,OAAQE,IAAK,CAEhC,IADA2pF,EAAKC,EAAKhnF,EAAK5C,GACVivB,EAAI,EAAGA,EAAIy6D,EAAM5pF,OAAQmvB,IAC5Bw2B,EAAIikC,EAAMz6D,GACV26D,EAAKA,EAAG3kC,QAAQQ,EAAGjhD,EAAIihD,IAEzBA,EAAIktB,SAASyN,EAAQuJ,GAAK,IAC1BF,EAASG,GAAM,CAACnkC,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOgkC,CACT,CAKYI,GACRvuE,EAAMhR,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM7E,EAAI6V,EAAMs3C,EAAIjiB,eACpB,OAAOlrC,GAAK,CACVhB,EAAGgB,EAAE,GACL24E,EAAG34E,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAE3F,OAAe2F,EAAE,GAAK,IAE/B,CAEA,MAAMqkF,EAAS,uGACf,SAASxM,EAAS1qB,GAChB,MAAMsL,EAAI4rB,EAAOhL,KAAKlsB,GACtB,IACInuD,EAAG25E,EAAG14E,EADND,EAAI,IAER,GAAKy4D,EAAL,CAGA,GAAIA,EAAE,KAAOz5D,EAAG,CACd,MAAM2b,GAAK89C,EAAE,GACbz4D,EAAIy4D,EAAE,GAAKkf,EAAIh9D,GAAK48D,EAAQ,IAAJ58D,EAAS,EAAG,IACtC,CAOA,OANA3b,GAAKy5D,EAAE,GACPkgB,GAAKlgB,EAAE,GACPx4D,GAAKw4D,EAAE,GACPz5D,EAAI,KAAOy5D,EAAE,GAAKkf,EAAI34E,GAAKu4E,EAAIv4E,EAAG,EAAG,MACrC25E,EAAI,KAAOlgB,EAAE,GAAKkf,EAAIgB,GAAKpB,EAAIoB,EAAG,EAAG,MACrC14E,EAAI,KAAOw4D,EAAE,GAAKkf,EAAI13E,GAAKs3E,EAAIt3E,EAAG,EAAG,MAC9B,CACLjB,EAAGA,EACH25E,EAAGA,EACH14E,EAAGA,EACHD,EAAGA,EAhBH,CAkBJ,CACA,SAAS83E,EAAUn9D,GACjB,OAAOA,IACLA,EAAE3a,EAAI,IACF,QAAQ2a,EAAE3b,MAAM2b,EAAEg+D,MAAMh+D,EAAE1a,MAAM62E,EAAIn8D,EAAE3a,MACtC,OAAO2a,EAAE3b,MAAM2b,EAAEg+D,MAAMh+D,EAAE1a,KAEjC,CAEA,MAAM7D,EAAKue,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBrY,KAAKkoB,IAAI7P,EAAG,EAAM,KAAe,KACxEze,EAAOye,GAAKA,GAAK,OAAUA,EAAI,MAAQrY,KAAKkoB,KAAK7P,EAAI,MAAS,MAAO,KAa3E,SAAS2pE,EAAO3pE,EAAGpgB,EAAGugB,GACpB,GAAIH,EAAG,CACL,IAAIuoD,EAAM0U,EAAQj9D,GAClBuoD,EAAI3oE,GAAK+H,KAAKgC,IAAI,EAAGhC,KAAKC,IAAI2gE,EAAI3oE,GAAK2oE,EAAI3oE,GAAKugB,EAAa,IAANvgB,EAAU,IAAM,IACvE2oE,EAAMgU,EAAQhU,GACdvoD,EAAE3b,EAAIkkE,EAAI,GACVvoD,EAAEg+D,EAAIzV,EAAI,GACVvoD,EAAE1a,EAAIijE,EAAI,EACZ,CACF,CACA,SAASb,EAAM1nD,EAAG0rB,GAChB,OAAO1rB,EAAIzd,OAAOwL,OAAO29B,GAAS,CAAC,EAAG1rB,GAAKA,CAC7C,CACA,SAAS4pE,EAAWjnB,GAClB,IAAI3iD,EAAI,CAAC3b,EAAG,EAAG25E,EAAG,EAAG14E,EAAG,EAAGD,EAAG,KAY9B,OAXIuQ,MAAMnI,QAAQk1D,GACZA,EAAMjjE,QAAU,IAClBsgB,EAAI,CAAC3b,EAAGs+D,EAAM,GAAIqb,EAAGrb,EAAM,GAAIr9D,EAAGq9D,EAAM,GAAIt9D,EAAG,KAC3Cs9D,EAAMjjE,OAAS,IACjBsgB,EAAE3a,EAAIw3E,EAAIla,EAAM,OAIpB3iD,EAAI0nD,EAAM/E,EAAO,CAACt+D,EAAG,EAAG25E,EAAG,EAAG14E,EAAG,EAAGD,EAAG,KACrCA,EAAIw3E,EAAI78D,EAAE3a,GAEP2a,CACT,CAOA,MAAM6tD,EACJpnE,YAAYk8D,GACV,GAAIA,aAAiBkL,EACnB,OAAOlL,EAET,MAAM5iE,SAAc4iE,EACpB,IAAI3iD,EAZR,IAAuBwyC,EAaN,WAATzyD,EACFigB,EAAI4pE,EAAWjnB,GACG,WAAT5iE,IACTigB,EAAIs8D,EAAS3Z,IAAUoa,EAAUpa,KAff,OADDnQ,EAgBwCmQ,GAfrDl0D,OAAO,GACNyuE,EAAS1qB,GAEXkqB,EAASlqB,KAcd9rD,KAAKmjF,KAAO7pE,EACZtZ,KAAKojF,SAAW9pE,CAClB,CACItV,YACF,OAAOhE,KAAKojF,MACd,CACIxL,UACF,IAAIt+D,EAAI0nD,EAAMhhE,KAAKmjF,MAInB,OAHI7pE,IACFA,EAAE3a,EAAI82E,EAAIn8D,EAAE3a,IAEP2a,CACT,CACIs+D,QAAIv9D,GACNra,KAAKmjF,KAAOD,EAAW7oE,EACzB,CACAo8D,YACE,OAAOz2E,KAAKojF,OAAS3M,EAAUz2E,KAAKmjF,WAAQ5lF,CAC9C,CACA2G,YACE,OAAOlE,KAAKojF,OAASl/E,EAAUlE,KAAKmjF,WAAQ5lF,CAC9C,CACAu4E,YACE,OAAO91E,KAAKojF,OAAStN,EAAU91E,KAAKmjF,WAAQ5lF,CAC9C,CACA0G,IAAIL,EAAO2f,GACT,GAAI3f,EAAO,CACT,MAAMG,EAAK/D,KAAK43E,IACVyL,EAAKz/E,EAAMg0E,IACjB,IAAI0L,EACJ,MAAMv2C,EAAIxpB,IAAW+/D,EAAK,GAAM//D,EAC1B8I,EAAI,EAAI0gB,EAAI,EACZpuC,EAAIoF,EAAGpF,EAAI0kF,EAAG1kF,EACd4kF,IAAOl3D,EAAI1tB,IAAM,EAAK0tB,GAAKA,EAAI1tB,IAAM,EAAI0tB,EAAI1tB,IAAM,GAAK,EAC9D2kF,EAAK,EAAIC,EACTx/E,EAAGpG,EAAI,IAAO4lF,EAAKx/E,EAAGpG,EAAI2lF,EAAKD,EAAG1lF,EAAI,GACtCoG,EAAGuzE,EAAI,IAAOiM,EAAKx/E,EAAGuzE,EAAIgM,EAAKD,EAAG/L,EAAI,GACtCvzE,EAAGnF,EAAI,IAAO2kF,EAAKx/E,EAAGnF,EAAI0kF,EAAKD,EAAGzkF,EAAI,GACtCmF,EAAGpF,EAAIouC,EAAIhpC,EAAGpF,GAAK,EAAIouC,GAAKs2C,EAAG1kF,EAC/BqB,KAAK43E,IAAM7zE,CACb,CACA,OAAO/D,IACT,CACAq7C,YAAYz3C,EAAO4O,GAIjB,OAHI5O,IACF5D,KAAKmjF,KAvGX,SAAqBK,EAAMC,EAAMjxE,GAC/B,MAAM7U,EAAI9C,EAAK46E,EAAI+N,EAAK7lF,IAClB25E,EAAIz8E,EAAK46E,EAAI+N,EAAKlM,IAClB14E,EAAI/D,EAAK46E,EAAI+N,EAAK5kF,IACxB,MAAO,CACLjB,EAAGw4E,EAAIp7E,EAAG4C,EAAI6U,GAAK3X,EAAK46E,EAAIgO,EAAK9lF,IAAMA,KACvC25E,EAAGnB,EAAIp7E,EAAGu8E,EAAI9kE,GAAK3X,EAAK46E,EAAIgO,EAAKnM,IAAMA,KACvC14E,EAAGu3E,EAAIp7E,EAAG6D,EAAI4T,GAAK3X,EAAK46E,EAAIgO,EAAK7kF,IAAMA,KACvCD,EAAG6kF,EAAK7kF,EAAI6T,GAAKixE,EAAK9kF,EAAI6kF,EAAK7kF,GAEnC,CA6FkB08C,CAAYr7C,KAAKmjF,KAAMv/E,EAAMu/E,KAAM3wE,IAE1CxS,IACT,CACAghE,QACE,OAAO,IAAImG,EAAMnnE,KAAK43E,IACxB,CACAxhC,MAAMz3C,GAEJ,OADAqB,KAAKmjF,KAAKxkF,EAAIw3E,EAAIx3E,GACXqB,IACT,CACA0jF,QAAQjqE,GAGN,OAFYzZ,KAAKmjF,KACbxkF,GAAK,EAAI8a,EACNzZ,IACT,CACA2jF,YACE,MAAM/L,EAAM53E,KAAKmjF,KACX3nE,EAAM0a,EAAc,GAAR0hD,EAAIj6E,EAAkB,IAARi6E,EAAIN,EAAmB,IAARM,EAAIh5E,GAEnD,OADAg5E,EAAIj6E,EAAIi6E,EAAIN,EAAIM,EAAIh5E,EAAI4c,EACjBxb,IACT,CACA4jF,QAAQnqE,GAGN,OAFYzZ,KAAKmjF,KACbxkF,GAAK,EAAI8a,EACNzZ,IACT,CACA6jF,SACE,MAAMvqE,EAAItZ,KAAKmjF,KAIf,OAHA7pE,EAAE3b,EAAI,IAAM2b,EAAE3b,EACd2b,EAAEg+D,EAAI,IAAMh+D,EAAEg+D,EACdh+D,EAAE1a,EAAI,IAAM0a,EAAE1a,EACPoB,IACT,CACA8jF,QAAQrqE,GAEN,OADAwpE,EAAOjjF,KAAKmjF,KAAM,EAAG1pE,GACdzZ,IACT,CACAsnE,OAAO7tD,GAEL,OADAwpE,EAAOjjF,KAAKmjF,KAAM,GAAI1pE,GACfzZ,IACT,CACAqnE,SAAS5tD,GAEP,OADAwpE,EAAOjjF,KAAKmjF,KAAM,EAAG1pE,GACdzZ,IACT,CACA+jF,WAAWtqE,GAET,OADAwpE,EAAOjjF,KAAKmjF,KAAM,GAAI1pE,GACfzZ,IACT,CACAm7D,OAAO8c,GAEL,OADA9c,EAAOn7D,KAAKmjF,KAAMlL,GACXj4E,IACT,EAGF,SAAS21E,EAAU1Z,GACjB,OAAO,IAAIkL,EAAMlL,EACnB,C,qFC1kBAr8D,EAAQokF,eAAiB,SAAUrlF,GACjC,OAAOA,GAAKA,EAAEslF,WAAatlF,EAAI,CAACulF,QAASvlF,EAC3C,EAEAiB,EAAQukF,kBAAoB,SAAUxlF,GACpC9C,OAAOqjD,eAAevgD,EAAG,aAAc,CAACrC,OAAO,GACjD,EAEAsD,EAAQD,UAAY,SAAUg7B,EAAQypD,GAcpC,OAbAvoF,OAAOC,KAAK6+B,GAAQ95B,SAAQ,SAAUgG,GACxB,YAARA,GAA6B,eAARA,GAAwBu9E,EAAK3iB,eAAe56D,IAIrEhL,OAAOqjD,eAAeklC,EAAMv9E,EAAK,CAC/Bu4C,YAAY,EACZ/8C,IAAK,WACH,OAAOs4B,EAAO9zB,EAChB,GAEJ,IAEOu9E,CACT,EAEAxkF,EAAQ41E,OAAS,SAAU4O,EAAMC,EAAUhiF,GACzCxG,OAAOqjD,eAAeklC,EAAMC,EAAU,CACpCjlC,YAAY,EACZ/8C,IAAKA,GAET,C;;;;;;;ACxBA,IAAA3K,EAAAH,EAAA,kD,uBAi6BAG,EAAA89E,OAAA51E,EAAA,YAAS5H,IAATN,EAAA89E,OAAA51E,EAAA,wBAAe7H,IAj6Bf,IAAA2H,EAAAnI,EAAA,YACA+sF,EAAA/sF,EAAA,oBA4BA,SAASgtF,EAAkBv8E,GACzB,OAAKA,IAAyC,IAAjC,CAAC,MAAO,OAAO5L,QAAQ4L,GAG7BA,EAFE,KAGX,CAMA,MAAMqM,EAAU3G,QAAWnQ,IAANmQ,EA6CrB,SAAS82E,EAAW1oF,EAAMf,GACxB,MAAM0pF,EAAiB3oF,EAAKqP,QAAOtE,IAAQ9L,EAAG8H,IAAIgE,KAClD,OAAO49E,EAAezrF,OAASyrF,EAAiB3oF,EAAK20C,MAAM,EAAG,EAChE,CAOA,MAAMi0C,EAAW,CAAC/lF,EAAGC,IAAMD,EAAE+O,IAAM9O,EAAE8O,EAAI/O,EAAE+O,EAAI9O,EAAE8O,EAAI/O,EAAExE,EAAIyE,EAAEzE,EAE7D,IAAIwqF,GAAc,EAWlB,SAASC,EAAUC,EAAMtgF,EAAMugF,EAV/B,WAEE,OADAH,EAAcA,EAAc,IAAMA,EAAc,EAAI,EAC7CA,CACT,CAOyCI,IACvC,IAAI70E,EAAQ,EACZ,IAAK,MAAM80E,KAAQH,EACbG,EAAKt0D,KAAKu0D,WAAaH,IAG3BE,EAAKt0D,KAAKu0D,SAAWH,EACrB50E,GAAS80E,EAAKt0D,KAAKnsB,GAAMvL,OAAS4rF,EAAUI,EAAKt0D,KAAKnsB,GAAOA,EAAMugF,IAErE,OAAO50E,CACT,CAMA,MAAMg1E,EAAmB3gF,GAAS,CAAC5F,EAAGC,IAAMgmF,EAAWjmF,EAAE+xB,KAAKnsB,GAAOA,GAAQqgF,EAAUhmF,EAAE8xB,KAAKnsB,GAAOA,IAAW5F,EAAE+xB,KAAKnsB,GAAMvL,OAAS4F,EAAE8xB,KAAKnsB,GAAMvL,OAOnJ,SAASmsF,EAAYz0D,EAAMv2B,GACzBu2B,EAAK71B,KAAKmB,KAAKkpF,EAAgB,SAC/B,IAAK,MAAME,KAAQ10D,EAAK71B,KAAM,CAC5B,MAAM4nE,EAAI2iB,EAAK10D,KACVrc,EAAQouD,EAAEtoE,KACbsoE,EAAEtoE,EAAIA,EACNgrF,EAAY1iB,EAAGtoE,IAEjBA,EAAI8G,KAAKgC,IAAIw/D,EAAEtoE,EAAIsoE,EAAE4iB,IAAKlrF,EAC5B,CACA,OAAOA,CACT,CAOA,SAASmrF,EAAU50D,EAAMv2B,GACvBu2B,EAAK31B,GAAGiB,KAAKkpF,EAAgB,OAC7B,IAAK,MAAME,KAAQ10D,EAAK31B,GAAI,CAC1B,MAAM0nE,EAAI2iB,EAAK10D,KACVrc,EAAQouD,EAAEtoE,KACbsoE,EAAEtoE,EAAIA,EACNmrF,EAAU7iB,EAAGtoE,IAEfA,EAAI8G,KAAKgC,IAAIw/D,EAAEtoE,EAAIsoE,EAAE8iB,GAAIprF,EAC3B,CACA,OAAOA,CACT,CAOA,SAASqrF,EAAU90D,EAAMp0B,GACvB,OAAI+X,EAAQqc,EAAKv2B,GACRu2B,EAAKv2B,GAEdu2B,EAAKv2B,EAAImC,EACFA,EACT,CAwDA,SAASmpF,EAAWC,EAAWhkE,GAC7BgkE,EAAU1pF,MAAK,CAAC2C,EAAGC,IAAMqC,KAAKgC,IAAIrE,EAAE2mF,GAAI3mF,EAAEymF,KAAOpkF,KAAKgC,IAAItE,EAAE4mF,GAAI5mF,EAAE0mF,OAClE,MAAMlkF,EAAQukF,EAAU,GACxBvkF,EAAMhH,EAAI,EACV,MAAMyY,EAAOuyE,EAAYhkF,EAAO,GAC1BuR,EAAQ4yE,EAAUnkF,EAAO,GACzBwkF,EAvDR,SAAqBD,EAAWhkE,GAC9B,MAAMkkE,EAAYF,EAAUv6E,QAAOulB,GAAmB,IAAXA,EAAKhjB,IAC1Cm4E,EAAaH,EAAUv6E,QAAOulB,GAAQA,EAAKhjB,IAAMgU,IACjDokE,EAAWF,EAAUz6E,QAAOulB,IAASrc,EAAQqc,EAAKv2B,KAClD4rF,EAAYF,EAAW16E,QAAOulB,IAASrc,EAAQqc,EAAKv2B,KACpD6rF,EAAaN,EAAUv6E,QAAOulB,GAAQA,EAAKhjB,EAAI,GAAKgjB,EAAKhjB,EAAIgU,IAASrN,EAAQqc,EAAKv2B,KAEzF,IAAI8rF,EAAQL,EAAU9iF,QAAO,CAACC,EAAKC,IAAQ/B,KAAKgC,IAAIF,EAAKC,EAAK7I,EAAI6I,EAAIqiF,KAAQ,IAAI,GAC9Ea,EAASL,EAAW/iF,QAAO,CAACC,EAAKC,IAAQ/B,KAAKgC,IAAIF,EAAKC,EAAK7I,EAAI6I,EAAIuiF,IAAO,IAAI,GAC/EziE,EAAU,EAgCd,OA9BImjE,GAASC,GACXJ,EAASjlF,SAAQ6vB,IACfu1D,EAAQT,EAAU90D,EAAMu1D,GACxBA,EAAQhlF,KAAKgC,IAAIgjF,EAAQv1D,EAAK20D,IAAKC,EAAU50D,EAAMu1D,GAAA,IAGrDF,EAAUllF,SAAQ6vB,IAChBw1D,EAASV,EAAU90D,EAAMw1D,GACzBA,EAASjlF,KAAKgC,IAAIijF,EAASx1D,EAAK60D,GAAID,EAAU50D,EAAMw1D,GAAA,MAGtDH,EAAUllF,SAAQ6vB,IAChBw1D,EAASV,EAAU90D,EAAMw1D,GACzBA,EAASjlF,KAAKgC,IAAIijF,EAASx1D,EAAK60D,GAAID,EAAU50D,EAAMw1D,GAAA,IAGtDJ,EAASjlF,SAAQ6vB,IACfu1D,EAAQT,EAAU90D,EAAMu1D,GACxBA,EAAQhlF,KAAKgC,IAAIgjF,EAAQv1D,EAAK20D,IAAKC,EAAU50D,EAAMu1D,GAAA,KAGvDD,EAAWnlF,SAAQ6vB,IACjB,IAAIv2B,EAAIurF,EAAUv6E,QAAOs3D,GAAKA,EAAE/0D,IAAMgjB,EAAKhjB,GAAK2G,EAAQouD,EAAEtoE,KACvD2I,QAAO,CAACC,EAAKC,IAAQ/B,KAAKgC,IAAIF,EAAKC,EAAI7I,EAAI8G,KAAKgC,IAAID,EAAIuiF,GAAIviF,EAAIqiF,OAAO,GAC1ElrF,EAAIqrF,EAAU90D,EAAMv2B,GACpBA,EAAI8G,KAAKgC,IAAI9I,EAAIu2B,EAAK60D,GAAIJ,EAAYz0D,EAAMv2B,IAC5CA,EAAI8G,KAAKgC,IAAI9I,EAAIu2B,EAAK20D,IAAKC,EAAU50D,EAAMv2B,IAC3C2oB,EAAU7hB,KAAKgC,IAAI6f,EAAS3oB,EAAA,IAGvB8G,KAAKgC,IAAIgjF,EAAOC,EAAQpjE,EACjC,CAaeqjE,CAAYT,EAAWhkE,GACpC,OAAOzgB,KAAKgC,IAAI2P,EAAMF,EAAOizE,EAC/B,CAmGA,SAASr6D,EAAO86D,EAAO7tF,EAAM8tF,EAAUr+E,GACrC,MAAM09E,EAAY,IAAIU,EAAMl/E,UACtBwa,EAnSR,SAAoB0kE,EAAO7tF,GACzB,MAAMwC,EAAK,IAAIgwC,IAAIxyC,EAAKmF,KAAI4oF,GAAaA,EAAUvrF,MAC7CF,EAAO,IAAIkwC,IAAIxyC,EAAKmF,KAAI4oF,GAAaA,EAAUzrF,QAC/CiB,EAAO,IAAIivC,IAAI,IAAIq7C,EAAMtqF,SAC/B,IAAI4R,EAAI,EACR,KAAO5R,EAAKkM,MAAM,CAChB,MAAMu+E,EAAS/B,EAAW,IAAI1oF,GAAOf,GACrC,IAAK,MAAM8L,KAAO0/E,EAAQ,CACxB,MAAM71D,EAAO01D,EAAM/jF,IAAIwE,GAClBwN,EAAQqc,EAAKhjB,KAChBgjB,EAAKhjB,EAAIA,GAEX5R,EAAKwH,OAAOuD,EACd,CACI/K,EAAKkM,OACPjN,EAAG2wC,QACHnzC,EAAK4S,QAAOi6E,GAAQtpF,EAAK+G,IAAIuiF,EAAKvqF,QAAOgG,SAAQukF,GAAQrqF,EAAG6H,IAAIwiF,EAAKrqF,MACrE2S,IAEJ,CAWA,MAVA,IAAI04E,EAAMtqF,QACPqP,QAAOtE,IAAQhM,EAAKgI,IAAIgE,KACxBhG,SAAQgG,IACP,MAAM6pB,EAAO01D,EAAM/jF,IAAIwE,GAElB6pB,EAAK61D,SACR71D,EAAKhjB,EAAIA,EAAA,IAIRA,CACT,CAoQe84E,CAAWJ,EAAO7tF,GACzBopB,EAAO0kE,EA/Ff,SAAiCX,EAAWhkE,GAC1C,IAAIC,EAAO,EACP8kE,EAAa,EACjB,IAAK,IAAI/4E,EAAI,EAAGA,GAAKgU,EAAMhU,IAAK,CAC9B,IAAIvT,EAAIssF,EACR,MAAML,EAAQV,EAAUv6E,QAAOulB,GAAQA,EAAKhjB,IAAMA,IAAG1R,MAAK,CAAC2C,EAAGC,IAAMD,EAAE0nF,SAAWznF,EAAEynF,WACnFI,EAAaL,EAAM,GAAGrrF,GAAGoQ,QAAOpQ,GAAMA,EAAG21B,KAAKhjB,EAAIA,EAAI,IAAG5K,QAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIoiF,MAAM,IAAM,EACpG,IAAK,MAAM10D,KAAQ01D,EACjB11D,EAAKv2B,EAAIA,EACTA,GAAK8G,KAAKgC,IAAIytB,EAAK20D,IAAK30D,EAAK60D,IAE/B5jE,EAAO1gB,KAAKgC,IAAI9I,EAAGwnB,EACrB,CACA,OAAOA,CACT,CAiF0B+kE,CAAwBhB,EAAWhkE,GAAQ+jE,EAAWC,EAAWhkE,GAEnFilE,EA5ER,SAAoBjB,EAAWp4D,GAC7B,IAAIp0B,EAAI,EACJwU,EAAI,EACJ2C,EAAO,EACPsR,EAAO,EACX,MAAMilE,EAAO,GACblB,EAAU1pF,KAAK0oF,GACf,IAAK,MAAMh0D,KAAQg1D,EAAW,CAC5B,GAAIh1D,EAAKv2B,EAAG,CACV,GAAe,IAAXu2B,EAAKhjB,EACPk5E,EAAK3tF,KAAKy3B,EAAKv2B,OACV,CAML,IALIuT,IAAMgjB,EAAKhjB,IACbA,EAAIgjB,EAAKhjB,EACT2C,EAAO,GAGJnX,EAAImX,EAAO,EAAGnX,EAAI0tF,EAAK5tF,UACtB4tF,EAAK1tF,GAAKw3B,EAAKv2B,GADejB,KAKpCmX,EAAOnX,CACT,CACAw3B,EAAKv2B,GAAKjB,EAAIo0B,EACdp0B,GACF,CACAyoB,EAAO1gB,KAAKgC,IAAI0e,EAAM+O,EAAKv2B,EAAI8G,KAAKgC,IAAIytB,EAAK60D,GAAI70D,EAAK20D,KACxD,CACA,OAAO1jE,CACT,CA8C0BklE,CAAWnB,EADZ,IAAP/jE,GAGhB,OA1CF,SAAmB+jE,EAAW19E,GAC5B09E,EAAU7kF,SAAS6vB,IACjB,MAAMo2D,EAAW7lF,KAAK+G,GAAM0oB,EAAK60D,IAAM70D,EAAK20D,IAAK30D,EAAK20D,KAAO30D,EAAK60D,IAC5DwB,EAAcD,EAAWp2D,EAAK60D,GAC9ByB,EAAYF,EAAWp2D,EAAK20D,IAClC,IAAI4B,EAAO,EACPrxD,EAAMlF,EAAK71B,KAAK7B,OACpB03B,EAAK71B,KAAKmB,MAAK,CAAC2C,EAAGC,IAAMD,EAAG+xB,KAAKv2B,EAAIwE,EAAE+xB,KAAK20D,IAAM,GAAMzmF,EAAE8xB,KAAKv2B,EAAIyE,EAAE8xB,KAAK20D,IAAM,KAAIxkF,SAAQ,CAACukF,EAAM3mD,KAC7FsoD,EACF3B,EAAK6B,KAAOxoD,GAAOqoD,EAAW1B,EAAKA,OAASxvD,EAAM,IAElDwvD,EAAK6B,KAAOA,EACZA,GAAQ7B,EAAKA,KACf,IAEF6B,EAAO,EACPrxD,EAAMlF,EAAK31B,GAAG/B,OACd03B,EAAK31B,GAAGiB,MAAK,CAAC2C,EAAGC,IAAMD,EAAG+xB,KAAKv2B,EAAIwE,EAAE+xB,KAAK60D,GAAK,GAAM3mF,EAAE8xB,KAAKv2B,EAAIyE,EAAE8xB,KAAK60D,GAAK,KAAI1kF,SAAQ,CAACukF,EAAM3mD,KACzFuoD,EACF5B,EAAK6B,KAAOxoD,GAAOqoD,EAAW1B,EAAKA,OAASxvD,EAAM,IAElDwvD,EAAK6B,KAAOA,EACZA,GAAQ7B,EAAKA,KACf,GACF,GAEJ,CAeE8B,CAAUxB,EAAW19E,GACd,CAAC0Z,OAAMC,KAAMglE,EACtB,CA8DA,SAASQ,EAAQ/wE,EAAKvP,EAAK+B,GACzB,IAAK,MAAM/G,KAAQuU,EACjB,GAAIvU,EAAKgF,MAAQA,GAAOhF,EAAK+G,QAAUA,EACrC,OAAO/G,EAAKolF,KAGhB,OAAO,CACT,CAEA,MAAMlvF,UAAyB2H,EAAAiM,kBAQ7B4E,gBAAgBhH,EAAMhR,EAAM4I,EAAO+O,GACjC,MAAOrV,KAAMusF,EAAU,OAAQrsF,GAAIssF,EAAQ,KAAMjC,KAAMkC,EAAU,QAAUtnF,KAAKzG,QAAQ0W,QAClFs3E,EAAahvF,EAAKmF,KAAI,EAAE0pF,CAACA,GAAUvsF,EAAMwsF,CAACA,GAAQtsF,EAAIusF,CAACA,GAAUlC,MAAW,CAACvqF,OAAME,KAAIqqF,YACvF92E,OAACA,EAAME,OAAEA,GAAUjF,EACnBa,EAAS,GACTg8E,EAAQpmF,KAAKwnF,OA9EvB,SAA+BjvF,GAC7B,MAAM6tF,EAAQ,IAAIjmF,IAClB,IAAK,IAAIjH,EAAI,EAAGA,EAAIX,EAAKS,OAAQE,IAAK,CACpC,MAAM2B,KAACA,EAAIE,GAAEA,EAAEqqF,KAAEA,GAAQ7sF,EAAKW,GAE9B,GAAKktF,EAAMvjF,IAAIhI,GAQR,CACL,MAAM61B,EAAO01D,EAAM/jF,IAAIxH,GACvB61B,EAAK20D,KAAOD,EACZ10D,EAAK31B,GAAG9B,KAAK,CAAC4N,IAAK9L,EAAIqqF,KAAMA,EAAMx8E,MAAO1P,GAC5C,MAXEktF,EAAM5jF,IAAI3H,EAAM,CACdgM,IAAKhM,EACL0qF,GAAI,EACJF,IAAKD,EACLvqF,KAAM,GACNE,GAAI,CAAC,CAAC8L,IAAK9L,EAAIqqF,KAAMA,EAAMx8E,MAAO1P,MAOtC,GAAKktF,EAAMvjF,IAAI9H,GAQR,CACL,MAAM21B,EAAO01D,EAAM/jF,IAAItH,GACvB21B,EAAK60D,IAAMH,EACX10D,EAAK71B,KAAK5B,KAAK,CAAC4N,IAAKhM,EAAMuqF,KAAMA,EAAMx8E,MAAO1P,GAChD,MAXEktF,EAAM5jF,IAAIzH,EAAI,CACZ8L,IAAK9L,EACLwqF,GAAIH,EACJC,IAAK,EACLxqF,KAAM,CAAC,CAACgM,IAAKhM,EAAMuqF,KAAMA,EAAMx8E,MAAO1P,IACtC6B,GAAI,IAOV,CAEA,MAAM0sF,EAAW,CAAC9oF,EAAGC,IAAMA,EAAEwmF,KAAOzmF,EAAEymF,KActC,MAZA,IAAIgB,EAAMl/E,UAAUrG,SAAQ6vB,IAC1BA,EAAK71B,KAAO61B,EAAK71B,KAAKmB,KAAKyrF,GAC3B/2D,EAAK71B,KAAKgG,SAAQ6M,IAChBA,EAAEgjB,KAAO01D,EAAM/jF,IAAIqL,EAAE7G,IAAG,IAG1B6pB,EAAK31B,GAAK21B,EAAK31B,GAAGiB,KAAKyrF,GACvB/2D,EAAK31B,GAAG8F,SAAQ6M,IACdA,EAAEgjB,KAAO01D,EAAM/jF,IAAIqL,EAAE7G,IAAG,GAC1B,IAGKu/E,CACT,CA8BgCsB,CAAsBH,IAE5ChB,OAACA,EAAMF,SAAEA,EAAQr+E,KAAEA,GAAQhI,KAAKwN,aACtC,GAAI64E,EACF,IAAK,MAAM31D,KAAQ01D,EAAMl/E,SACnBwpB,EAAK7pB,OAAOw/E,IACd31D,EAAK21D,SAAWA,EAAS31D,EAAK7pB,MAIpC,GAAI0/E,EACF,IAAK,MAAM71D,KAAQ01D,EAAMl/E,SACnBwpB,EAAK7pB,OAAO0/E,IACd71D,EAAK61D,QAAS,EACd71D,EAAKhjB,EAAI64E,EAAO71D,EAAK7pB,MAK3B,MAAM6a,KAACA,EAAIC,KAAEA,GAAQ2J,EAAO86D,EAAOmB,IAAclB,EAAU9B,EAAkBv8E,IAE7EhI,KAAK2nF,MAAQjmE,EACb1hB,KAAK4nF,MAAQjmE,EAEb,IAAK,IAAIzoB,EAAI,EAAGyP,EAAO4+E,EAAWvuF,OAAQE,EAAIyP,IAAQzP,EAAG,CACvD,MAAMotF,EAAYiB,EAAWruF,GACvB2B,EAAOurF,EAAM/jF,IAAIikF,EAAUzrF,MAC3BE,EAAKqrF,EAAM/jF,IAAIikF,EAAUvrF,IACzB8sF,EAAQhtF,EAAKV,EAAIgtF,EAAQtsF,EAAKE,GAAIurF,EAAUvrF,GAAI7B,GAChD4uF,EAAM/sF,EAAGZ,EAAIgtF,EAAQpsF,EAAGF,KAAMyrF,EAAUzrF,KAAM3B,GACpDkR,EAAOnR,KAAK,CACVyU,EAAGY,EAAO7V,MAAMoC,EAAK6S,EAAGxU,GACxBiB,EAAGqU,EAAO/V,MAAMovF,EAAO3uF,GACvBmf,QAAS,CACPxd,OACAE,KACA2S,EAAGY,EAAO7V,MAAMsC,EAAG2S,EAAGxU,GACtBiB,EAAGqU,EAAO/V,MAAMqvF,EAAK5uF,GACrBiiB,OAAQ3M,EAAO/V,MAAM6tF,EAAUlB,KAAMlsF,KAG3C,CACA,OAAOkR,EAAOqmC,MAAMtvC,EAAOA,EAAQ+O,EACrC,CAEAmB,UAAUnJ,GACR,MAAO,CACLhH,IAAK,EACL+B,IAAKiF,IAAUlI,KAAKqK,YAAYiE,OAAStO,KAAK2nF,MAAQ3nF,KAAK4nF,MAE/D,CAEAltF,OAAOuO,GACL,MAAM1Q,KAACA,GAAQyH,KAAKqK,YAEpBrK,KAAKqW,eAAe9d,EAAM,EAAGA,EAAKS,OAAQiQ,EAC5C,CAQAoN,eAAe0xE,EAAO5mF,EAAO+O,EAAOjH,GAClC,MAAMqF,OAACA,EAAME,OAAEA,GAAUxO,KAAKqK,YACxB+K,EAAYpV,KAAKwT,0BAA0BrS,EAAO8H,GAClDgM,EAAgBjV,KAAK+U,iBAAiB9L,EAAM8+E,EAAM5mF,GAAQiU,GAC1D7H,EAAUvN,KAAKwN,aACf6R,GAAc,EAAAilE,EAAAz2E,gBAAeN,EAAQ8R,YAAa,GAAK,EAAI,GAC3D2oE,GAAY,EAAA1D,EAAAz2E,gBAAeN,EAAQy6E,UAAW,IAEpD,IAAK,IAAI9uF,EAAIiI,EAAOjI,EAAIiI,EAAQ+O,EAAOhX,IAAK,CAE1C,MAAMkR,EAASpK,KAAK+Q,UAAU7X,GACxBuf,EAASrO,EAAOiO,QAChBle,EAAIqU,EAAOqJ,iBAAiBzN,EAAOjQ,GACzC6F,KAAKuV,cACHwyE,EAAM7uF,GACNA,EACA,CACEwU,EAAGY,EAAOuJ,iBAAiBzN,EAAOsD,GAAKs6E,EAAY3oE,EACnDllB,IACA+lC,GAAI5xB,EAAOuJ,iBAAiBY,EAAO/K,GAAK2R,EACxC8gB,GAAI3xB,EAAOqJ,iBAAiBY,EAAOte,GACnCU,KAAM4d,EAAO5d,KACbE,GAAI0d,EAAO1d,GACXwH,SAAmB,UAAT0G,EAAmB,EAAI,EACjCkS,OAAQla,KAAK2W,IAAIpJ,EAAOqJ,iBAAiBzN,EAAOjQ,EAAIse,EAAO0C,QAAUhhB,GACrEZ,QAASyG,KAAKwT,0BAA0Bta,EAAG+P,IAE7CA,EACJ,CAEAjJ,KAAKsV,oBAAoBL,EAAehM,EAC1C,CAEAg/E,cACE,MAAMn8E,EAAM9L,KAAK6L,KACXu6E,EAAQpmF,KAAKwnF,QAAU,IAAIrnF,IAC3BoN,EAAUvN,KAAKwN,aACfxF,EAAOu8E,EAAkBh3E,EAAQvF,MACjCqX,GAAc,EAAAilE,EAAAz2E,gBAAeN,EAAQ8R,YAAa,GAClD2oE,GAAY,EAAA1D,EAAAz2E,gBAAeN,EAAQy6E,UAAW,IAC9C1uF,EAASiU,EAAQjU,QACjBgV,OAACA,EAAME,OAAEA,GAAUxO,KAAKqK,YAE9ByB,EAAI22B,OACJ,MAAMtvB,EAAYnT,KAAK/F,MAAMkZ,UAC7B,IAAK,MAAMud,KAAQ01D,EAAMl/E,SAAU,CACjC,MAAMwG,EAAIY,EAAOuJ,iBAAiB6Y,EAAKhjB,GACjCvT,EAAIqU,EAAOqJ,iBAAiB6Y,EAAKv2B,GAEjC8I,EAAMhC,KAAK+G,GAAM0oB,EAAK60D,IAAM70D,EAAK20D,IAAK30D,EAAK20D,KAAO30D,EAAK60D,IACvDpqE,EAASla,KAAK2W,IAAIpJ,EAAOqJ,iBAAiB6Y,EAAKv2B,EAAI8I,GAAO9I,GAC1DhB,EAAQG,GAAUA,EAAOo3B,EAAK7pB,MAAQ6pB,EAAK7pB,IACjD,IAAIqhF,EAAQx6E,EACZ5B,EAAIiT,UAAYxR,EAAQ3J,OAAS,QACjCkI,EAAIy1B,aAAe,SACf7zB,EAAIyF,EAAUiI,MAAQ,GACxBtP,EAAIs1B,UAAY,OAChB8mD,GAASF,EAAY3oE,EAAc,IAEnCvT,EAAIs1B,UAAY,QAChB8mD,GAAS7oE,EAAc,GAEzBrf,KAAKmoF,WAAWhvF,EAAOgB,EAAGghB,EAAQrP,EAAKo8E,EACzC,CACAp8E,EAAI62B,SACN,CAUAwlD,WAAWhvF,EAAOgB,EAAGghB,EAAQrP,EAAKo8E,GAChC,MAAM9wD,GAAO,EAAAktD,EAAAjtD,QAAOr3B,KAAKzG,QAAQ69B,KAAMp3B,KAAK/F,MAAMV,QAAQ69B,MACpD01B,GAAQ,EAAAw3B,EAAAzpE,eAAc1hB,GAAS,GAljBzC,SAAqB0a,GACnB,MAAMi5C,EAAQ,GACRgf,GAAS,EAAAwY,EAAAv9E,SAAQ8M,GAAOA,GAAM,EAAAywE,EAAAzpE,eAAchH,GAAO,GAAK,CAACA,GAE/D,KAAOi4D,EAAO9yE,QAAQ,CACpB,MAAMijE,EAAQ6P,EAAO5pE,MACA,iBAAV+5D,EACTnP,EAAM7J,QAAQ2I,MAAMkB,EAAOmP,EAAMv2B,MAAM,OAC9Bx2B,MAAMnI,QAAQk1D,GACvB6P,EAAO7yE,KAAK2yD,MAAMkgB,EAAQ7P,IAChB,EAAAqoB,EAAAzpE,eAAcixD,IACxBhf,EAAM7J,QAAQ,GAAKgZ,EAEvB,CAEA,OAAOnP,CACT,CAkiB8Cs7B,CAAYjvF,GAChDkvF,EAAcv7B,EAAM9zD,OACpBsvF,EAASnuF,EAAIghB,EAAS,EACtBotE,EAAanxD,EAAKE,WAClBhK,GAAU,EAAAg3D,EAAAz2E,gBAAe7N,KAAKzG,QAAQ+zB,QAASi7D,EAAa,GAIlE,GAFAz8E,EAAIsrB,KAAOA,EAAK+G,OAEZkqD,EAAc,EAAG,CACnB,MAAM51E,EAAM61E,EAAUC,EAAaF,EAAc,EAAK/6D,EACtD,IAAK,IAAIp0B,EAAI,EAAGA,EAAImvF,EAAanvF,IAC/B4S,EAAI09C,SAASsD,EAAM5zD,GAAIgvF,EAAOz1E,EAAOvZ,EAAIqvF,EAE7C,MACEz8E,EAAI09C,SAASrwD,EAAO+uF,EAAOI,EAE/B,CAEAE,aACE,MAAM18E,EAAM9L,KAAK6L,KACXu6E,EAAQpmF,KAAKwnF,QAAU,IAAIrnF,IAC3BoN,EAAUvN,KAAKwN,aACfxF,EAAOu8E,EAAkBh3E,EAAQvF,OACjCsG,OAACA,EAAME,OAAEA,GAAUxO,KAAKqK,YACxBgV,GAAc,EAAAilE,EAAAz2E,gBAAeN,EAAQ8R,YAAa,GAClD2oE,GAAY,EAAA1D,EAAAz2E,gBAAeN,EAAQy6E,UAAW,IAEpDl8E,EAAI22B,OACJ32B,EAAImT,YAAc1R,EAAQ2R,aAAe,QACzCpT,EAAIsT,UAAYC,EAEhB,IAAK,MAAMqR,KAAQ01D,EAAMl/E,SAAU,CACjC4E,EAAIiT,UAAY2R,EAAK9sB,MACrB,MAAM8J,EAAIY,EAAOuJ,iBAAiB6Y,EAAKhjB,GACjCvT,EAAIqU,EAAOqJ,iBAAiB6Y,EAAKv2B,GAEjC8I,EAAMhC,KAAK+G,GAAM0oB,EAAK60D,IAAM70D,EAAK20D,IAAK30D,EAAK20D,KAAO30D,EAAK60D,IACvDpqE,EAASla,KAAK2W,IAAIpJ,EAAOqJ,iBAAiB6Y,EAAKv2B,EAAI8I,GAAO9I,GAC5DklB,GACFvT,EAAIymD,WAAW7kD,EAAGvT,EAAG6tF,EAAW7sE,GAElCrP,EAAI42B,SAASh1B,EAAGvT,EAAG6tF,EAAW7sE,EAChC,CACArP,EAAI62B,SACN,CAKA7gC,OACE,MAAMgK,EAAM9L,KAAK6L,KACXtT,EAAOyH,KAAKgM,UAAUzT,MAAQ,GAG9BkN,EAAS,GACf,IAAK,IAAIvM,EAAI,EAAGyP,EAAOpQ,EAAKS,OAAQE,EAAIyP,IAAQzP,EAAG,CACjD,MAAMksF,EAAO7sF,EAAKW,GAClBksF,EAAKvqF,KAAK+I,MAAQwhF,EAAK7rF,QAAQkvF,UAC/BrD,EAAKrqF,GAAG6I,MAAQwhF,EAAK7rF,QAAQmvF,QACzBtD,EAAK3/E,QACPA,EAAOxM,KAAKmsF,EAEhB,CAEA,IAAK,MAAMA,KAAQ3/E,EACjB2/E,EAAKvqF,KAAK+I,MAAQwhF,EAAK7rF,QAAQkvF,UAC/BrD,EAAKrqF,GAAG6I,MAAQwhF,EAAK7rF,QAAQmvF,QAI/B1oF,KAAKwoF,aAGL,IAAK,IAAItvF,EAAI,EAAGyP,EAAOpQ,EAAKS,OAAQE,EAAIyP,IAAQzP,EAC9CX,EAAKW,GAAG4I,KAAKgK,GAIf9L,KAAKioF,aACP,EAGFlwF,EAAiB8S,GAAK,SAEtB9S,EAAiB0O,SAAW,CAC1BoG,gBAAiB,OACjBrF,WAAY,CACVpJ,QAAS,CACP/E,KAAM,SACN2N,WAAY,CAAC,IAAK,IAAK,KAAM,KAAM,WAErCzE,SAAU,CACRsC,OAAQ,SACRjE,SAAWkL,GAAqB,SAAbA,EAAIzS,KAA0D,KAAvCyS,EAAI1B,OAAOiO,QAAQ3K,EAAI5B,EAAI1B,OAAOsD,QAAWnQ,EACvF0H,MAAQ6G,GAAqB,SAAbA,EAAIzS,KAAiC,IAAfyS,EAAI1B,OAAOsD,EAA0B,GAAhB5B,EAAI8H,eAAiBrW,GAElFgqE,OAAQ,CACNluE,KAAM,QACN2N,WAAY,CAAC,YAAa,aAG9B2hF,YAAa,CACX31C,KAAM,CACJxrC,WAAY,CACV+/D,OAAQ,CACNluE,KAAM,QACN2N,WAAY,CAAC,YAAa,WAC1BjM,GAAI,iBAIVk4C,KAAM,CACJzrC,WAAY,CACV+/D,OAAQ,CACNluE,KAAM,QACN2N,WAAY,CAAC,YAAa,WAC1BnM,KAAM,mBAOhB9C,EAAiBuuC,UAAY,CAC3BhgB,YAAa,CACXrd,KAAM,UACNse,WAAW,GAEb7uB,SAAU,CACRqa,MAAM,EACN9C,SAAS,GAEXyO,QAAS,CACPytC,QAAS,CACP1rD,UAAW,CACT7G,MAAA,IACS,GAETT,MAAMsa,GACJ,MAAM5R,EAAO4R,EAAQlG,QAAQhV,KAAKkb,EAAQG,WAC1C,OAAO/R,EAAKhH,KAAO,OAASgH,EAAK9G,GAAK,KAAO8G,EAAKujF,IACpD,IAGJzmE,OAAQ,CACNjlB,SAAS,IAGbF,OAAQ,CACNkU,EAAG,CACDrU,KAAM,SACNqjD,OAAQ,OACRhjD,SAAS,EACTwH,IAAK,EACL6Y,QAAQ,GAEV5f,EAAG,CACDd,KAAM,SACNqjD,OAAQ,OACRhjD,SAAS,EACTwH,IAAK,EACLmH,SAAS,EACT0R,QAAQ,IAGZuR,OAAQ,CACNgC,QAAS,CACP7a,IAAK,EACLG,KAAM,EACNF,MAAO,GACPC,OAAQ,KAed,MAAM09D,EAAgB,CAAC3iE,EAAGvT,EAAG+lC,EAAIC,IAAOzyB,EAAIwyB,EACxC,CACA+yC,IAAK,CAACvlE,EAAGA,GAAKwyB,EAAKxyB,GAAK,EAAI,EAAGvT,KAC/B+4E,IAAK,CAACxlE,EAAGA,GAAKwyB,EAAKxyB,GAAK,EAAGvT,EAAGgmC,IAE9B,CACA8yC,IAAK,CAACvlE,EAAGA,GAAKA,EAAIwyB,GAAM,EAAG/lC,EAAG,GAC9B+4E,IAAK,CAACxlE,EAAGwyB,GAAMxyB,EAAIwyB,GAAM,EAAG/lC,EAAG,IAU7ByuF,EAAc,CAAC7lD,EAAIC,EAAIxwB,KAAO,CAAC9E,EAAGq1B,EAAGr1B,EAAI8E,GAAKwwB,EAAGt1B,EAAIq1B,EAAGr1B,GAAIvT,EAAG4oC,EAAG5oC,EAAIqY,GAAKwwB,EAAG7oC,EAAI4oC,EAAG5oC,KAwB3F,MAAMnC,UAAa0H,EAAAu0B,QAKjBl0B,YAAYsE,GACViW,QAEAta,KAAKzG,aAAUgE,EACfyC,KAAK0N,OAAInQ,EACTyC,KAAK7F,OAAIoD,EACTyC,KAAKkgC,QAAK3iC,EACVyC,KAAKmgC,QAAK5iC,EACVyC,KAAKmb,YAAS5d,EAEV8G,GACFxI,OAAOwL,OAAOrH,KAAMqE,EAExB,CAKAvC,KAAKgK,GACH,MACM4B,EAACA,EAACwyB,GAAEA,EAAE/lC,EAAEA,EAACgmC,GAAEA,EAAEhlB,OAAEA,EAAM5Y,SAAEA,GADlBvC,MAELizE,IAACA,EAAGC,IAAEA,GAAO7C,EAAc3iE,EAAGvT,EAAG+lC,EAAIC,GAE1B,IAAb59B,IAGJuJ,EAAI22B,OACAlgC,EAAW,IACbuJ,EAAIq3B,YACJr3B,EAAI4xC,KAAKhwC,EAAGzM,KAAKC,IAAI/G,EAAGgmC,IAAMD,EAAKxyB,GAAKnL,EAAW,EAAGtB,KAAK2W,IAAIuoB,EAAKhmC,GAAKghB,EAAS,GAClFrP,EAAIiH,QArDV,SAAkBjH,GAAK4B,EAACA,EAACwyB,GAAEA,EAAE3mC,QAAEA,IAC7B,IAAI2T,EAEsB,SAAtB3T,EAAQsvF,UACV37E,GAAO,EAAAo3E,EAAA1gF,OAAMrK,EAAQkvF,WAAWryC,MAAM,IAAKqgC,YACZ,OAAtBl9E,EAAQsvF,UACjB37E,GAAO,EAAAo3E,EAAA1gF,OAAMrK,EAAQmvF,SAAStyC,MAAM,IAAKqgC,aAEzCvpE,EAAOpB,EAAIg9E,qBAAqBp7E,EAAG,EAAGwyB,EAAI,GAC1ChzB,EAAK67E,aAAa,GAAG,EAAAzE,EAAA1gF,OAAMrK,EAAQkvF,WAAWryC,MAAM,IAAKqgC,aACzDvpE,EAAK67E,aAAa,GAAG,EAAAzE,EAAA1gF,OAAMrK,EAAQmvF,SAAStyC,MAAM,IAAKqgC,cAGzD3qE,EAAIiT,UAAY7R,EAChBpB,EAAImT,YAAc/R,EAClBpB,EAAIsT,UAAY,EAClB,CAwCIu5B,CAAS7sC,EAdE9L,MAgBX8L,EAAIq3B,YACJr3B,EAAIs3B,OAAO11B,EAAGvT,GACd2R,EAAIs+D,cAAc6I,EAAIvlE,EAAGulE,EAAI94E,EAAG+4E,EAAIxlE,EAAGwlE,EAAI/4E,EAAG+lC,EAAIC,GAClDr0B,EAAIu3B,OAAOnD,EAAIC,EAAKhlB,GACpBrP,EAAIs+D,cAAc8I,EAAIxlE,EAAGwlE,EAAI/4E,EAAIghB,EAAQ83D,EAAIvlE,EAAGulE,EAAI94E,EAAIghB,EAAQzN,EAAGvT,EAAIghB,GACvErP,EAAIu3B,OAAO31B,EAAGvT,GACd2R,EAAIw3B,SACJx3B,EAAI0rC,YAEJ1rC,EAAIoB,OAEJpB,EAAI62B,UACN,CAQAla,QAAQuzB,EAAQC,EAAQ5zB,GACtB,MAAM3a,EAACA,EAACvT,EAAEA,EAAC+lC,GAAEA,EAAEC,GAAEA,EAAEhlB,OAAEA,GAAUnb,KAAKypB,SAAS,CAAC,IAAK,IAAK,KAAM,KAAM,UAAWpB,GAC/E,GAAI2zB,EAAStuC,GAAKsuC,EAAS9b,EACzB,OAAO,EAET,MAAM+yC,IAACA,EAAGC,IAAEA,GAAO7C,EAAc3iE,EAAGvT,EAAG+lC,EAAIC,GACrC3tB,GAAKwpC,EAAStuC,IAAMwyB,EAAKxyB,GAEzBs1B,EAAK,CAACt1B,EAAGwyB,EAAI/lC,EAAGgmC,GAChBxhC,EAAIiqF,EAFC,CAACl7E,IAAGvT,KAEW84E,EAAKzgE,GACzB5T,EAAIgqF,EAAY3V,EAAKC,EAAK1gE,GAC1B9T,EAAIkqF,EAAY1V,EAAKlwC,EAAIxwB,GACzButC,EAAI6oC,EAAYjqF,EAAGC,EAAG4T,GACtB+M,EAAIqpE,EAAYhqF,EAAGF,EAAG8T,GACtBw2E,EAAOJ,EAAY7oC,EAAGxgC,EAAG/M,GAAGrY,EAClC,OAAO8hD,GAAU+sC,GAAQ/sC,GAAU+sC,EAAO7tE,CAC5C,CAOA+gC,SAASF,EAAQ3zB,GACf,MAAM3a,EAACA,EAACwyB,GAAEA,GAAMlgC,KAAKypB,SAAS,CAAC,IAAK,MAAOpB,GAC3C,OAAO2zB,GAAUtuC,GAAKsuC,GAAU9b,CAClC,CAOAic,SAASF,EAAQ5zB,GACf,MAAMluB,EAACA,EAACgmC,GAAEA,EAAEhlB,OAAEA,GAAUnb,KAAKypB,SAAS,CAAC,IAAK,KAAM,UAAWpB,GACvDtG,EAAO9gB,KAAKC,IAAI/G,EAAGgmC,GACnBxe,EAAO1gB,KAAKgC,IAAI9I,EAAGgmC,GAAMhlB,EAC/B,OAAO8gC,GAAUl6B,GAAQk6B,GAAUt6B,CACrC,CAMA2H,eAAejB,GACb,MAAM3a,EAACA,EAACvT,EAAEA,EAAC+lC,GAAEA,EAAEC,GAAEA,EAAEhlB,OAAEA,GAAUnb,KAAKypB,SAAS,CAAC,IAAK,IAAK,KAAM,KAAM,UAAWpB,GAC/E,MAAO,CACL3a,GAAIA,EAAIwyB,GAAM,EACd/lC,GAAIA,EAAIgmC,EAAKhlB,GAAU,EAE3B,CAEA+Y,gBAAgB7L,GACd,OAAOroB,KAAKspB,eAAejB,EAC7B,CAMAR,SAASpd,GACP,MAAgB,MAATA,EAAezK,KAAKob,MAAQ,EAAIpb,KAAKmb,OAAS,CACvD,EAGFnjB,EAAK6S,GAAK,OACV7S,EAAKyO,SAAW,CACdgiF,UAAW,MACXC,QAAS,QACTG,UAAW,WACXI,eAAgB,CAACn9E,EAAKvS,KAAY,EAAA+qF,EAAAld,eAAc7tE,EAAQkvF,WACxDS,aAAc,CAACp9E,EAAKvS,KAAY,EAAA+qF,EAAAld,eAAc7tE,EAAQmvF,S,qICp6BxD,IAAAhxF,EAAAH,EAAA,kD,uBAAA,IAAA4xF,EAAA5xF,EAAA,sBAAAG,EAAAiI,UAAAwpF,EAAAvpF,E","sources":["src/rocketbotweb.ts","src/bim/chart.ts","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/chartjs-chart-sankey/dist/chartjs-chart-sankey.esm.js","node_modules/chart.js/helpers/helpers.js"],"sourcesContent":["import { RocketBotWeb } from \"./bim/chart\";\r\n\r\n// \"globals are evil\"\r\ndeclare global {\r\n    interface Window { RocketBotWeb: any; }\r\n}\r\nwindow.RocketBotWeb = RocketBotWeb;\r\n","import { Chart, ChartData, ChartDataset, LineControllerChartOptions } from 'chart.js/auto';\r\nimport { SankeyController, Flow } from 'chartjs-chart-sankey';\r\n\r\nChart.register(SankeyController, Flow);\r\n\r\ninterface ByDayOfWeekData {\r\n    riders: string[];\r\n    riderToWeekdayToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface ByRideCountGroupData {\r\n    riders: string[];\r\n    rideCountGroupNames: string[];\r\n    riderToGroupToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface LatestRiderSankeyData {\r\n    from: string;\r\n    to: string;\r\n    count: number;\r\n}\r\n\r\ntype CompanyToTypeToRiderToCount = {\r\n    [company: string]: {\r\n        [vehicleType: string]: {\r\n            [rider: string]: number\r\n        }\r\n    }\r\n};\r\n\r\ninterface LastRiderPieData {\r\n    companyToTypeToLastRiderToCount: CompanyToTypeToRiderToCount;\r\n    companyToTypeToLastRiderToCountRidden: CompanyToTypeToRiderToCount;\r\n}\r\n\r\ntype FixedCouplingData = {\r\n    [frontVehicleType: string]: {\r\n        [rider: string]: number[]\r\n    }\r\n};\r\n\r\ninterface GlobalStatsData {\r\n    totalRides: number;\r\n    companyToTotalRides: { [company: string]: number };\r\n}\r\n\r\nexport module RocketBotWeb.Bim.Charting {\r\n    function doSetUpByDayOfWeek() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByDayOfWeekData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        const totalWeekdayToCount: number[] = [];\r\n        for (const rider of data.riders) {\r\n            const weekdayToCount = data.riderToWeekdayToCount[rider];\r\n            while (totalWeekdayToCount.length < weekdayToCount.length) {\r\n                totalWeekdayToCount.push(0);\r\n            }\r\n            for (let i = 0; i < weekdayToCount.length; i++) {\r\n                totalWeekdayToCount[i] += weekdayToCount[i];\r\n            }\r\n            datasets.push({\r\n                label: rider,\r\n                data: weekdayToCount,\r\n                yAxisID: \"yRegular\",\r\n            });\r\n        }\r\n        datasets.push({\r\n            label: \"(total)\",\r\n            data: totalWeekdayToCount,\r\n            yAxisID: \"yTotal\",\r\n        });\r\n\r\n        new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    \"yRegular\": {\r\n                        display: true,\r\n                        position: \"left\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (single rider)\",\r\n                        },\r\n                    },\r\n                    \"yTotal\": {\r\n                        display: true,\r\n                        position: \"right\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (total)\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpByRideCountGroup() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByRideCountGroupData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToGroupToCount[rider],\r\n            });\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: data.rideCountGroupNames,\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        const logPlotCheckbox = <HTMLInputElement|null>document.getElementById(\"bim-charting-log-plot-checkbox\");\r\n        if (logPlotCheckbox !== null) {\r\n            logPlotCheckbox.addEventListener(\"change\", () => {\r\n                chart.options.scales!.y!.type = logPlotCheckbox.checked ? \"logarithmic\" : \"linear\";\r\n                chart.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    function doSetUpLatestRiderCount() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"sankey-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"sankey-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LatestRiderSankeyData[] = JSON.parse(dataString);\r\n        let labels = {};\r\n        for (let datum of data) {\r\n            // labels: strip leading Enter and Escape symbols from from and to values\r\n            labels[datum.from] = datum.from.substring(1);\r\n            labels[datum.to] = datum.to.substring(1);\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"sankey\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        data: data,\r\n                        labels: labels,\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpLastRiderPie() {\r\n        const ALL_VALUE: string = \"\\u0018\";\r\n\r\n        // set up controls\r\n        const controls = <HTMLParagraphElement|null>document.getElementById(\"pie-controls\");\r\n        if (controls === null) {\r\n            return;\r\n        }\r\n\r\n        const companyLabel = document.createElement(\"label\");\r\n        companyLabel.appendChild(document.createTextNode(\"Company: \"));\r\n        const companySelect = document.createElement(\"select\");\r\n        companyLabel.appendChild(companySelect);\r\n        controls.appendChild(companyLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const typeLabel = document.createElement(\"label\");\r\n        typeLabel.appendChild(document.createTextNode(\"Type: \"));\r\n        const typeSelect = document.createElement(\"select\");\r\n        typeLabel.appendChild(typeSelect);\r\n        controls.appendChild(typeLabel);\r\n\r\n        controls.appendChild(document.createTextNode(\" \\u00B7 \"));\r\n\r\n        const riddenOnlyLabel = document.createElement(\"label\");\r\n        const riddenOnlyCheckbox = document.createElement(\"input\");\r\n        riddenOnlyCheckbox.type = \"checkbox\";\r\n        riddenOnlyCheckbox.checked = true;\r\n        riddenOnlyLabel.appendChild(riddenOnlyCheckbox);\r\n        riddenOnlyLabel.appendChild(document.createTextNode(\" ridden only\"));\r\n        controls.appendChild(riddenOnlyLabel);\r\n\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LastRiderPieData = JSON.parse(dataString);\r\n\r\n        const allCompanies: string[] = Object.keys(data.companyToTypeToLastRiderToCount);\r\n        allCompanies.sort();\r\n\r\n        const allTypes: string[] = [];\r\n        for (let company of allCompanies) {\r\n            for (let tp of Object.keys(data.companyToTypeToLastRiderToCount[company])) {\r\n                if (allTypes.indexOf(tp) === -1) {\r\n                    allTypes.push(tp);\r\n                }\r\n            }\r\n        }\r\n        allTypes.sort();\r\n\r\n        // pre-populate options\r\n        const allCompaniesOption = document.createElement(\"option\");\r\n        allCompaniesOption.value = ALL_VALUE;\r\n        allCompaniesOption.textContent = \"(all)\";\r\n        companySelect.appendChild(allCompaniesOption);\r\n        for (let company of allCompanies) {\r\n            const companyOption = document.createElement(\"option\");\r\n            companyOption.value = company;\r\n            companyOption.textContent = company;\r\n            companySelect.appendChild(companyOption);\r\n        }\r\n        companySelect.selectedIndex = 0;\r\n\r\n        const allTypesOption = document.createElement(\"option\");\r\n        allTypesOption.value = ALL_VALUE;\r\n        allTypesOption.textContent = \"(all)\";\r\n        typeSelect.appendChild(allTypesOption);\r\n        for (let tp of allTypes) {\r\n            const typeOption = document.createElement(\"option\");\r\n            typeOption.value = tp;\r\n            typeOption.textContent = tp;\r\n            typeSelect.appendChild(typeOption);\r\n        }\r\n        typeSelect.selectedIndex = 0;\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"pie\",\r\n            data: {\r\n                datasets: [],\r\n            },\r\n        });\r\n\r\n        // define update function\r\n        function updateChart(\r\n            chart: Chart<\"pie\">, data: LastRiderPieData,\r\n            companySelect: HTMLSelectElement, typeSelect: HTMLSelectElement,\r\n            riddenOnlyCheckbox: HTMLInputElement,\r\n            allCompanies: string[], allTypes: string[],\r\n        ) {\r\n            const considerCompanies: string[] = (companySelect.value === ALL_VALUE)\r\n                ? allCompanies\r\n                : [companySelect.value];\r\n            const considerTypes: string[] = (typeSelect.value === ALL_VALUE)\r\n                ? allTypes\r\n                : [typeSelect.value];\r\n            const companyToTypeToLastRiderToCount = riddenOnlyCheckbox.checked\r\n                ? data.companyToTypeToLastRiderToCountRidden\r\n                : data.companyToTypeToLastRiderToCount;\r\n\r\n            // does the selected company even have this type?\r\n            if (considerCompanies.length === 1 && considerTypes.length === 1) {\r\n                const companyTypes = Object.keys(companyToTypeToLastRiderToCount[considerCompanies[0]]);\r\n                if (companyTypes.indexOf(considerTypes[0]) === -1) {\r\n                    // no; switch over to \"all types\"\r\n                    considerTypes.length = 0;\r\n                    considerTypes.push(...allTypes);\r\n                }\r\n            }\r\n\r\n            // reduce types to those of the given company\r\n            while (typeSelect.lastChild !== null) {\r\n                typeSelect.removeChild(typeSelect.lastChild);\r\n            }\r\n            const allTypesOption = document.createElement(\"option\");\r\n            allTypesOption.value = ALL_VALUE;\r\n            allTypesOption.textContent = \"(all)\";\r\n            typeSelect.appendChild(allTypesOption);\r\n\r\n            const consideredTypes: string[] = [];\r\n            for (let companyName of considerCompanies) {\r\n                let companyTypes: string[] = Object.keys(companyToTypeToLastRiderToCount[companyName]);\r\n                for (let tp of companyTypes) {\r\n                    if (consideredTypes.indexOf(tp) === -1) {\r\n                        consideredTypes.push(tp);\r\n                    }\r\n                }\r\n            }\r\n            consideredTypes.sort();\r\n            for (let tp of consideredTypes) {\r\n                const typeOption = document.createElement(\"option\");\r\n                typeOption.value = tp;\r\n                typeOption.textContent = tp;\r\n                typeSelect.appendChild(typeOption);\r\n            }\r\n\r\n            if (considerTypes.length === 1) {\r\n                typeSelect.value = considerTypes[0];\r\n            } else {\r\n                typeSelect.selectedIndex = 0;\r\n            }\r\n\r\n            // collect the counts\r\n            const riderToLastVehicleCount: { [rider: string]: number } = {};\r\n            for (let companyName of considerCompanies) {\r\n                const typeToLastRiderToCount = companyToTypeToLastRiderToCount[companyName];\r\n                for (let tp of considerTypes) {\r\n                    const lastRiderToCount = typeToLastRiderToCount[tp];\r\n                    if (lastRiderToCount === undefined) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let rider of Object.keys(lastRiderToCount)) {\r\n                        if (riderToLastVehicleCount[rider] === undefined) {\r\n                            riderToLastVehicleCount[rider] = 0;\r\n                        }\r\n                        riderToLastVehicleCount[rider] += lastRiderToCount[rider];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // give this data to the chart\r\n            const dataRiders: string[] = Object.keys(riderToLastVehicleCount);\r\n            dataRiders.sort();\r\n            const dataValues: number[] = dataRiders.map(r => riderToLastVehicleCount[r]);\r\n            chart.data = {\r\n                datasets: [\r\n                    {\r\n                        data: dataValues,\r\n                    },\r\n                ],\r\n                labels: dataRiders,\r\n            };\r\n            chart.update();\r\n        }\r\n\r\n        // link up events\r\n        companySelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        typeSelect.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n        riddenOnlyCheckbox.addEventListener(\"change\", () => updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        ));\r\n\r\n        // perform initial chart update\r\n        updateChart(\r\n            chart, data,\r\n            companySelect, typeSelect, riddenOnlyCheckbox,\r\n            allCompanies, allTypes,\r\n        );\r\n    }\r\n\r\n    function doSetUpFixedCouplingMemberUsage() {\r\n        const ALL_VALUE: string = \"\\u0018\";\r\n\r\n        // set up controls\r\n        const controls = <HTMLParagraphElement|null>document.getElementById(\"histogram-controls\");\r\n        if (controls === null) {\r\n            return;\r\n        }\r\n\r\n        const typeLabel = document.createElement(\"label\");\r\n        typeLabel.appendChild(document.createTextNode(\"Front type: \"));\r\n        const typeSelect = document.createElement(\"select\");\r\n        typeLabel.appendChild(typeSelect);\r\n        controls.appendChild(typeLabel);\r\n\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const frontVehicleTypeToRiderToCounts: FixedCouplingData = JSON.parse(dataString);\r\n\r\n        const allFrontVehicleTypes: string[] = Object.keys(frontVehicleTypeToRiderToCounts);\r\n        allFrontVehicleTypes.sort();\r\n\r\n        // pre-populate options\r\n        for (let frontVehicleType of allFrontVehicleTypes) {\r\n            const typeOption = document.createElement(\"option\");\r\n            typeOption.value = frontVehicleType;\r\n            typeOption.textContent = frontVehicleType;\r\n            typeSelect.appendChild(typeOption);\r\n        }\r\n        typeSelect.selectedIndex = 0;\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                datasets: [],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    \"yRegular\": {\r\n                        position: \"left\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (single rider)\",\r\n                        },\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            },\r\n                        },\r\n                    },\r\n                    \"yAll\": {\r\n                        position: \"right\",\r\n                        title: {\r\n                            display: true,\r\n                            text: \"rides (all riders)\",\r\n                        },\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        // define update function\r\n        function updateChart(\r\n            chart: Chart<\"bar\">, frontVehicleTypeToRiderToCounts: FixedCouplingData,\r\n            typeSelect: HTMLSelectElement,\r\n        ) {\r\n            const riderToNumbers = frontVehicleTypeToRiderToCounts[typeSelect.value];\r\n            const typeRiders = Object.keys(riderToNumbers);\r\n            typeRiders.sort();\r\n\r\n            // collect the counts\r\n            const datasets: object[] = [];\r\n            const labels: string[] = [];\r\n            for (let rider of typeRiders) {\r\n                const riderName = (rider === ALL_VALUE) ? \"(all)\" : rider;\r\n                const numbers = riderToNumbers[rider];\r\n\r\n                while (labels.length < numbers.length) {\r\n                    labels.push(`vehicle ${labels.length + 1}`);\r\n                }\r\n\r\n                datasets.push({\r\n                    label: riderName,\r\n                    data: numbers,\r\n                    yAxisID: (rider === ALL_VALUE) ? \"yAll\" : \"yRegular\",\r\n                });\r\n            }\r\n\r\n            // give this data to the chart\r\n            chart.data = {\r\n                datasets: datasets,\r\n                labels: labels,\r\n            };\r\n            chart.update();\r\n        }\r\n\r\n        // link up events\r\n        typeSelect.addEventListener(\"change\", () => updateChart(\r\n            chart, frontVehicleTypeToRiderToCounts, typeSelect,\r\n        ));\r\n\r\n        // perform initial chart update\r\n        updateChart(\r\n            chart, frontVehicleTypeToRiderToCounts, typeSelect,\r\n        );\r\n    }\r\n\r\n    function doSetUpGlobalStats() {\r\n        // load data\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: GlobalStatsData = JSON.parse(dataString);\r\n\r\n        // filter out companies with less than a hundredth of the rides of the largest company\r\n        const reducedCompanies: { [company: string]: number } = {};\r\n        let otherRides: number = 0;\r\n        const rideCounts = Object.keys(data.companyToTotalRides)\r\n            .map(c => data.companyToTotalRides[c]);\r\n        if (rideCounts.length === 0) {\r\n            return;\r\n        }\r\n        rideCounts.sort((a, b) => a - b);\r\n        const maxValue = rideCounts[rideCounts.length - 1];\r\n        const minValue = maxValue / 500;\r\n        for (let company of Object.keys(data.companyToTotalRides)) {\r\n            const rides = data.companyToTotalRides[company];\r\n            if (rides >= minValue) {\r\n                reducedCompanies[company] = rides;\r\n            } else {\r\n                otherRides += rides;\r\n            }\r\n        }\r\n        const reducedCompanyNames: string[] = Object.keys(reducedCompanies);\r\n        reducedCompanyNames.sort((l, r) => reducedCompanies[r] - reducedCompanies[l]);\r\n        const reducedCompanyValues: number[] = reducedCompanyNames.map(c => reducedCompanies[c]);\r\n        reducedCompanyNames.push(\"(other)\");\r\n        reducedCompanyValues.push(otherRides);\r\n\r\n        // set up empty chart\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n        const chart = new Chart(canvas, {\r\n            type: \"pie\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        data: reducedCompanyValues,\r\n                    },\r\n                ],\r\n                labels: reducedCompanyNames,\r\n            },\r\n        });\r\n    }\r\n\r\n    export function setUpByDayOfWeek() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByDayOfWeek);\r\n    }\r\n\r\n    export function setUpByRideCountGroup() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByRideCountGroup);\r\n    }\r\n\r\n    export function setUpLatestRiderCount() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLatestRiderCount);\r\n    }\r\n\r\n    export function setUpLastRiderPie() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLastRiderPie);\r\n    }\r\n\r\n    export function setUpFixedCouplingMemberUsage() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpFixedCouplingMemberUsage);\r\n    }\r\n\r\n    export function setUpGlobalStats() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpGlobalStats);\r\n    }\r\n}\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*!\n * chartjs-chart-sankey v0.12.0\n * https://github.com/kurkle/chartjs-chart-sankey#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { isArray, isNullOrUndef, valueOrDefault, toFont, getHoverColor, color } from 'chart.js/helpers';\n\n/**\n * @param {string | Array<string>} raw\n * @return {Array<string>}\n */\nfunction toTextLines(raw) {\n  const lines = [];\n  const inputs = isArray(raw) ? raw : isNullOrUndef(raw) ? [] : [raw];\n\n  while (inputs.length) {\n    const input = inputs.pop();\n    if (typeof input === 'string') {\n      lines.unshift.apply(lines, input.split('\\n'));\n    } else if (Array.isArray(input)) {\n      inputs.push.apply(inputs, input);\n    } else if (!isNullOrUndef(inputs)) {\n      lines.unshift('' + input);\n    }\n  }\n\n  return lines;\n}\n\n/**\n* @param {any} size\n* @return {'min' | 'max'}\n*/\nfunction validateSizeValue(size) {\n  if (!size || ['min', 'max'].indexOf(size) === -1) {\n    return 'max';\n  }\n  return size;\n}\n\n/**\n * @param x {any}\n * @return {boolean}\n */\nconst defined = x => x !== undefined;\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @return {number}\n */\nfunction calculateX(nodes, data) {\n  const to = new Set(data.map(dataPoint => dataPoint.to));\n  const from = new Set(data.map(dataPoint => dataPoint.from));\n  const keys = new Set([...nodes.keys()]);\n  let x = 0;\n  while (keys.size) {\n    const column = nextColumn([...keys], to);\n    for (const key of column) {\n      const node = nodes.get(key);\n      if (!defined(node.x)) {\n        node.x = x;\n      }\n      keys.delete(key);\n    }\n    if (keys.size) {\n      to.clear();\n      data.filter(flow => keys.has(flow.from)).forEach(flow => to.add(flow.to));\n      x++;\n    }\n  }\n  [...nodes.keys()]\n    .filter(key => !from.has(key))\n    .forEach(key => {\n      const node = nodes.get(key);\n      // Only move the node to right edge, if it's column is not defined\n      if (!node.column) {\n        node.x = x;\n      }\n    });\n\n  return x;\n}\n\n/**\n * @param {Array<string>} keys\n * @param {Set<string>} to\n * @return {Array<string>}\n */\nfunction nextColumn(keys, to) {\n  const columnsNotInTo = keys.filter(key => !to.has(key));\n  return columnsNotInTo.length ? columnsNotInTo : keys.slice(0, 1);\n}\n\n/**\n * @param {SankeyNode} a\n * @param {SankeyNode} b\n * @return {number}\n */\nconst nodeByXY = (a, b) => a.x !== b.x ? a.x - b.x : a.y - b.y;\n\nlet prevCountId = -1;\nfunction getCountId() {\n  prevCountId = prevCountId < 100 ? prevCountId + 1 : 0;\n  return prevCountId;\n}\n\n/**\n * @param {Array<FromToElement>} list\n * @param {string} prop\n * @return {number}\n */\nfunction nodeCount(list, prop, countId = getCountId()) {\n  let count = 0;\n  for (const elem of list) {\n    if (elem.node._visited === countId) {\n      continue;\n    }\n    elem.node._visited = countId;\n    count += elem.node[prop].length + nodeCount(elem.node[prop], prop, countId);\n  }\n  return count;\n}\n\n/**\n * @param {string} prop\n * @return {function(FromToElement, FromToElement): number}\n */\nconst flowByNodeCount = (prop) => (a, b) => (nodeCount(a.node[prop], prop) - nodeCount(b.node[prop], prop)) || (a.node[prop].length - b.node[prop].length);\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processFrom(node, y) {\n  node.from.sort(flowByNodeCount('from'));\n  for (const flow of node.from) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processFrom(n, y);\n    }\n    y = Math.max(n.y + n.out, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processTo(node, y) {\n  node.to.sort(flowByNodeCount('to'));\n  for (const flow of node.to) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processTo(n, y);\n    }\n    y = Math.max(n.y + n.in, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} value\n * @return {number}\n */\nfunction setOrGetY(node, value) {\n  if (defined(node.y)) {\n    return node.y;\n  }\n  node.y = value;\n  return value;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction processRest(nodeArray, maxX) {\n  const leftNodes = nodeArray.filter(node => node.x === 0);\n  const rightNodes = nodeArray.filter(node => node.x === maxX);\n  const leftToDo = leftNodes.filter(node => !defined(node.y));\n  const rightToDo = rightNodes.filter(node => !defined(node.y));\n  const centerToDo = nodeArray.filter(node => node.x > 0 && node.x < maxX && !defined(node.y));\n\n  let leftY = leftNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.out) || 0), 0);\n  let rightY = rightNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.in) || 0), 0);\n  let centerY = 0;\n\n  if (leftY >= rightY) {\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n  } else {\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n  }\n  centerToDo.forEach(node => {\n    let y = nodeArray.filter(n => n.x === node.x && defined(n.y))\n      .reduce((acc, cur) => Math.max(acc, cur.y + Math.max(cur.in, cur.out)), 0);\n    y = setOrGetY(node, y);\n    y = Math.max(y + node.in, processFrom(node, y));\n    y = Math.max(y + node.out, processTo(node, y));\n    centerY = Math.max(centerY, y);\n  });\n\n  return Math.max(leftY, rightY, centerY);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateY(nodeArray, maxX) {\n  nodeArray.sort((a, b) => Math.max(b.in, b.out) - Math.max(a.in, a.out));\n  const start = nodeArray[0];\n  start.y = 0;\n  const left = processFrom(start, 0);\n  const right = processTo(start, 0);\n  const rest = processRest(nodeArray, maxX);\n  return Math.max(left, right, rest);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateYUsingPriority(nodeArray, maxX) {\n  let maxY = 0;\n  let nextYStart = 0;\n  for (let x = 0; x <= maxX; x++) {\n    let y = nextYStart;\n    const nodes = nodeArray.filter(node => node.x === x).sort((a, b) => a.priority - b.priority);\n    nextYStart = nodes[0].to.filter(to => to.node.x > x + 1).reduce((acc, cur) => acc + cur.flow, 0) || 0;\n    for (const node of nodes) {\n      node.y = y;\n      y += Math.max(node.out, node.in);\n    }\n    maxY = Math.max(y, maxY);\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} padding\n * @return {number}\n */\nfunction addPadding(nodeArray, padding) {\n  let i = 1;\n  let x = 0;\n  let prev = 0;\n  let maxY = 0;\n  const rows = [];\n  nodeArray.sort(nodeByXY);\n  for (const node of nodeArray) {\n    if (node.y) {\n      if (node.x === 0) {\n        rows.push(node.y);\n      } else {\n        if (x !== node.x) {\n          x = node.x;\n          prev = 0;\n        }\n\n        for (i = prev + 1; i < rows.length; i++) {\n          if (rows[i] > node.y) {\n            break;\n          }\n        }\n        prev = i;\n      }\n      node.y += i * padding;\n      i++;\n    }\n    maxY = Math.max(maxY, node.y + Math.max(node.in, node.out));\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {'min' | 'max'} size\n */\nfunction sortFlows(nodeArray, size) {\n  nodeArray.forEach((node) => {\n    const nodeSize = Math[size](node.in || node.out, node.out || node.in);\n    const overlapFrom = nodeSize < node.in;\n    const overlapTo = nodeSize < node.out;\n    let addY = 0;\n    let len = node.from.length;\n    node.from.sort((a, b) => (a.node.y + a.node.out / 2) - (b.node.y + b.node.out / 2)).forEach((flow, idx) => {\n      if (overlapFrom) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n    addY = 0;\n    len = node.to.length;\n    node.to.sort((a, b) => (a.node.y + a.node.in / 2) - (b.node.y + b.node.in / 2)).forEach((flow, idx) => {\n      if (overlapTo) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n  });\n}\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @param {boolean} priority\n * @param {'min' | 'max'} size\n * @return {{maxY: number, maxX: number}}\n */\nfunction layout(nodes, data, priority, size) {\n  const nodeArray = [...nodes.values()];\n  const maxX = calculateX(nodes, data);\n  const maxY = priority ? calculateYUsingPriority(nodeArray, maxX) : calculateY(nodeArray, maxX);\n  const padding = maxY * 0.03; // rows;\n  const maxYWithPadding = addPadding(nodeArray, padding);\n  sortFlows(nodeArray, size);\n  return {maxX, maxY: maxYWithPadding};\n}\n\n/**\n * @param {Array<SankeyDataPoint>} data Array of raw data elements\n * @return {Map<string, SankeyNode>}\n */\nfunction buildNodesFromRawData(data) {\n  const nodes = new Map();\n  for (let i = 0; i < data.length; i++) {\n    const {from, to, flow} = data[i];\n\n    if (!nodes.has(from)) {\n      nodes.set(from, {\n        key: from,\n        in: 0,\n        out: flow,\n        from: [],\n        to: [{key: to, flow: flow, index: i}],\n      });\n    } else {\n      const node = nodes.get(from);\n      node.out += flow;\n      node.to.push({key: to, flow: flow, index: i});\n    }\n    if (!nodes.has(to)) {\n      nodes.set(to, {\n        key: to,\n        in: flow,\n        out: 0,\n        from: [{key: from, flow: flow, index: i}],\n        to: [],\n      });\n    } else {\n      const node = nodes.get(to);\n      node.in += flow;\n      node.from.push({key: from, flow: flow, index: i});\n    }\n  }\n\n  const flowSort = (a, b) => b.flow - a.flow;\n\n  [...nodes.values()].forEach(node => {\n    node.from = node.from.sort(flowSort);\n    node.from.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n\n    node.to = node.to.sort(flowSort);\n    node.to.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n  });\n\n  return nodes;\n}\n\n/**\n * @param {Array<FromToElement>} arr\n * @param {string} key\n * @param {number} index\n * @return {number}\n */\nfunction getAddY(arr, key, index) {\n  for (const item of arr) {\n    if (item.key === key && item.index === index) {\n      return item.addY;\n    }\n  }\n  return 0;\n}\n\nclass SankeyController extends DatasetController {\n  /**\n   * @param {ChartMeta<Flow, Element>} meta\n   * @param {Array<SankeyDataPoint>} data Array of original data elements\n   * @param {number} start\n   * @param {number} count\n   * @return {Array<SankeyParsedData>}\n   */\n  parseObjectData(meta, data, start, count) {\n    const {from: fromKey = 'from', to: toKey = 'to', flow: flowKey = 'flow'} = this.options.parsing;\n    const sankeyData = data.map(({[fromKey]: from, [toKey]: to, [flowKey]: flow}) => ({from, to, flow}));\n    const {xScale, yScale} = meta;\n    const parsed = []; /* Array<SankeyParsedData> */\n    const nodes = this._nodes = buildNodesFromRawData(sankeyData);\n    /* getDataset() => SankeyControllerDatasetOptions */\n    const {column, priority, size} = this.getDataset();\n    if (priority) {\n      for (const node of nodes.values()) {\n        if (node.key in priority) {\n          node.priority = priority[node.key];\n        }\n      }\n    }\n    if (column) {\n      for (const node of nodes.values()) {\n        if (node.key in column) {\n          node.column = true;\n          node.x = column[node.key];\n        }\n      }\n    }\n\n    const {maxX, maxY} = layout(nodes, sankeyData, !!priority, validateSizeValue(size));\n\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    for (let i = 0, ilen = sankeyData.length; i < ilen; ++i) {\n      const dataPoint = sankeyData[i];\n      const from = nodes.get(dataPoint.from);\n      const to = nodes.get(dataPoint.to);\n      const fromY = from.y + getAddY(from.to, dataPoint.to, i);\n      const toY = to.y + getAddY(to.from, dataPoint.from, i);\n      parsed.push({\n        x: xScale.parse(from.x, i),\n        y: yScale.parse(fromY, i),\n        _custom: {\n          from,\n          to,\n          x: xScale.parse(to.x, i),\n          y: yScale.parse(toY, i),\n          height: yScale.parse(dataPoint.flow, i),\n        }\n      });\n    }\n    return parsed.slice(start, start + count);\n  }\n\n  getMinMax(scale) {\n    return {\n      min: 0,\n      max: scale === this._cachedMeta.xScale ? this._maxX : this._maxY\n    };\n  }\n\n  update(mode) {\n    const {data} = this._cachedMeta;\n\n    this.updateElements(data, 0, data.length, mode);\n  }\n\n  /**\n   * @param {Array<Flow>} elems\n   * @param {number} start\n   * @param {number} count\n   * @param {\"resize\" | \"reset\" | \"none\" | \"hide\" | \"show\" | \"normal\" | \"active\"} mode\n   */\n  updateElements(elems, start, count, mode) {\n    const {xScale, yScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(mode, elems[start], firstOpts);\n    const dataset = this.getDataset();\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1) / 2 + 0.5;\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    for (let i = start; i < start + count; i++) {\n      /* getParsed(idx: number) => SankeyParsedData */\n      const parsed = this.getParsed(i);\n      const custom = parsed._custom;\n      const y = yScale.getPixelForValue(parsed.y);\n      this.updateElement(\n        elems[i],\n        i,\n        {\n          x: xScale.getPixelForValue(parsed.x) + nodeWidth + borderWidth,\n          y,\n          x2: xScale.getPixelForValue(custom.x) - borderWidth,\n          y2: yScale.getPixelForValue(custom.y),\n          from: custom.from,\n          to: custom.to,\n          progress: mode === 'reset' ? 0 : 1,\n          height: Math.abs(yScale.getPixelForValue(parsed.y + custom.height) - y),\n          options: this.resolveDataElementOptions(i, mode)\n        },\n        mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode);\n  }\n\n  _drawLabels() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset(); /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n    const labels = dataset.labels;\n    const {xScale, yScale} = this._cachedMeta;\n\n    ctx.save();\n    const chartArea = this.chart.chartArea;\n    for (const node of nodes.values()) {\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      const label = labels && labels[node.key] || node.key;\n      let textX = x;\n      ctx.fillStyle = dataset.color || 'black';\n      ctx.textBaseline = 'middle';\n      if (x < chartArea.width / 2) {\n        ctx.textAlign = 'left';\n        textX += nodeWidth + borderWidth + 4;\n      } else {\n        ctx.textAlign = 'right';\n        textX -= borderWidth + 4;\n      }\n      this._drawLabel(label, y, height, ctx, textX);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {string} label\n   * @param {number} y\n   * @param {number} height\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {number} textX\n   * @private\n   */\n  _drawLabel(label, y, height, ctx, textX) {\n    const font = toFont(this.options.font, this.chart.options.font);\n    const lines = isNullOrUndef(label) ? [] : toTextLines(label);\n    const linesLength = lines.length;\n    const middle = y + height / 2;\n    const textHeight = font.lineHeight;\n    const padding = valueOrDefault(this.options.padding, textHeight / 2);\n\n    ctx.font = font.string;\n\n    if (linesLength > 1) {\n      const top = middle - (textHeight * linesLength / 2) + padding;\n      for (let i = 0; i < linesLength; i++) {\n        ctx.fillText(lines[i], textX, top + (i * textHeight));\n      }\n    } else {\n      ctx.fillText(label, textX, middle);\n    }\n  }\n\n  _drawNodes() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset();  /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const {xScale, yScale} = this._cachedMeta;\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    ctx.save();\n    ctx.strokeStyle = dataset.borderColor || 'black';\n    ctx.lineWidth = borderWidth;\n\n    for (const node of nodes.values()) {\n      ctx.fillStyle = node.color;\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      if (borderWidth) {\n        ctx.strokeRect(x, y, nodeWidth, height);\n      }\n      ctx.fillRect(x, y, nodeWidth, height);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * That's where the drawing process happens\n   */\n  draw() {\n    const ctx = this._ctx;\n    const data = this.getMeta().data || []; /* Array<Flow> */\n\n    // Set node colors\n    const active = [];\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      const flow = data[i]; /* Flow at index i */\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n      if (flow.active) {\n        active.push(flow);\n      }\n    }\n    // Make sure nodes connected to hovered flows are using hover colors.\n    for (const flow of active) {\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n    }\n\n    /* draw SankeyNodes on the canvas */\n    this._drawNodes();\n\n    /* draw Flow elements on the canvas */\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(ctx);\n    }\n\n    /* draw labels (for SankeyNodes) on the canvas */\n    this._drawLabels();\n  }\n}\n\nSankeyController.id = 'sankey';\n\nSankeyController.defaults = {\n  dataElementType: 'flow',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'x2', 'y2', 'height']\n    },\n    progress: {\n      easing: 'linear',\n      duration: (ctx) => ctx.type === 'data' ? (ctx.parsed._custom.x - ctx.parsed.x) * 200 : undefined,\n      delay: (ctx) => ctx.type === 'data' ? ctx.parsed.x * 500 + ctx.dataIndex * 20 : undefined,\n    },\n    colors: {\n      type: 'color',\n      properties: ['colorFrom', 'colorTo'],\n    },\n  },\n  transitions: {\n    hide: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          to: 'transparent'\n        }\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          from: 'transparent'\n        }\n      }\n    }\n  }\n};\n\nSankeyController.overrides = {\n  interaction: {\n    mode: 'nearest',\n    intersect: true\n  },\n  datasets: {\n    clip: false,\n    parsing: true\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          const item = context.dataset.data[context.dataIndex];\n          return item.from + ' -> ' + item.to + ': ' + item.flow;\n        }\n      },\n    },\n    legend: {\n      display: false,\n    },\n  },\n  scales: {\n    x: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      offset: false,\n    },\n    y: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      reverse: true,\n      offset: false,\n    },\n  },\n  layout: {\n    padding: {\n      top: 3,\n      left: 3,\n      right: 13,\n      bottom: 3,\n    },\n  },\n};\n\n/**\n * @typedef {{x: number, y: number}} ControlPoint\n * @typedef {{cp1: ControlPoint, cp2: ControlPoint}} ControlPoints\n *\n * @param {number} x\n * @param {number} y\n * @param {number} x2\n * @param {number} y2\n * @return {ControlPoints}\n */\nconst controlPoints = (x, y, x2, y2) => x < x2\n  ? {\n    cp1: {x: x + (x2 - x) / 3 * 2, y},\n    cp2: {x: x + (x2 - x) / 3, y: y2}\n  }\n  : {\n    cp1: {x: x - (x - x2) / 3, y: 0},\n    cp2: {x: x2 + (x - x2) / 3, y: 0}\n  };\n\n/**\n *\n * @param {ControlPoint} p1\n * @param {ControlPoint} p2\n * @param {number} t\n * @return {ControlPoint}\n */\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Flow} flow\n */\nfunction setStyle(ctx, {x, x2, options}) {\n  let fill;\n\n  if (options.colorMode === 'from') {\n    fill = color(options.colorFrom).alpha(0.5).rgbString();\n  } else if (options.colorMode === 'to') {\n    fill = color(options.colorTo).alpha(0.5).rgbString();\n  } else {\n    fill = ctx.createLinearGradient(x, 0, x2, 0);\n    fill.addColorStop(0, color(options.colorFrom).alpha(0.5).rgbString());\n    fill.addColorStop(1, color(options.colorTo).alpha(0.5).rgbString());\n  }\n\n  ctx.fillStyle = fill;\n  ctx.strokeStyle = fill;\n  ctx.lineWidth = 0.5;\n}\n\nclass Flow extends Element {\n\n  /**\n   * @param {FlowConfig} cfg\n   */\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.x2 = undefined;\n    this.y2 = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  draw(ctx) {\n    const me = this;\n    const {x, x2, y, y2, height, progress} = me;\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n\n    if (progress === 0) {\n      return;\n    }\n    ctx.save();\n    if (progress < 1) {\n      ctx.beginPath();\n      ctx.rect(x, Math.min(y, y2), (x2 - x) * progress + 1, Math.abs(y2 - y) + height + 1);\n      ctx.clip();\n    }\n\n    setStyle(ctx, me);\n\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, x2, y2);\n    ctx.lineTo(x2, y2 + height);\n    ctx.bezierCurveTo(cp2.x, cp2.y + height, cp1.x, cp1.y + height, x, y + height);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    if (mouseX < x || mouseX > x2) {\n      return false;\n    }\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n    const t = (mouseX - x) / (x2 - x);\n    const p1 = {x, y};\n    const p2 = {x: x2, y: y2};\n    const a = pointInLine(p1, cp1, t);\n    const b = pointInLine(cp1, cp2, t);\n    const c = pointInLine(cp2, p2, t);\n    const d = pointInLine(a, b, t);\n    const e = pointInLine(b, c, t);\n    const topY = pointInLine(d, e, t).y;\n    return mouseY >= topY && mouseY <= topY + height;\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inXRange(mouseX, useFinalPosition) {\n    const {x, x2} = this.getProps(['x', 'x2'], useFinalPosition);\n    return mouseX >= x && mouseX <= x2;\n  }\n\n  /**\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inYRange(mouseY, useFinalPosition) {\n    const {y, y2, height} = this.getProps(['y', 'y2', 'height'], useFinalPosition);\n    const minY = Math.min(y, y2);\n    const maxY = Math.max(y, y2) + height;\n    return mouseY >= minY && mouseY <= maxY;\n  }\n\n  /**\n   * @param {boolean} useFinalPosition\n   * @return {{x: number, y:number}}\n   */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    return {\n      x: (x + x2) / 2,\n      y: (y + y2 + height) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  /**\n   * @param {\"x\" | \"y\"} axis\n   * @return {number}\n   */\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n\nFlow.id = 'flow';\nFlow.defaults = {\n  colorFrom: 'red',\n  colorTo: 'green',\n  colorMode: 'gradient',\n  hoverColorFrom: (ctx, options) => getHoverColor(options.colorFrom),\n  hoverColorTo: (ctx, options) => getHoverColor(options.colorTo)\n};\n\nexport { Flow, SankeyController };\n","export * from '../dist/helpers.js';\n"],"names":["_chart","require","window","RocketBotWeb","parcelHelpers","_auto","_chartjsChartSankey","Chart","register","SankeyController","Flow","doSetUpByDayOfWeek","canvas","document","getElementById","dataString","textContent","data","JSON","parse","datasets","totalWeekdayToCount","rider","riders","weekdayToCount","riderToWeekdayToCount","length","push","i","label","yAxisID","type","labels","options","scales","yRegular","display","position","title","text","yTotal","doSetUpByRideCountGroup","riderToGroupToCount","chart","rideCountGroupNames","y","ticks","format","minimumFractionDigits","logPlotCheckbox","addEventListener","checked","update","doSetUpLatestRiderCount","datum","from","substring","to","doSetUpLastRiderPie","ALL_VALUE","controls","companyLabel","createElement","appendChild","createTextNode","companySelect","typeLabel","typeSelect","riddenOnlyLabel","riddenOnlyCheckbox","allCompanies","Object","keys","companyToTypeToLastRiderToCount","sort","allTypes","company","tp","indexOf","allCompaniesOption","value","companyOption","selectedIndex","allTypesOption","typeOption","updateChart","considerCompanies","considerTypes","companyToTypeToLastRiderToCountRidden","lastChild","removeChild","consideredTypes","companyName","companyTypes","riderToLastVehicleCount","typeToLastRiderToCount","lastRiderToCount","undefined","dataRiders","dataValues","map","r","doSetUpFixedCouplingMemberUsage","frontVehicleTypeToRiderToCounts","allFrontVehicleTypes","frontVehicleType","yAll","riderToNumbers","typeRiders","riderName","numbers","doSetUpGlobalStats","reducedCompanies","otherRides","rideCounts","companyToTotalRides","c","a","b","minValue","rides","reducedCompanyNames","l","reducedCompanyValues","setUpByDayOfWeek","setUpByRideCountGroup","setUpLatestRiderCount","setUpLastRiderPie","setUpFixedCouplingMemberUsage","setUpGlobalStats","Charting","Bim","_chartJs","exportAll","exports","registerables","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","_notify","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","_update","Date","now","remaining","running","items","item","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","isObject","animationOptions","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","xid","xAxisID","valueOrDefault","yid","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","_getStackCount","_getStackIndex","name","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","style","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","intlCache","num","stringify","Intl","NumberFormat","getNumberFormat","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","maximumFractionDigits","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","rectX","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","export","b2n","b2p","index_esm","hexParse","hsl2rgb","hslString","hsv2rgb","hueParse","hwb2rgb","lim","n2b","n2p","nameParse","p2b","rgb2hsl","rgbParse","rgbString","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","hueValue","calln","hue","exec","deg","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpacked","tkeys","ok","nk","unpack","RGB_RE","modHSL","fromObject","_rgb","_valid","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","desaturate","interopDefault","__esModule","default","defineInteropFlag","dest","destName","_helpers","validateSizeValue","nextColumn","columnsNotInTo","nodeByXY","prevCountId","nodeCount","list","countId","getCountId","elem","_visited","flowByNodeCount","processFrom","flow","out","processTo","in","setOrGetY","calculateY","nodeArray","rest","leftNodes","rightNodes","leftToDo","rightToDo","centerToDo","leftY","rightY","processRest","nodes","priority","dataPoint","column","calculateX","nextYStart","calculateYUsingPriority","maxYWithPadding","rows","addPadding","nodeSize","overlapFrom","overlapTo","addY","sortFlows","getAddY","fromKey","toKey","flowKey","sankeyData","_nodes","flowSort","buildNodesFromRawData","_maxX","_maxY","fromY","toY","elems","nodeWidth","_drawLabels","textX","_drawLabel","toTextLines","linesLength","middle","textHeight","_drawNodes","colorFrom","colorTo","transitions","pointInLine","colorMode","createLinearGradient","addColorStop","topY","hoverColorFrom","hoverColorTo","_helpersJs"],"version":3,"file":"rocketbotweb.js.map"}