{"mappings":"uGAkjWAA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EC9iRAC,EAEAC,EAIAC,EAEAC,EACAC,EACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GAEAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,G;;;;;;;ACxqFA,SAASC,GAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,C,4rDACA,MAAMC,GAAM,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,GAAIP,GACX,OAAOC,GAAIF,GAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,GAAIR,GACX,OAAOC,GAAIF,GAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,GAAIT,GAC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","sources":["node_modules/chart.js/dist/chart.cjs","node_modules/chart.js/dist/chunks/helpers.segment.cjs","node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/auto/auto.cjs","src/bim/chart.ts","src/rocketbotweb.ts"],"sourcesContent":["/*!\n * Chart.js v4.1.2\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar helpers_segment = require('./chunks/helpers.segment.cjs');\nrequire('@kurkle/color');\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = helpers_segment.requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = helpers_segment.color(from || transparent);\n        const c1 = c0.valid && helpers_segment.color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = helpers_segment.resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = helpers_segment.resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = helpers_segment.effects[cfg.easing] || helpers_segment.effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = helpers_segment.resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = helpers_segment.resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!helpers_segment.isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(helpers_segment.defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!helpers_segment.isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (helpers_segment.isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (helpers_segment.isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (helpers_segment.isNumberFinite(otherValue) && (singleMode || value === 0 || helpers_segment.sign(value) === helpers_segment.sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = helpers_segment.valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = helpers_segment.valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = helpers_segment.valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            helpers_segment.unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (helpers_segment.isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                helpers_segment.unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                helpers_segment.listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (helpers_segment.isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (helpers_segment.isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(helpers_segment.resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(helpers_segment.resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !helpers_segment.isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (helpers_segment.isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(helpers_segment.valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && helpers_segment.defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(helpers_segment.defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = helpers_segment._arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (helpers_segment.defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (helpers_segment.isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (helpers_segment.isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return helpers_segment.sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(helpers_segment.resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(helpers_segment.resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || helpers_segment.isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (helpers_segment.isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && helpers_segment.sign(value) !== helpers_segment.sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !helpers_segment.isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = helpers_segment.sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = helpers_segment.valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += helpers_segment.valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < helpers_segment.TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(helpers_segment.HALF_PI, startY, endY);\n        const minX = calcMin(helpers_segment.PI, startX, endX);\n        const minY = calcMin(helpers_segment.PI + helpers_segment.HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (helpers_segment.isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+helpers_segment.resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return helpers_segment.toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return helpers_segment.toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = helpers_segment.TAU;\n        let max = -helpers_segment.TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(helpers_segment.toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = helpers_segment.toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / helpers_segment.TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return helpers_segment.TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(helpers_segment.valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * helpers_segment.PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? helpers_segment.toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? helpers_segment._rlookupByKey : helpers_segment._lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !helpers_segment._isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = helpers_segment.getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (helpers_segment._angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!helpers_segment.isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (helpers_segment.defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (helpers_segment.defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = helpers_segment.toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        helpers_segment.each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, helpers_segment.toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        helpers_segment.each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = helpers_segment.readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = helpers_segment.readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = helpers_segment.supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = helpers_segment.getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && helpers_segment._getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = helpers_segment.throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = helpers_segment.throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (helpers_segment.isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return helpers_segment.getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = helpers_segment._getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!helpers_segment._isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return helpers_segment.isNumber(this.x) && helpers_segment.isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, helpers_segment.isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, helpers_segment.isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = helpers_segment._factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = helpers_segment.valueOrDefault(majorStart, 0);\n    const end = Math.min(helpers_segment.valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    helpers_segment.each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = helpers_segment.toFont(options.font, fallback);\n    const padding = helpers_segment.toPadding(options.padding);\n    const lines = helpers_segment.isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return helpers_segment.createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return helpers_segment.createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = helpers_segment._toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = helpers_segment._alignStartEnd(align, left, right);\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = helpers_segment._alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -helpers_segment.HALF_PI : helpers_segment.HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = helpers_segment.finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = helpers_segment.finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = helpers_segment.finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = helpers_segment.finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: helpers_segment.finiteOrDefault(_userMin, _suggestedMin),\n            max: helpers_segment.finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: helpers_segment.isNumberFinite(_userMin),\n            maxDefined: helpers_segment.isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: helpers_segment.finiteOrDefault(min, helpers_segment.finiteOrDefault(max, min)),\n            max: helpers_segment.finiteOrDefault(max, helpers_segment.finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        helpers_segment.callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = helpers_segment._addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        helpers_segment.callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        helpers_segment.callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        helpers_segment.callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        helpers_segment.callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        helpers_segment.callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = helpers_segment.callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        helpers_segment.callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        helpers_segment.callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = helpers_segment._limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = helpers_segment.toDegrees(Math.min(Math.asin(helpers_segment._limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(helpers_segment._limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(helpers_segment._limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        helpers_segment.callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        helpers_segment.callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = helpers_segment.toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        helpers_segment.callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (helpers_segment.isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!helpers_segment.isNullOrUndef(label) && !helpers_segment.isArray(label)) {\n                width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (helpers_segment.isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!helpers_segment.isNullOrUndef(nestedLabel) && !helpers_segment.isArray(nestedLabel)) {\n                        width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return helpers_segment._int16Range(this._alignToPixels ? helpers_segment._alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = helpers_segment.toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return helpers_segment._alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = helpers_segment.valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = helpers_segment._alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = helpers_segment.isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = helpers_segment._alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = helpers_segment._alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = helpers_segment._alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = helpers_segment._alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            helpers_segment.clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            helpers_segment.renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = helpers_segment.toFont(title.font);\n        const padding = helpers_segment.toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || helpers_segment.isObject(position)) {\n            offset += padding.bottom;\n            if (helpers_segment.isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        helpers_segment.renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = helpers_segment.valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = helpers_segment.valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return helpers_segment.toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            helpers_segment.defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in helpers_segment.defaults[scope]) {\n            delete helpers_segment.defaults[scope][id];\n            if (this.override) {\n                delete helpers_segment.overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = helpers_segment.merge(Object.create(null), [\n        parentScope ? helpers_segment.defaults.get(parentScope) : {},\n        helpers_segment.defaults.get(scope),\n        item.defaults\n    ]);\n    helpers_segment.defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        helpers_segment.defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        helpers_segment.defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                helpers_segment.each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = helpers_segment._capitalize(method);\n        helpers_segment.callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        helpers_segment.callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (helpers_segment.callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!helpers_segment.isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = helpers_segment.valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = helpers_segment.defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = helpers_segment.overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!helpers_segment.isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = helpers_segment.mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = helpers_segment.overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            helpers_segment.mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        helpers_segment.mergeIf(scale, [\n            helpers_segment.defaults.scales[scale.type],\n            helpers_segment.defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = helpers_segment.valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = helpers_segment.resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            helpers_segment.overrides[type] || {},\n            helpers_segment.defaults.datasets[type] || {},\n            {\n                type\n            },\n            helpers_segment.defaults,\n            helpers_segment.descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = helpers_segment.isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = helpers_segment._attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return helpers_segment.isObject(context) ? helpers_segment._attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = helpers_segment._createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>helpers_segment.isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || helpers_segment.isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = helpers_segment._descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (helpers_segment.isFunction(value) || hasFunction(value)) || indexable && helpers_segment.isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.1.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    helpers_segment.callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    helpers_segment.callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (helpers_segment._isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = helpers_segment.defaults;\n    static instances = instances;\n    static overrides = helpers_segment.overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = helpers_segment.uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = helpers_segment.debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!helpers_segment.isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            helpers_segment.retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        helpers_segment.clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!helpers_segment.retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        helpers_segment.callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        helpers_segment.each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        helpers_segment.each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = helpers_segment.valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        helpers_segment.each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        helpers_segment.each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = helpers_segment.defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        helpers_segment.each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            helpers_segment.each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        helpers_segment.each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!helpers_segment.setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!helpers_segment.setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        helpers_segment.each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, helpers_segment.isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            helpers_segment.clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            helpers_segment.unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return helpers_segment._isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = helpers_segment.createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (helpers_segment.defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            helpers_segment.clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        helpers_segment.each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        helpers_segment.each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        helpers_segment.each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = helpers_segment._isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            helpers_segment.callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                helpers_segment.callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return helpers_segment.each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + helpers_segment.HALF_PI, startAngle - helpers_segment.HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return helpers_segment._readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return helpers_segment._limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: helpers_segment._limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: helpers_segment._limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / helpers_segment.PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + helpers_segment.HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + helpers_segment.HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - helpers_segment.HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - helpers_segment.HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = helpers_segment.getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = helpers_segment.valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= helpers_segment.TAU || helpers_segment._angleBetween(angle, startAngle, endAngle);\n        const withinRadius = helpers_segment._isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > helpers_segment.TAU ? Math.floor(circumference / helpers_segment.TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(helpers_segment.PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = helpers_segment.valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(helpers_segment.valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = helpers_segment.valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = helpers_segment.valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = helpers_segment.valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = helpers_segment.valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierInterpolation;\n    }\n    return helpers_segment._pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            helpers_segment._updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = helpers_segment._computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = helpers_segment._boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !helpers_segment._isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        helpers_segment.drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : helpers_segment._limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = helpers_segment.toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = helpers_segment.toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || helpers_segment.isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || helpers_segment._isBetween(x, bounds.left, bounds.right)) && (skipY || helpers_segment._isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? helpers_segment.addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { options: { elements  } , data: { datasets  }  } = chart.config;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!helpers_segment.isNullOrUndef(minIndex) && !helpers_segment.isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (helpers_segment.resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (helpers_segment.isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = helpers_segment._boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = helpers_segment._boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = helpers_segment._normalizeAngle(start);\n        end = helpers_segment._normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (helpers_segment.isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!helpers_segment.isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (helpers_segment.isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (helpers_segment.isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (helpers_segment.isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (helpers_segment.isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = helpers_segment.valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (helpers_segment._isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: helpers_segment.TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (helpers_segment.isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (helpers_segment.isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        helpers_segment.clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        helpers_segment.unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = helpers_segment.callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = helpers_segment.getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            helpers_segment.clipArea(ctx, this);\n            this._draw();\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = helpers_segment.defaults.color;\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = helpers_segment.valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = helpers_segment.valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = helpers_segment.valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = helpers_segment.valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = helpers_segment.valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = helpers_segment.valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(helpers_segment.valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                helpers_segment.drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = helpers_segment.toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    helpers_segment.addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            helpers_segment.renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        helpers_segment.overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = helpers_segment._textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        helpers_segment.restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = helpers_segment._alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + helpers_segment._alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = helpers_segment._alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(helpers_segment._toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        helpers_segment.renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (helpers_segment._isBetween(x, this.left, this.right) && helpers_segment._isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (helpers_segment._isBetween(x, hitBox.left, hitBox.left + hitBox.width) && helpers_segment._isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                helpers_segment.callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                helpers_segment.callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            helpers_segment.callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = helpers_segment.toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = helpers_segment.isArray(opts.text) ? opts.text.length : 1;\n        this._padding = helpers_segment.toPadding(opts.padding);\n        const textSize = lineCount * helpers_segment.toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = helpers_segment._alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = helpers_segment._alignStartEnd(align, bottom, top);\n                rotation = helpers_segment.PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = helpers_segment._alignStartEnd(align, top, bottom);\n                rotation = helpers_segment.PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = helpers_segment.toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        helpers_segment.renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: helpers_segment._toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = helpers_segment.distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (helpers_segment.isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = helpers_segment.toFont(options.bodyFont);\n    const titleFont = helpers_segment.toFont(options.titleFont);\n    const footerFont = helpers_segment.toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = helpers_segment.toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    helpers_segment.each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    helpers_segment.each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    helpers_segment.each(body, (bodyItem)=>{\n        helpers_segment.each(bodyItem.before, maxLineWidth);\n        helpers_segment.each(bodyItem.lines, maxLineWidth);\n        helpers_segment.each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    helpers_segment.each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: helpers_segment._limitValue(x, 0, chart.width - size.width),\n        y: helpers_segment._limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = helpers_segment.toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return helpers_segment.createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: helpers_segment.noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: helpers_segment.noop,\n    beforeBody: helpers_segment.noop,\n    beforeLabel: helpers_segment.noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!helpers_segment.isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: helpers_segment.noop,\n    afterBody: helpers_segment.noop,\n    beforeFooter: helpers_segment.noop,\n    footer: helpers_segment.noop,\n    afterFooter: helpers_segment.noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        helpers_segment.each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        helpers_segment.each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = helpers_segment.toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = helpers_segment.isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = helpers_segment.toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        helpers_segment.each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers_segment.each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            helpers_segment.each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        helpers_segment.each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = helpers_segment.toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = helpers_segment.toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            helpers_segment.overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            helpers_segment.restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !helpers_segment._elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : helpers_segment._limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, helpers_segment.valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !helpers_segment.isNullOrUndef(min);\n    const maxDefined = !helpers_segment.isNullOrUndef(max);\n    const countDefined = !helpers_segment.isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = helpers_segment.niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = helpers_segment.niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!helpers_segment.isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && helpers_segment.almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (helpers_segment.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(helpers_segment._decimalPlaces(spacing), helpers_segment._decimalPlaces(niceMin));\n    factor = Math.pow(10, helpers_segment.isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (helpers_segment.almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && helpers_segment.almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = helpers_segment.toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = helpers_segment.sign(min);\n            const maxSign = helpers_segment.sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = helpers_segment.toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(helpers_segment.log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = helpers_segment.finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = helpers_segment.finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = helpers_segment.finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return helpers_segment.isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = helpers_segment.isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !helpers_segment.isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = helpers_segment.log10(start);\n        this._valueRange = helpers_segment.log10(this.max) - helpers_segment.log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (helpers_segment.log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = helpers_segment.toPadding(tickOpts.backdropPadding);\n        return helpers_segment.valueOrDefault(tickOpts.font && tickOpts.font.size, helpers_segment.defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = helpers_segment.isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: helpers_segment._longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? helpers_segment.PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = helpers_segment.toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = helpers_segment._normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(helpers_segment.toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? helpers_segment.PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(helpers_segment.toDegrees(helpers_segment._normalizeAngle(pointLabelPosition.angle + helpers_segment.HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = helpers_segment.toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!helpers_segment.isNullOrUndef(backdropColor)) {\n            const borderRadius = helpers_segment.toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        helpers_segment.renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, helpers_segment.TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return helpers_segment.createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: helpers_segment.Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = helpers_segment.toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = helpers_segment.callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = helpers_segment.TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return helpers_segment._normalizeAngle(index * angleMultiplier + helpers_segment.toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (helpers_segment.isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (helpers_segment.isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - helpers_segment.HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = helpers_segment.toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            helpers_segment.renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (helpers_segment.isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!helpers_segment.isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (helpers_segment.isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = helpers_segment._lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        helpers_segment.mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = helpers_segment._filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = helpers_segment._limitValue(start, 0, limit);\n        end = helpers_segment._limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = helpers_segment.valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = helpers_segment.isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return helpers_segment.callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = helpers_segment.toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return helpers_segment._arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexports.Ticks = helpers_segment.Ticks;\nexports.defaults = helpers_segment.defaults;\nexports.Animation = Animation;\nexports.Animations = Animations;\nexports.ArcElement = ArcElement;\nexports.BarController = BarController;\nexports.BarElement = BarElement;\nexports.BasePlatform = BasePlatform;\nexports.BasicPlatform = BasicPlatform;\nexports.BubbleController = BubbleController;\nexports.CategoryScale = CategoryScale;\nexports.Chart = Chart;\nexports.Colors = plugin_colors;\nexports.DatasetController = DatasetController;\nexports.Decimation = plugin_decimation;\nexports.DomPlatform = DomPlatform;\nexports.DoughnutController = DoughnutController;\nexports.Element = Element;\nexports.Filler = index;\nexports.Interaction = Interaction;\nexports.Legend = plugin_legend;\nexports.LineController = LineController;\nexports.LineElement = LineElement;\nexports.LinearScale = LinearScale;\nexports.LogarithmicScale = LogarithmicScale;\nexports.PieController = PieController;\nexports.PointElement = PointElement;\nexports.PolarAreaController = PolarAreaController;\nexports.RadarController = RadarController;\nexports.RadialLinearScale = RadialLinearScale;\nexports.Scale = Scale;\nexports.ScatterController = ScatterController;\nexports.SubTitle = plugin_subtitle;\nexports.TimeScale = TimeScale;\nexports.TimeSeriesScale = TimeSeriesScale;\nexports.Title = plugin_title;\nexports.Tooltip = plugin_tooltip;\nexports._adapters = adapters;\nexports._detectPlatform = _detectPlatform;\nexports.animator = animator;\nexports.controllers = controllers;\nexports.elements = elements;\nexports.layouts = layouts;\nexports.plugins = plugins;\nexports.registerables = registerables;\nexports.registry = registry;\nexports.scales = scales;\n//# sourceMappingURL=chart.cjs.map\n","/*!\n * Chart.js v4.1.2\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar color$1 = require('@kurkle/color');\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexports.HALF_PI = HALF_PI;\nexports.INFINITY = INFINITY;\nexports.PI = PI;\nexports.PITAU = PITAU;\nexports.QUARTER_PI = QUARTER_PI;\nexports.RAD_PER_DEG = RAD_PER_DEG;\nexports.TAU = TAU;\nexports.TWO_THIRDS_PI = TWO_THIRDS_PI;\nexports.Ticks = Ticks;\nexports._addGrace = _addGrace;\nexports._alignPixel = _alignPixel;\nexports._alignStartEnd = _alignStartEnd;\nexports._angleBetween = _angleBetween;\nexports._angleDiff = _angleDiff;\nexports._arrayUnique = _arrayUnique;\nexports._attachContext = _attachContext;\nexports._bezierCurveTo = _bezierCurveTo;\nexports._bezierInterpolation = _bezierInterpolation;\nexports._boundSegment = _boundSegment;\nexports._boundSegments = _boundSegments;\nexports._capitalize = _capitalize;\nexports._computeSegments = _computeSegments;\nexports._createResolver = _createResolver;\nexports._decimalPlaces = _decimalPlaces;\nexports._deprecated = _deprecated;\nexports._descriptors = _descriptors;\nexports._elementsEqual = _elementsEqual;\nexports._factorize = _factorize;\nexports._filterBetween = _filterBetween;\nexports._getParentNode = _getParentNode;\nexports._getStartAndCountOfVisiblePoints = _getStartAndCountOfVisiblePoints;\nexports._int16Range = _int16Range;\nexports._isBetween = _isBetween;\nexports._isClickEvent = _isClickEvent;\nexports._isDomSupported = _isDomSupported;\nexports._isPointInArea = _isPointInArea;\nexports._limitValue = _limitValue;\nexports._longestText = _longestText;\nexports._lookup = _lookup;\nexports._lookupByKey = _lookupByKey;\nexports._measureText = _measureText;\nexports._merger = _merger;\nexports._mergerIf = _mergerIf;\nexports._normalizeAngle = _normalizeAngle;\nexports._parseObjectDataRadialScale = _parseObjectDataRadialScale;\nexports._pointInLine = _pointInLine;\nexports._readValueToProps = _readValueToProps;\nexports._rlookupByKey = _rlookupByKey;\nexports._scaleRangesChanged = _scaleRangesChanged;\nexports._setMinAndMaxByKey = _setMinAndMaxByKey;\nexports._splitKey = _splitKey;\nexports._steppedInterpolation = _steppedInterpolation;\nexports._steppedLineTo = _steppedLineTo;\nexports._textX = _textX;\nexports._toLeftRightCenter = _toLeftRightCenter;\nexports._updateBezierControlPoints = _updateBezierControlPoints;\nexports.addRoundedRectPath = addRoundedRectPath;\nexports.almostEquals = almostEquals;\nexports.almostWhole = almostWhole;\nexports.callback = callback;\nexports.clearCanvas = clearCanvas;\nexports.clipArea = clipArea;\nexports.clone = clone;\nexports.color = color;\nexports.createContext = createContext;\nexports.debounce = debounce;\nexports.defaults = defaults;\nexports.defined = defined;\nexports.descriptors = descriptors;\nexports.distanceBetweenPoints = distanceBetweenPoints;\nexports.drawPoint = drawPoint;\nexports.drawPointLegend = drawPointLegend;\nexports.each = each;\nexports.effects = effects;\nexports.finiteOrDefault = finiteOrDefault;\nexports.fontString = fontString;\nexports.formatNumber = formatNumber;\nexports.getAngleFromPoint = getAngleFromPoint;\nexports.getHoverColor = getHoverColor;\nexports.getMaximumSize = getMaximumSize;\nexports.getRelativePosition = getRelativePosition;\nexports.getRtlAdapter = getRtlAdapter;\nexports.getStyle = getStyle;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isNullOrUndef = isNullOrUndef;\nexports.isNumber = isNumber;\nexports.isNumberFinite = isNumberFinite;\nexports.isObject = isObject;\nexports.isPatternOrGradient = isPatternOrGradient;\nexports.listenArrayEvents = listenArrayEvents;\nexports.log10 = log10;\nexports.merge = merge;\nexports.mergeIf = mergeIf;\nexports.niceNum = niceNum;\nexports.noop = noop;\nexports.overrideTextDirection = overrideTextDirection;\nexports.overrides = overrides;\nexports.readUsedSize = readUsedSize;\nexports.renderText = renderText;\nexports.requestAnimFrame = requestAnimFrame;\nexports.resolve = resolve;\nexports.resolveObjectKey = resolveObjectKey;\nexports.restoreTextDirection = restoreTextDirection;\nexports.retinaScale = retinaScale;\nexports.setsEqual = setsEqual;\nexports.sign = sign;\nexports.splineCurve = splineCurve;\nexports.splineCurveMonotone = splineCurveMonotone;\nexports.supportsEventListenerOptions = supportsEventListenerOptions;\nexports.throttled = throttled;\nexports.toDegrees = toDegrees;\nexports.toDimension = toDimension;\nexports.toFont = toFont;\nexports.toFontString = toFontString;\nexports.toLineHeight = toLineHeight;\nexports.toPadding = toPadding;\nexports.toPercentage = toPercentage;\nexports.toRadians = toRadians;\nexports.toTRBL = toTRBL;\nexports.toTRBLCorners = toTRBLCorners;\nexports.uid = uid;\nexports.unclipArea = unclipArea;\nexports.unlistenArrayEvents = unlistenArrayEvents;\nexports.valueOrDefault = valueOrDefault;\n//# sourceMappingURL=helpers.segment.cjs.map\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","const chartjs = require('../dist/chart.cjs');\nconst {Chart, registerables} = chartjs;\n\nChart.register(...registerables);\n\nmodule.exports = Object.assign(Chart, chartjs);\n","import { Chart, ChartData, ChartDataset, LineControllerChartOptions } from 'chart.js/auto';\r\n\r\ninterface ByDayOfWeekData {\r\n    riders: string[];\r\n    riderToWeekdayToCount: { [rider: string]: number[] };\r\n}\r\n\r\n\r\nexport module RocketBotWeb.Bim.Charting {\r\n    function doSetUpByDayOfWeek() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByDayOfWeekData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToWeekdayToCount[rider],\r\n            });\r\n        }\r\n\r\n        new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n                datasets: datasets,\r\n            },\r\n        });\r\n    }\r\n\r\n    export function setUpByDayOfWeek() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByDayOfWeek);\r\n    }\r\n}\r\n","import { RocketBotWeb } from \"./bim/chart\";\r\n\r\n// \"globals are evil\"\r\ndeclare global {\r\n    interface Window { RocketBotWeb: any; }\r\n}\r\nwindow.RocketBotWeb = RocketBotWeb;\r\n"],"names":["$a8d9920b0a6b42d5$export$27c7467594ef87bd","$a8d9920b0a6b42d5$export$ebe90cb607ad99e","$a8d9920b0a6b42d5$export$c35d437ae5945fcd","$a8d9920b0a6b42d5$export$8ab227dac26677d","$a8d9920b0a6b42d5$export$d48203c759d6a1fc","$a8d9920b0a6b42d5$export$e97d5dc64e999004","$a8d9920b0a6b42d5$export$a16ed71bf4b07672","$a8d9920b0a6b42d5$export$7b1aeb87f31f7da8","$a8d9920b0a6b42d5$export$a40a96b24b46cf35","$a8d9920b0a6b42d5$export$19b5c4773f17abe","$a8d9920b0a6b42d5$export$29e663ba4d09fe7","$a8d9920b0a6b42d5$export$acaa6426d77a227e","$a8d9920b0a6b42d5$export$c537fa0d021d010b","$a8d9920b0a6b42d5$export$75572ec5c55b4048","$a8d9920b0a6b42d5$export$be17f937e9aa7533","$a8d9920b0a6b42d5$export$f02da7f882cf6b2e","$a8d9920b0a6b42d5$export$e04603e7d8b77172","$a8d9920b0a6b42d5$export$db77ccec0bb4ccac","$a8d9920b0a6b42d5$export$d19ba4d812bed757","$a8d9920b0a6b42d5$export$a13296960cae0384","$a8d9920b0a6b42d5$export$ed247974535929c7","$a8d9920b0a6b42d5$export$3c9b5d28c11cbfd0","$a8d9920b0a6b42d5$export$55e463fa7bcd3469","$a8d9920b0a6b42d5$export$e7f4e5e8656f0b93","$a8d9920b0a6b42d5$export$85295eaf7cb3ac3e","$a8d9920b0a6b42d5$export$b21a3f1286706191","$a8d9920b0a6b42d5$export$bd159b522b230b7a","$a8d9920b0a6b42d5$export$2a270b3a0d973c85","$a8d9920b0a6b42d5$export$48dbc6ac651bf8be","$a8d9920b0a6b42d5$export$cfafc36d95386d38","$a8d9920b0a6b42d5$export$d60cfc58d3c358b6","$a8d9920b0a6b42d5$export$b2f2bae6713db87","$a8d9920b0a6b42d5$export$d5c56664638992a4","$a8d9920b0a6b42d5$export$a894c72689ff3ec","$a8d9920b0a6b42d5$export$85df64a8eb6dc986","$a8d9920b0a6b42d5$export$f99233281efd08a0","$a8d9920b0a6b42d5$export$28c660c63b792dea","$a8d9920b0a6b42d5$export$f32766ea09ec8bc4","$a8d9920b0a6b42d5$export$72cd9e67b1b784f9","$a8d9920b0a6b42d5$export$a424a0aa8f687495","$a8d9920b0a6b42d5$export$a6506504f799c5d5","$a8d9920b0a6b42d5$export$7a5d735b2ab6389d","$a8d9920b0a6b42d5$export$1ecca0613f5e56d2","$a8d9920b0a6b42d5$export$8b3ca321c77fdea6","$a8d9920b0a6b42d5$export$e8959e79e3af550f","$a8d9920b0a6b42d5$export$4bb7493d241fd8a5","$a8d9920b0a6b42d5$export$bcac1c16f1530ec2","$0c41959e849e6d51$export$f504979d7e0a75c7","$0c41959e849e6d51$export$6b5c1ceb16d01dc3","$0c41959e849e6d51$export$ad5b0b9ab7d48f58","$0c41959e849e6d51$export$27c7467594ef87bd","$0c41959e849e6d51$export$2108a285c6d368fb","$0c41959e849e6d51$export$9a14fdbc58acf4c2","$0c41959e849e6d51$export$5a543a65fb079fd4","$0c41959e849e6d51$export$c8d69afbf56b18fb","$0c41959e849e6d51$export$ab21e9bdc4456038","$0c41959e849e6d51$export$99fabdabc9306639","$0c41959e849e6d51$export$d686e8a2c7e4670a","$0c41959e849e6d51$export$b293f9e6a76ccb67","$0c41959e849e6d51$export$148b825391123da2","$0c41959e849e6d51$export$2aa04b5ea381e5ef","$0c41959e849e6d51$export$5e53a3af78d29c9b","$0c41959e849e6d51$export$d01b94f1671134ea","$0c41959e849e6d51$export$26fb58f28fc52499","$0c41959e849e6d51$export$400fa8d0f4170227","$0c41959e849e6d51$export$580f50db970e736a","$0c41959e849e6d51$export$49f7b262cfebf207","$0c41959e849e6d51$export$7ebd8af3702b5c5f","$0c41959e849e6d51$export$686f560e3d8d8d81","$0c41959e849e6d51$export$548768865e465888","$0c41959e849e6d51$export$973c349331dfee2e","$0c41959e849e6d51$export$bce34cb2dd85e15b","$0c41959e849e6d51$export$bb4db7e58a247289","$0c41959e849e6d51$export$e452e9331a34c805","$0c41959e849e6d51$export$12a62c2c00892b1b","$0c41959e849e6d51$export$113c3e3fa69f451","$0c41959e849e6d51$export$ff367ca379db1b11","$0c41959e849e6d51$export$83447152ef74ec18","$0c41959e849e6d51$export$75b750e7d0325364","$0c41959e849e6d51$export$c9e0712680af62c2","$0c41959e849e6d51$export$b2986c091b83d630","$0c41959e849e6d51$export$d132a7c5f504948f","$0c41959e849e6d51$export$a34a0bb8815b3976","$0c41959e849e6d51$export$56962e11da4e69b9","$0c41959e849e6d51$export$6273a0b5fdb3397b","$0c41959e849e6d51$export$5cbd2e016f86b330","$0c41959e849e6d51$export$e1f26c538e25b7bc","$0c41959e849e6d51$export$c36aa6f60e5f9dd9","$0c41959e849e6d51$export$4734b75f8edcfde5","$0c41959e849e6d51$export$c47372d23760c34f","$0c41959e849e6d51$export$7f497ff5e2decab","$0c41959e849e6d51$export$fd474f902760cb43","$0c41959e849e6d51$export$1946708b8e1f2eb2","$0c41959e849e6d51$export$9d4876463a0dcdac","$0c41959e849e6d51$export$e954c5a2f48786f8","$0c41959e849e6d51$export$9390f26d124aff92","$0c41959e849e6d51$export$eb872837e3137261","$0c41959e849e6d51$export$a1c066623ac679d3","$0c41959e849e6d51$export$8e00dce38820e4e","$0c41959e849e6d51$export$35e9368ef982300f","$0c41959e849e6d51$export$fd42f52fd3ae1109","$0c41959e849e6d51$export$61fc7d43ac8f84b0","$0c41959e849e6d51$export$ebe90cb607ad99e","$0c41959e849e6d51$export$43f40ad3fa1d5c97","$0c41959e849e6d51$export$2bfda5c0e9e6501a","$0c41959e849e6d51$export$b59117efbc9c7af","$0c41959e849e6d51$export$654275d54901f10e","$0c41959e849e6d51$export$eedd2d9233f73028","$0c41959e849e6d51$export$79b2f7037acddd43","$0c41959e849e6d51$export$fb4689499fb20c56","$0c41959e849e6d51$export$cd7150094da6021b","$0c41959e849e6d51$export$f5dd818bff069720","$0c41959e849e6d51$export$535033797f2ce2cd","$0c41959e849e6d51$export$43f60c7b026e1c0c","$0c41959e849e6d51$export$fbbc9f98d1d2faa5","$0c41959e849e6d51$export$6e4377fd9f545d29","$0c41959e849e6d51$export$43bee75e5e14138e","$0c41959e849e6d51$export$f6e2535fb5126e54","$0c41959e849e6d51$export$80e44811b5b09936","$0c41959e849e6d51$export$7e4aa119212bc614","$0c41959e849e6d51$export$b8db381c828934dc","$0c41959e849e6d51$export$a6cdc56e425d0d0a","$0c41959e849e6d51$export$607b58c2d24c8080","$0c41959e849e6d51$export$75e08744a3ff8516","$0c41959e849e6d51$export$4950aa0f605343fb","$0c41959e849e6d51$export$994a98a3da7cfa0f","$0c41959e849e6d51$export$eaf52ddd91b26a1f","$0c41959e849e6d51$export$8793edee2d425525","$0c41959e849e6d51$export$5f3c2e2fe8e79872","$0c41959e849e6d51$export$1591b5b8c61dbb9c","$0c41959e849e6d51$export$3ade630de0aed2da","$0c41959e849e6d51$export$482c90f94eb9717c","$0c41959e849e6d51$export$d371ad015c199c06","$0c41959e849e6d51$export$f7ad0328861e2f03","$0c41959e849e6d51$export$dc5f862a2d2a9639","$0c41959e849e6d51$export$a9c7d639586c8309","$0c41959e849e6d51$export$5c3a02d9d841168f","$0c41959e849e6d51$export$62c3ee984ad46566","$0c41959e849e6d51$export$c5552dfdbc7cec71","$0c41959e849e6d51$export$c0448364522a11be","$0c41959e849e6d51$export$9fd238990985ffcd","$0c41959e849e6d51$export$56cb859c01fa134d","$0c41959e849e6d51$export$336ea2043562ad7f","$0c41959e849e6d51$export$ef2390ba89692ceb","$0c41959e849e6d51$export$5797c8fdac42ecf","$0c41959e849e6d51$export$c37640da124effef","$0c41959e849e6d51$export$cba01ba138429a1d","$0c41959e849e6d51$export$ba0763c28c7e05cc","$0c41959e849e6d51$export$e31aa3fc326d3180","$0c41959e849e6d51$export$e2a22331486dcca0","$0c41959e849e6d51$export$3ad45aca862d9e55","$0c41959e849e6d51$export$1c5b740deccf1af9","$0c41959e849e6d51$export$3d79354e5d7230df","$5e534ae1a972f4ab$export$2077e0241d6afd3c","v","$5e534ae1a972f4ab$export$837ba5c449269406","l","h","Math","max","min","$5e534ae1a972f4ab$export$bcc6e673dfa14d36","$5e534ae1a972f4ab$export$ed9bd8dcaeba14f6","$5e534ae1a972f4ab$export$dbf961a8d278dbef","$5e534ae1a972f4ab$export$aa35ef1f24408ab9","$5e534ae1a972f4ab$var$map$1","A","B","C","D","E","F","a","b","c","d","e","f","$5e534ae1a972f4ab$var$hex","$5e534ae1a972f4ab$var$h1","$5e534ae1a972f4ab$var$h2","$5e534ae1a972f4ab$var$eq","$5e534ae1a972f4ab$export$1b06654353ef9f67","r","g","$5e534ae1a972f4ab$var$isShort","$5e534ae1a972f4ab$var$alpha","undefined","$5e534ae1a972f4ab$var$HUE_RE","$5e534ae1a972f4ab$var$hsl2rgbn","s","n","k","$5e534ae1a972f4ab$var$hsv2rgbn","$5e534ae1a972f4ab$var$hwb2rgbn","w","rgb","i","$5e534ae1a972f4ab$export$b5ba70b240f8f7f","$5e534ae1a972f4ab$var$hueValue","$5e534ae1a972f4ab$var$calln","Array","isArray","map","$5e534ae1a972f4ab$export$4c15bd42559b811d","$5e534ae1a972f4ab$var$hue","$5e534ae1a972f4ab$export$5e91288c399be4f9","str","m","exec","p1","p2","$5e534ae1a972f4ab$export$e2710022c70fc9ee","$5e534ae1a972f4ab$export$b785a357c84e4a04","$5e534ae1a972f4ab$var$map","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$5e534ae1a972f4ab$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$5e534ae1a972f4ab$var$names","$5e534ae1a972f4ab$export$b2f06b640faad956","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","$5e534ae1a972f4ab$var$unpack","transparent","toLowerCase","$5e534ae1a972f4ab$var$RGB_RE","$5e534ae1a972f4ab$var$to","pow","$5e534ae1a972f4ab$var$from","$5e534ae1a972f4ab$var$modHSL","ratio","tmp","$5e534ae1a972f4ab$var$clone","proto","assign","$5e534ae1a972f4ab$var$fromObject","input","$5e534ae1a972f4ab$var$functionParse","charAt","$5e534ae1a972f4ab$export$91aedb20f296e541","$5e534ae1a972f4ab$export$892596cec99bc70e","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hexString","hslString","$5e534ae1a972f4ab$export$a197af1c58e6260c","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","$5e534ae1a972f4ab$var$interpolate","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$5e534ae1a972f4ab$export$bb628a54ab399bc9","$0c41959e849e6d51$var$uid","id","$0c41959e849e6d51$var$isNullOrUndef","value","$0c41959e849e6d51$var$isArray","prototype","toString","call","slice","$0c41959e849e6d51$var$isObject","$0c41959e849e6d51$var$isNumberFinite","Number","isFinite","$0c41959e849e6d51$var$valueOrDefault","defaultValue","$0c41959e849e6d51$var$toDimension","dimension","endsWith","parseFloat","$0c41959e849e6d51$var$clone","source","target","create","klen","$0c41959e849e6d51$var$isValidKey","key","indexOf","$0c41959e849e6d51$var$_merger","options","tval","sval","$0c41959e849e6d51$var$merge","sources","ilen","merger","current","$0c41959e849e6d51$var$mergeIf","$0c41959e849e6d51$var$_mergerIf","hasOwnProperty","$0c41959e849e6d51$var$keyResolvers","o","y","$0c41959e849e6d51$var$_splitKey","parts","split","part","push","$0c41959e849e6d51$var$resolveObjectKey","resolver","$0c41959e849e6d51$var$_getKeyResolver","$0c41959e849e6d51$var$_capitalize","toUpperCase","$0c41959e849e6d51$var$defined","$0c41959e849e6d51$var$isFunction","$0c41959e849e6d51$var$PI","PI","$0c41959e849e6d51$var$TAU","$0c41959e849e6d51$var$PITAU","$0c41959e849e6d51$var$INFINITY","POSITIVE_INFINITY","$0c41959e849e6d51$var$RAD_PER_DEG","$0c41959e849e6d51$var$HALF_PI","$0c41959e849e6d51$var$QUARTER_PI","$0c41959e849e6d51$var$TWO_THIRDS_PI","$0c41959e849e6d51$var$log10","log10","$0c41959e849e6d51$var$sign","sign","$0c41959e849e6d51$var$almostEquals","epsilon","abs","$0c41959e849e6d51$var$distanceBetweenPoints","pt1","pt2","sqrt","$0c41959e849e6d51$var$_angleDiff","$0c41959e849e6d51$var$_normalizeAngle","$0c41959e849e6d51$var$_angleBetween","angle","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","$0c41959e849e6d51$var$_limitValue","$0c41959e849e6d51$var$_isBetween","$0c41959e849e6d51$var$_lookup","table","cmp","index","mid","hi","lo","$0c41959e849e6d51$var$_lookupByKey","last","ti","$0c41959e849e6d51$var$arrayEvents","$0c41959e849e6d51$var$requestAnimFrame","window","callback","requestAnimationFrame","$0c41959e849e6d51$var$atEdge","$0c41959e849e6d51$var$elasticIn","sin","$0c41959e849e6d51$var$elasticOut","$0c41959e849e6d51$var$effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","$0c41959e849e6d51$var$isPatternOrGradient","$0c41959e849e6d51$var$getHoverColor","$0c41959e849e6d51$var$numbers","$0c41959e849e6d51$var$colors","$0c41959e849e6d51$var$intlCache","Map","$0c41959e849e6d51$var$formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","$0c41959e849e6d51$var$getNumberFormat","format","$0c41959e849e6d51$var$formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","floor","$0c41959e849e6d51$var$calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$0c41959e849e6d51$var$Ticks","$0c41959e849e6d51$var$overrides","$0c41959e849e6d51$var$descriptors","$0c41959e849e6d51$var$getScope$1","node","$0c41959e849e6d51$var$set","root","scope","$0c41959e849e6d51$var$Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","apply","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","forEach","$0c41959e849e6d51$var$defaults","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","fn","from","loop","to","colors","properties","numbers","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","reverse","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","$0c41959e849e6d51$var$toFontString","$0c41959e849e6d51$var$_measureText","data","gc","longest","string","textWidth","measureText","$0c41959e849e6d51$var$drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","save","translate","drawImage","height","restore","isNaN","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","$0c41959e849e6d51$var$_isPointInArea","point","area","margin","$0c41959e849e6d51$var$decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","$0c41959e849e6d51$var$drawBackdrop","oldColor","fillRect","$0c41959e849e6d51$var$LINE_HEIGHT","$0c41959e849e6d51$var$FONT_STYLE","$0c41959e849e6d51$var$toLineHeight","matches","match","$0c41959e849e6d51$var$_readValueToProps","props","objProps","read","prop","$0c41959e849e6d51$var$toTRBL","$0c41959e849e6d51$var$createContext","parentContext","$0c41959e849e6d51$var$_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","$0c41959e849e6d51$var$_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","$0c41959e849e6d51$var$_cached","proxy","prefix","$0c41959e849e6d51$var$readKey","$0c41959e849e6d51$var$needsSubResolver","$0c41959e849e6d51$var$createSubResolver","$0c41959e849e6d51$var$_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","has","$0c41959e849e6d51$var$getKeysFromAllScopes","ownKeys","storage","_storage","$0c41959e849e6d51$var$_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","$0c41959e849e6d51$var$_descriptors","setContext","receiver","descriptors","isScriptable","Error","join","add","delete","$0c41959e849e6d51$var$_resolveScriptable","isIndexable","arr","filter","item","$0c41959e849e6d51$var$_resolveArray","$0c41959e849e6d51$var$_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolve","$0c41959e849e6d51$var$resolveFallback","$0c41959e849e6d51$var$getScope","parent","$0c41959e849e6d51$var$addScopes","parentScopes","parentFallback","allScopes","$0c41959e849e6d51$var$addScopesFromKey","$0c41959e849e6d51$var$subGetTarget","$0c41959e849e6d51$var$resolveKeysFromAllScopes","$0c41959e849e6d51$var$EPSILON","EPSILON","$0c41959e849e6d51$var$getPoint","points","skip","$0c41959e849e6d51$var$getValueAxis","$0c41959e849e6d51$var$splineCurve","firstPoint","middlePoint","afterPoint","previous","next","d01","d12","s01","s12","fa","fb","$0c41959e849e6d51$var$splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","$0c41959e849e6d51$var$monotoneAdjust","iPixel","vPixel","$0c41959e849e6d51$var$monotoneCompute","$0c41959e849e6d51$var$capControlPoint","pt","$0c41959e849e6d51$var$_getParentNode","domNode","parentNode","host","$0c41959e849e6d51$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$0c41959e849e6d51$var$getComputedStyle","element","ownerDocument","defaultView","getComputedStyle","$0c41959e849e6d51$var$getStyle","el","property","getPropertyValue","$0c41959e849e6d51$var$positions","$0c41959e849e6d51$var$getPositionedStyle","styles","suffix","result","pos","$0c41959e849e6d51$var$round1","round","$0c41959e849e6d51$var$supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","$0c41959e849e6d51$var$_pointInLine","$0c41959e849e6d51$var$propertyFn","between","compare","normalize","$0c41959e849e6d51$var$normalizeSegment","count","$0c41959e849e6d51$var$_boundSegment","segment","startBound","endBound","$0c41959e849e6d51$var$getSegment","prevValue","inside","subStart","shouldStart","shouldStop","prev","$0c41959e849e6d51$var$splitByStyles","segments","segmentOptions","chartContext","_chart","getContext","baseStyle","$0c41959e849e6d51$var$readStyle","_datasetIndex","datasetIndex","spanGaps","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","$0c41959e849e6d51$var$styleChanged","$0c41959e849e6d51$var$doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","minmax","change","keepZero","pixel","currentDevicePixelRatio","halfWidth","items","flip","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","cp1","cp2","sub","_loop","$0c41959e849e6d51$var$findStartAndEnd","cur","stop","$0c41959e849e6d51$var$solidSegments","_fullLoop","a0","a1","v0","v1","sort","pop","meta","animationsDisabled","pointCount","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","document","arrayOfThings","garbageCollect","jlen","thing","nestedThing","gcLen","splice","_parsing","parsed","parse","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","array","midpoint","rtl","controlPoints","cubicInterpolationMode","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","$0c41959e849e6d51$var$capBezierPoints","topLeft","bottomLeft","bottomRight","topRight","rounded","args","thisArg","canvas","resetTransform","clearRect","clip","timeout","clearTimeout","setTimeout","loopable","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distance","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","getBoundingClientRect","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","$0c41959e849e6d51$var$getContainerSize","boxSizing","borders","paddings","event","borderBox","box","touches","offsetX","offsetY","shadowRoot","$0c41959e849e6d51$var$useOffsetPos","clientX","clientY","$0c41959e849e6d51$var$getCanvasPosition","rectX","setWidth","textAlign","xPlus","leftForLtr","itemWidth","$0c41959e849e6d51$var$getRightToLeftAdapter","_itemWidth","listener","_chartjs","listeners","defineProperty","method","base","res","object","range","roundedRange","niceRange","fraction","direction","original","getPropertyPriority","setProperty","prevTextDirection","lines","strokeWidth","strokeColor","translation","textBaseline","$0c41959e849e6d51$var$setRenderOpts","backdrop","strokeText","fillText","inputs","info","cacheable","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","argsToUse","ticking","radians","console","warn","degrees","stub","$a8d9920b0a6b42d5$var$Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$a8d9920b0a6b42d5$var$animator","$a8d9920b0a6b42d5$var$transparent","$a8d9920b0a6b42d5$var$interpolators","boolean","factor","c0","number","$a8d9920b0a6b42d5$var$Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","$a8d9920b0a6b42d5$var$Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","$a8d9920b0a6b42d5$var$resolveTargetOptions","_createAnimations","anim","all","$a8d9920b0a6b42d5$var$awaitAll","then","$a8d9920b0a6b42d5$var$scaleClip","allowedOverflow","$a8d9920b0a6b42d5$var$getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","$a8d9920b0a6b42d5$var$applyStack","stack","dsIndex","singleMode","otherValue","$a8d9920b0a6b42d5$var$isStacked","stacked","$a8d9920b0a6b42d5$var$getOrCreateStack","stacks","stackKey","indexValue","subStack","$a8d9920b0a6b42d5$var$getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","$a8d9920b0a6b42d5$var$updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","$a8d9920b0a6b42d5$var$getStackKey","_top","_bottom","_visualValues","$a8d9920b0a6b42d5$var$getFirstScaleId","shift","$a8d9920b0a6b42d5$var$clearStacks","$a8d9920b0a6b42d5$var$isDirectUpdateMode","$a8d9920b0a6b42d5$var$cloneIfNotShared","cached","shared","$a8d9920b0a6b42d5$var$DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","$a8d9920b0a6b42d5$var$convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","applyStack","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","$a8d9920b0a6b42d5$var$createStack","NEGATIVE_INFINITY","otherMin","otherMax","$a8d9920b0a6b42d5$var$getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","$a8d9920b0a6b42d5$var$toClip","$a8d9920b0a6b42d5$var$defaultClip","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","$a8d9920b0a6b42d5$var$createDataContext","$a8d9920b0a6b42d5$var$createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","$a8d9920b0a6b42d5$var$computeMinSampleSize","_cache","$bar","visibleMetas","concat","$a8d9920b0a6b42d5$var$getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","$a8d9920b0a6b42d5$var$parseValue","entry","startValue","endValue","barStart","barEnd","_custom","$a8d9920b0a6b42d5$var$parseFloatBar","$a8d9920b0a6b42d5$var$parseArrayOrPrimitive","$a8d9920b0a6b42d5$var$isFloatBar","custom","$a8d9920b0a6b42d5$var$setBorderSkipped","edge","borderSkipped","horizontal","$a8d9920b0a6b42d5$var$borderProps","enableBorderRadius","$a8d9920b0a6b42d5$var$parseEdge","orig","v2","$a8d9920b0a6b42d5$var$startEnd","$a8d9920b0a6b42d5$var$setInflateAmount","inflateAmount","$a8d9920b0a6b42d5$var$BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","$a8d9920b0a6b42d5$var$barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","$a8d9920b0a6b42d5$var$computeFlexCategoryTraits","thickness","$a8d9920b0a6b42d5$var$computeFitCategoryTraits","stackIndex","rects","$a8d9920b0a6b42d5$var$BubbleController","$a8d9920b0a6b42d5$var$DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","$a8d9920b0a6b42d5$var$getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","$a8d9920b0a6b42d5$var$LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","$a8d9920b0a6b42d5$var$PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","$a8d9920b0a6b42d5$var$PieController","$a8d9920b0a6b42d5$var$RadarController","pointPosition","getPointPositionForValue","$a8d9920b0a6b42d5$var$ScatterController","registry","getElement","$a8d9920b0a6b42d5$var$controllers","__proto__","BarController","BubbleController","DoughnutController","LineController","PolarAreaController","PieController","RadarController","ScatterController","$a8d9920b0a6b42d5$var$abstract","$a8d9920b0a6b42d5$var$DateAdapterBase","members","init","formats","diff","startOf","endOf","$a8d9920b0a6b42d5$var$adapters","_date","$a8d9920b0a6b42d5$var$binarySearch","metaset","lookupMethod","_reversePixels","getRange","$a8d9920b0a6b42d5$var$evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","$a8d9920b0a6b42d5$var$getIntersectItems","useFinalPosition","isPointInArea","inRange","$a8d9920b0a6b42d5$var$getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","$a8d9920b0a6b42d5$var$getDistanceMetricForAxis","minDistance","getCenterPoint","$a8d9920b0a6b42d5$var$getNearestItems","getProps","$a8d9920b0a6b42d5$var$getNearestRadialItems","$a8d9920b0a6b42d5$var$getAxisItems","rangeMethod","intersectsItem","$a8d9920b0a6b42d5$var$Interaction","modes","nearest","$a8d9920b0a6b42d5$var$STATIC_POSITIONS","$a8d9920b0a6b42d5$var$filterByPosition","$a8d9920b0a6b42d5$var$filterDynamicPositionByAxis","$a8d9920b0a6b42d5$var$sortByWeight","$a8d9920b0a6b42d5$var$setLayoutDims","layouts","params","wrap","stackWeight","placed","$a8d9920b0a6b42d5$var$buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","$a8d9920b0a6b42d5$var$getCombinedMax","maxPadding","$a8d9920b0a6b42d5$var$updateMaxPadding","boxPadding","$a8d9920b0a6b42d5$var$updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","$a8d9920b0a6b42d5$var$getMargins","marginForPositions","positions","$a8d9920b0a6b42d5$var$fitBoxes","boxes","refitBoxes","refit","$a8d9920b0a6b42d5$var$setBoxDims","$a8d9920b0a6b42d5$var$placeBoxes","userPadding","height1","width1","$a8d9920b0a6b42d5$var$layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","$a8d9920b0a6b42d5$var$wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","$a8d9920b0a6b42d5$var$buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","$a8d9920b0a6b42d5$var$handleMaxPadding","$a8d9920b0a6b42d5$var$BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","$a8d9920b0a6b42d5$var$BasicPlatform","$a8d9920b0a6b42d5$var$EXPANDO_KEY","$a8d9920b0a6b42d5$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$a8d9920b0a6b42d5$var$isNullOrEmpty","$a8d9920b0a6b42d5$var$eventListenerOptions","$a8d9920b0a6b42d5$var$removeListener","$a8d9920b0a6b42d5$var$nodeListContains","nodeList","contains","$a8d9920b0a6b42d5$var$createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","$a8d9920b0a6b42d5$var$createDetachObserver","$a8d9920b0a6b42d5$var$drpListeningCharts","$a8d9920b0a6b42d5$var$oldDevicePixelRatio","$a8d9920b0a6b42d5$var$onWindowResize","dpr","$a8d9920b0a6b42d5$var$createResizeObserver","ResizeObserver","contentRect","$a8d9920b0a6b42d5$var$listenDevicePixelRatioChanges","$a8d9920b0a6b42d5$var$releaseObserver","disconnect","$a8d9920b0a6b42d5$var$unlistenDevicePixelRatioChanges","$a8d9920b0a6b42d5$var$createProxyAndListen","native","$a8d9920b0a6b42d5$var$fromNativeEvent","$a8d9920b0a6b42d5$var$addListener","$a8d9920b0a6b42d5$var$DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","$a8d9920b0a6b42d5$var$initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","$a8d9920b0a6b42d5$var$_detectPlatform","OffscreenCanvas","$a8d9920b0a6b42d5$var$Element","tooltipPosition","hasValue","final","$a8d9920b0a6b42d5$var$autoSkip","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","$a8d9920b0a6b42d5$var$determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","$a8d9920b0a6b42d5$var$getMajorIndices","numMajorIndices","first","newTicks","ceil","$a8d9920b0a6b42d5$var$skipMajors","evenMajorSpacing","$a8d9920b0a6b42d5$var$getEvenSpacing","factors","$a8d9920b0a6b42d5$var$calculateSpacing","avgMajorSpacing","$a8d9920b0a6b42d5$var$skip","majorStart","majorEnd","$a8d9920b0a6b42d5$var$offsetFromEdge","$a8d9920b0a6b42d5$var$sample","numItems","increment","$a8d9920b0a6b42d5$var$getPixelForGridLine","offsetGridLines","validIndex","lineValue","$a8d9920b0a6b42d5$var$getTickMarkLength","$a8d9920b0a6b42d5$var$getTitleHeight","$a8d9920b0a6b42d5$var$titleAlign","$a8d9920b0a6b42d5$var$reverseAlign","$a8d9920b0a6b42d5$var$Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","$a8d9920b0a6b42d5$var$garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","$a8d9920b0a6b42d5$var$createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","$a8d9920b0a6b42d5$var$titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","$a8d9920b0a6b42d5$var$TypedRegistry","isForType","isPrototypeOf","register","parentScope","$a8d9920b0a6b42d5$var$isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","$a8d9920b0a6b42d5$var$routeDefaults","$a8d9920b0a6b42d5$var$registerDefaults","overrides","unregister","$a8d9920b0a6b42d5$var$Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","$a8d9920b0a6b42d5$var$registry","$a8d9920b0a6b42d5$var$PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","$a8d9920b0a6b42d5$var$allPlugins","$a8d9920b0a6b42d5$var$getOpts","$a8d9920b0a6b42d5$var$pluginOpts","$a8d9920b0a6b42d5$var$createDescriptors","previousDescriptors","some","pluginScopeKeys","$a8d9920b0a6b42d5$var$getIndexAxis","datasetDefaults","$a8d9920b0a6b42d5$var$determineAxis","scaleOptions","$a8d9920b0a6b42d5$var$initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","$a8d9920b0a6b42d5$var$getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","$a8d9920b0a6b42d5$var$getAxisFromDefaultScaleID","$a8d9920b0a6b42d5$var$mergeScaleConfig","$a8d9920b0a6b42d5$var$initData","$a8d9920b0a6b42d5$var$keyCache","$a8d9920b0a6b42d5$var$keysCached","$a8d9920b0a6b42d5$var$cachedKeys","generate","$a8d9920b0a6b42d5$var$addIfFound","$a8d9920b0a6b42d5$var$Config","_config","$a8d9920b0a6b42d5$var$initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","$a8d9920b0a6b42d5$var$getResolver","$a8d9920b0a6b42d5$var$hasFunction","$a8d9920b0a6b42d5$var$needContext","subResolver","resolverCache","$a8d9920b0a6b42d5$var$KNOWN_POSITIONS","$a8d9920b0a6b42d5$var$positionIsHorizontal","$a8d9920b0a6b42d5$var$compare2Level","l1","l2","$a8d9920b0a6b42d5$var$onAnimationsComplete","onComplete","$a8d9920b0a6b42d5$var$onAnimationProgress","onProgress","$a8d9920b0a6b42d5$var$getCanvas","getElementById","$a8d9920b0a6b42d5$var$instances","$a8d9920b0a6b42d5$var$getChart","$a8d9920b0a6b42d5$var$moveNumericKeys","intKey","$a8d9920b0a6b42d5$var$Chart","$a8d9920b0a6b42d5$var$invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","$a8d9920b0a6b42d5$var$getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","$a8d9920b0a6b42d5$var$determineLastEvent","instances","$a8d9920b0a6b42d5$var$parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","$a8d9920b0a6b42d5$var$rThetaToXY","theta","$a8d9920b0a6b42d5$var$pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","$a8d9920b0a6b42d5$var$drawBorder","fullCircles","inner","lineJoin","angleMargin","$a8d9920b0a6b42d5$var$clipArc","$a8d9920b0a6b42d5$var$ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","$a8d9920b0a6b42d5$var$drawArc","$a8d9920b0a6b42d5$var$setStyle","lineCap","$a8d9920b0a6b42d5$var$lineTo","$a8d9920b0a6b42d5$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","$a8d9920b0a6b42d5$var$pathSegment","lineMethod","stepped","$a8d9920b0a6b42d5$var$getLineMethod","$a8d9920b0a6b42d5$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$a8d9920b0a6b42d5$var$_getSegmentMethod","$a8d9920b0a6b42d5$var$usePath2D","Path2D","$a8d9920b0a6b42d5$var$draw","path","_path","$a8d9920b0a6b42d5$var$strokePathWithCache","segmentMethod","$a8d9920b0a6b42d5$var$strokePathDirect","$a8d9920b0a6b42d5$var$LineElement","_points","_segments","_pointsUpdated","_interpolate","$a8d9920b0a6b42d5$var$_getInterpolationMethod","interpolated","pathSegment","$a8d9920b0a6b42d5$var$inRange$1","hitRadius","$a8d9920b0a6b42d5$var$PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","$a8d9920b0a6b42d5$var$getBarBounds","bar","half","$a8d9920b0a6b42d5$var$skipOrLimit","$a8d9920b0a6b42d5$var$boundingRects","maxW","maxH","$a8d9920b0a6b42d5$var$parseBorderWidth","maxR","enableBorder","$a8d9920b0a6b42d5$var$parseBorderRadius","outer","$a8d9920b0a6b42d5$var$inRange","skipX","skipY","$a8d9920b0a6b42d5$var$addNormalRectPath","$a8d9920b0a6b42d5$var$inflateRect","amount","refRect","$a8d9920b0a6b42d5$var$BarElement","addRectPath","$a8d9920b0a6b42d5$var$elements","ArcElement","LineElement","PointElement","BarElement","$a8d9920b0a6b42d5$var$BORDER_COLORS","$a8d9920b0a6b42d5$var$BACKGROUND_COLORS","$a8d9920b0a6b42d5$var$getBorderColor","$a8d9920b0a6b42d5$var$getBackgroundColor","$a8d9920b0a6b42d5$var$getColorizer","$a8d9920b0a6b42d5$var$colorizeDoughnutDataset","$a8d9920b0a6b42d5$var$colorizePolarAreaDataset","$a8d9920b0a6b42d5$var$colorizeDefaultDataset","$a8d9920b0a6b42d5$var$containsColorsDefinitions","$a8d9920b0a6b42d5$var$plugin_colors","forceOverride","_args","colorizer","$a8d9920b0a6b42d5$var$cleanDecimatedDataset","$a8d9920b0a6b42d5$var$cleanDecimatedData","$a8d9920b0a6b42d5$var$plugin_decimation","algorithm","beforeElementsUpdate","xAxis","$a8d9920b0a6b42d5$var$getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","$a8d9920b0a6b42d5$var$lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","$a8d9920b0a6b42d5$var$minMaxDecimation","$a8d9920b0a6b42d5$var$_getBounds","$a8d9920b0a6b42d5$var$_findSegmentEnd","$a8d9920b0a6b42d5$var$_getEdge","$a8d9920b0a6b42d5$var$_createBoundaryLine","boundary","linePoints","$a8d9920b0a6b42d5$var$_pointsFromSegments","$a8d9920b0a6b42d5$var$_shouldApplyFill","$a8d9920b0a6b42d5$var$_resolveTarget","propagate","visited","$a8d9920b0a6b42d5$var$_decodeFill","fillOption","$a8d9920b0a6b42d5$var$parseFillOption","firstCh","$a8d9920b0a6b42d5$var$decodeTargetIndex","$a8d9920b0a6b42d5$var$addPointsBelow","sourcePoint","linesBelow","postponed","$a8d9920b0a6b42d5$var$findPoint","unshift","pointValue","firstValue","lastValue","$a8d9920b0a6b42d5$var$simpleArc","$a8d9920b0a6b42d5$var$_getTarget","$a8d9920b0a6b42d5$var$getLineByIndex","sourcePoints","below","$a8d9920b0a6b42d5$var$getLinesBelow","$a8d9920b0a6b42d5$var$_buildStackLine","$a8d9920b0a6b42d5$var$_getTargetValue","$a8d9920b0a6b42d5$var$computeCircularBoundary","$a8d9920b0a6b42d5$var$_getTargetPixel","$a8d9920b0a6b42d5$var$computeLinearBoundary","$a8d9920b0a6b42d5$var$computeBoundary","$a8d9920b0a6b42d5$var$_drawfill","lineOpts","above","$a8d9920b0a6b42d5$var$clipVertical","$a8d9920b0a6b42d5$var$fill","$a8d9920b0a6b42d5$var$doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","$a8d9920b0a6b42d5$var$_segments","src","notShape","$a8d9920b0a6b42d5$var$clipBounds","$a8d9920b0a6b42d5$var$interpolatedLineTo","targetLoop","interpolatedPoint","$a8d9920b0a6b42d5$var$index","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","$a8d9920b0a6b42d5$var$getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","$a8d9920b0a6b42d5$var$Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","$a8d9920b0a6b42d5$var$calculateItemWidth","fontLineHeight","$a8d9920b0a6b42d5$var$calculateLegendItemHeight","$a8d9920b0a6b42d5$var$calculateItemHeight","$a8d9920b0a6b42d5$var$calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","$a8d9920b0a6b42d5$var$isListened","hoveredItem","sameItem","$a8d9920b0a6b42d5$var$plugin_legend","_element","afterEvent","ci","useBorderRadius","$a8d9920b0a6b42d5$var$Title","_padding","textSize","_drawArgs","fontOpts","$a8d9920b0a6b42d5$var$plugin_title","titleBlock","$a8d9920b0a6b42d5$var$createTitle","$a8d9920b0a6b42d5$var$map","WeakMap","$a8d9920b0a6b42d5$var$plugin_subtitle","$a8d9920b0a6b42d5$var$positioners","average","eventPosition","nearestElement","tp","$a8d9920b0a6b42d5$var$pushOrConcat","toPush","$a8d9920b0a6b42d5$var$splitNewlines","String","$a8d9920b0a6b42d5$var$createTooltipItem","formattedValue","$a8d9920b0a6b42d5$var$getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$a8d9920b0a6b42d5$var$determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","$a8d9920b0a6b42d5$var$doesNotFitWithAlign","$a8d9920b0a6b42d5$var$determineAlignment","$a8d9920b0a6b42d5$var$determineYAlign","$a8d9920b0a6b42d5$var$getBackgroundPoint","alignment","paddingAndSize","$a8d9920b0a6b42d5$var$alignX","$a8d9920b0a6b42d5$var$alignY","$a8d9920b0a6b42d5$var$getAlignedX","$a8d9920b0a6b42d5$var$getBeforeAfterBodyLines","$a8d9920b0a6b42d5$var$overrideCallbacks","$a8d9920b0a6b42d5$var$defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","$a8d9920b0a6b42d5$var$invokeCallbackWithFallback","$a8d9920b0a6b42d5$var$Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleAlign","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$a8d9920b0a6b42d5$var$plugin_tooltip","afterInit","afterDraw","$a8d9920b0a6b42d5$var$plugins","Colors","Decimation","Filler","Legend","SubTitle","Title","Tooltip","$a8d9920b0a6b42d5$var$findOrAddLabel","addedLabels","$a8d9920b0a6b42d5$var$addIfString","lastIndexOf","$a8d9920b0a6b42d5$var$_getLabelForValue","$a8d9920b0a6b42d5$var$CategoryScale","_startValue","_valueRange","_addedLabels","added","$a8d9920b0a6b42d5$var$validIndex","$a8d9920b0a6b42d5$var$relativeLabelSize","minSpacing","$a8d9920b0a6b42d5$var$LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","$a8d9920b0a6b42d5$var$generateTicks$1","$a8d9920b0a6b42d5$var$LinearScale","$a8d9920b0a6b42d5$var$log10Floor","$a8d9920b0a6b42d5$var$changeExponent","$a8d9920b0a6b42d5$var$isMajor","tickVal","$a8d9920b0a6b42d5$var$steps","rangeExp","rangeStep","$a8d9920b0a6b42d5$var$generateTicks","minExp","exp","$a8d9920b0a6b42d5$var$startExp","lastTick","$a8d9920b0a6b42d5$var$LogarithmicScale","_zero","$a8d9920b0a6b42d5$var$getTickBackdropHeight","$a8d9920b0a6b42d5$var$determineLimits","$a8d9920b0a6b42d5$var$fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","$a8d9920b0a6b42d5$var$updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","$a8d9920b0a6b42d5$var$yForAngle","$a8d9920b0a6b42d5$var$getTextAlignForAngle","$a8d9920b0a6b42d5$var$leftForTextAlign","$a8d9920b0a6b42d5$var$buildPointLabelItems","hLimits","vLimits","$a8d9920b0a6b42d5$var$pathRadiusLine","$a8d9920b0a6b42d5$var$RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","$a8d9920b0a6b42d5$var$createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","$a8d9920b0a6b42d5$var$drawPointLabels","gridLineOpts","$a8d9920b0a6b42d5$var$drawRadiusLine","$a8d9920b0a6b42d5$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","$a8d9920b0a6b42d5$var$UNITS","$a8d9920b0a6b42d5$var$sorter","$a8d9920b0a6b42d5$var$parse","adapter","_adapter","parser","isoWeekday","_parseOpts","$a8d9920b0a6b42d5$var$determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","$a8d9920b0a6b42d5$var$addTick","time","timestamps","$a8d9920b0a6b42d5$var$ticksFromTimestamps","majorUnit","$a8d9920b0a6b42d5$var$setMajorTicks","$a8d9920b0a6b42d5$var$TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","$a8d9920b0a6b42d5$var$determineUnitForFormatting","$a8d9920b0a6b42d5$var$determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","$a8d9920b0a6b42d5$var$interpolate","prevSource","nextSource","prevTarget","nextTarget","span","$a8d9920b0a6b42d5$var$TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","$a8d9920b0a6b42d5$var$scales","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Chart","$f3443cb7d8a636ba$var$Chart","registerables","$f3443cb7d8a636ba$var$registerables","$a8d9920b0a6b42d5$exports","$9d2ffb9cd3cbcaab$export$78088a32bd73b134","$f3443cb7d8a636ba$exports","doSetUpByDayOfWeek","dataString","textContent","rider","riders","riderToWeekdayToCount","setUpByDayOfWeek","Charting","Bim","RocketBotWeb"],"version":3,"file":"rocketbotweb.js.map"}