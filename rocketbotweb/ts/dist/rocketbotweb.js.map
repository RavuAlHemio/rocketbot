{"mappings":"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","sources":["src/rocketbotweb.ts","src/bim/chart.ts","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/src/index.ts","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/@kurkle/color/dist/color.esm.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/chartjs-chart-sankey/dist/chartjs-chart-sankey.esm.js","node_modules/chart.js/helpers/helpers.js"],"sourcesContent":["import { RocketBotWeb } from \"./bim/chart\";\r\n\r\n// \"globals are evil\"\r\ndeclare global {\r\n    interface Window { RocketBotWeb: any; }\r\n}\r\nwindow.RocketBotWeb = RocketBotWeb;\r\n","import { Chart, ChartData, ChartDataset, LineControllerChartOptions } from 'chart.js/auto';\r\nimport { getHoverColor } from 'chart.js/helpers';\r\nimport { SankeyController, Flow } from 'chartjs-chart-sankey';\r\n\r\nChart.register(SankeyController, Flow);\r\n\r\ninterface ByDayOfWeekData {\r\n    riders: string[];\r\n    riderToWeekdayToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface ByRideCountGroupData {\r\n    riders: string[];\r\n    rideCountGroupNames: string[];\r\n    riderToGroupToCount: { [rider: string]: number[] };\r\n}\r\n\r\ninterface LatestRiderSankeyData {\r\n    from: string;\r\n    to: string;\r\n    count: number;\r\n}\r\n\r\nexport module RocketBotWeb.Bim.Charting {\r\n    function doSetUpByDayOfWeek() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByDayOfWeekData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToWeekdayToCount[rider],\r\n            });\r\n        }\r\n\r\n        new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n                datasets: datasets,\r\n            },\r\n        });\r\n    }\r\n\r\n    function doSetUpByRideCountGroup() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"chart-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"chart-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: ByRideCountGroupData = JSON.parse(dataString);\r\n        const datasets: ChartDataset[] = [];\r\n        for (const rider of data.riders) {\r\n            datasets.push({\r\n                label: rider,\r\n                data: data.riderToGroupToCount[rider],\r\n            });\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"bar\",\r\n            data: {\r\n                labels: data.rideCountGroupNames,\r\n                datasets: datasets,\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        ticks: {\r\n                            format: {\r\n                                minimumFractionDigits: 0,\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        const logPlotCheckbox = <HTMLInputElement|null>document.getElementById(\"bim-charting-log-plot-checkbox\");\r\n        if (logPlotCheckbox !== null) {\r\n            logPlotCheckbox.addEventListener(\"change\", () => {\r\n                chart.options.scales!.y!.type = logPlotCheckbox.checked ? \"logarithmic\" : \"linear\";\r\n                chart.update();\r\n            });\r\n        }\r\n    }\r\n\r\n    function doSetUpLatestRiderCount() {\r\n        const canvas = <HTMLCanvasElement|null>document.getElementById(\"sankey-canvas\");\r\n        if (canvas === null) {\r\n            return;\r\n        }\r\n\r\n        const dataString = document.getElementById(\"sankey-data\")?.textContent;\r\n        if (dataString === null || dataString === undefined) {\r\n            return;\r\n        }\r\n        const data: LatestRiderSankeyData[] = JSON.parse(dataString);\r\n        let labels = {};\r\n        for (let datum of data) {\r\n            // labels: strip leading T and F from from and to values\r\n            labels[datum.from] = datum.from.substring(1);\r\n            labels[datum.to] = datum.to.substring(1);\r\n        }\r\n\r\n        const chart = new Chart(canvas, {\r\n            type: \"sankey\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        data: data,\r\n                        labels: labels,\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    }\r\n\r\n    export function setUpByDayOfWeek() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByDayOfWeek);\r\n    }\r\n\r\n    export function setUpByRideCountGroup() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpByRideCountGroup);\r\n    }\r\n\r\n    export function setUpLatestRiderCount() {\r\n        document.addEventListener(\"DOMContentLoaded\", doSetUpLatestRiderCount);\r\n    }\r\n}\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*!\n * chartjs-chart-sankey v0.12.0\n * https://github.com/kurkle/chartjs-chart-sankey#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT license\n */\nimport { DatasetController, Element } from 'chart.js';\nimport { isArray, isNullOrUndef, valueOrDefault, toFont, getHoverColor, color } from 'chart.js/helpers';\n\n/**\n * @param {string | Array<string>} raw\n * @return {Array<string>}\n */\nfunction toTextLines(raw) {\n  const lines = [];\n  const inputs = isArray(raw) ? raw : isNullOrUndef(raw) ? [] : [raw];\n\n  while (inputs.length) {\n    const input = inputs.pop();\n    if (typeof input === 'string') {\n      lines.unshift.apply(lines, input.split('\\n'));\n    } else if (Array.isArray(input)) {\n      inputs.push.apply(inputs, input);\n    } else if (!isNullOrUndef(inputs)) {\n      lines.unshift('' + input);\n    }\n  }\n\n  return lines;\n}\n\n/**\n* @param {any} size\n* @return {'min' | 'max'}\n*/\nfunction validateSizeValue(size) {\n  if (!size || ['min', 'max'].indexOf(size) === -1) {\n    return 'max';\n  }\n  return size;\n}\n\n/**\n * @param x {any}\n * @return {boolean}\n */\nconst defined = x => x !== undefined;\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @return {number}\n */\nfunction calculateX(nodes, data) {\n  const to = new Set(data.map(dataPoint => dataPoint.to));\n  const from = new Set(data.map(dataPoint => dataPoint.from));\n  const keys = new Set([...nodes.keys()]);\n  let x = 0;\n  while (keys.size) {\n    const column = nextColumn([...keys], to);\n    for (const key of column) {\n      const node = nodes.get(key);\n      if (!defined(node.x)) {\n        node.x = x;\n      }\n      keys.delete(key);\n    }\n    if (keys.size) {\n      to.clear();\n      data.filter(flow => keys.has(flow.from)).forEach(flow => to.add(flow.to));\n      x++;\n    }\n  }\n  [...nodes.keys()]\n    .filter(key => !from.has(key))\n    .forEach(key => {\n      const node = nodes.get(key);\n      // Only move the node to right edge, if it's column is not defined\n      if (!node.column) {\n        node.x = x;\n      }\n    });\n\n  return x;\n}\n\n/**\n * @param {Array<string>} keys\n * @param {Set<string>} to\n * @return {Array<string>}\n */\nfunction nextColumn(keys, to) {\n  const columnsNotInTo = keys.filter(key => !to.has(key));\n  return columnsNotInTo.length ? columnsNotInTo : keys.slice(0, 1);\n}\n\n/**\n * @param {SankeyNode} a\n * @param {SankeyNode} b\n * @return {number}\n */\nconst nodeByXY = (a, b) => a.x !== b.x ? a.x - b.x : a.y - b.y;\n\nlet prevCountId = -1;\nfunction getCountId() {\n  prevCountId = prevCountId < 100 ? prevCountId + 1 : 0;\n  return prevCountId;\n}\n\n/**\n * @param {Array<FromToElement>} list\n * @param {string} prop\n * @return {number}\n */\nfunction nodeCount(list, prop, countId = getCountId()) {\n  let count = 0;\n  for (const elem of list) {\n    if (elem.node._visited === countId) {\n      continue;\n    }\n    elem.node._visited = countId;\n    count += elem.node[prop].length + nodeCount(elem.node[prop], prop, countId);\n  }\n  return count;\n}\n\n/**\n * @param {string} prop\n * @return {function(FromToElement, FromToElement): number}\n */\nconst flowByNodeCount = (prop) => (a, b) => (nodeCount(a.node[prop], prop) - nodeCount(b.node[prop], prop)) || (a.node[prop].length - b.node[prop].length);\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processFrom(node, y) {\n  node.from.sort(flowByNodeCount('from'));\n  for (const flow of node.from) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processFrom(n, y);\n    }\n    y = Math.max(n.y + n.out, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} y\n * @return {number}\n */\nfunction processTo(node, y) {\n  node.to.sort(flowByNodeCount('to'));\n  for (const flow of node.to) {\n    const n = flow.node;\n    if (!defined(n.y)) {\n      n.y = y;\n      processTo(n, y);\n    }\n    y = Math.max(n.y + n.in, y);\n  }\n  return y;\n}\n\n/**\n * @param {SankeyNode} node\n * @param {number} value\n * @return {number}\n */\nfunction setOrGetY(node, value) {\n  if (defined(node.y)) {\n    return node.y;\n  }\n  node.y = value;\n  return value;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction processRest(nodeArray, maxX) {\n  const leftNodes = nodeArray.filter(node => node.x === 0);\n  const rightNodes = nodeArray.filter(node => node.x === maxX);\n  const leftToDo = leftNodes.filter(node => !defined(node.y));\n  const rightToDo = rightNodes.filter(node => !defined(node.y));\n  const centerToDo = nodeArray.filter(node => node.x > 0 && node.x < maxX && !defined(node.y));\n\n  let leftY = leftNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.out) || 0), 0);\n  let rightY = rightNodes.reduce((acc, cur) => Math.max(acc, (cur.y + cur.in) || 0), 0);\n  let centerY = 0;\n\n  if (leftY >= rightY) {\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n  } else {\n    rightToDo.forEach(node => {\n      rightY = setOrGetY(node, rightY);\n      rightY = Math.max(rightY + node.in, processTo(node, rightY));\n    });\n\n    leftToDo.forEach(node => {\n      leftY = setOrGetY(node, leftY);\n      leftY = Math.max(leftY + node.out, processTo(node, leftY));\n    });\n  }\n  centerToDo.forEach(node => {\n    let y = nodeArray.filter(n => n.x === node.x && defined(n.y))\n      .reduce((acc, cur) => Math.max(acc, cur.y + Math.max(cur.in, cur.out)), 0);\n    y = setOrGetY(node, y);\n    y = Math.max(y + node.in, processFrom(node, y));\n    y = Math.max(y + node.out, processTo(node, y));\n    centerY = Math.max(centerY, y);\n  });\n\n  return Math.max(leftY, rightY, centerY);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateY(nodeArray, maxX) {\n  nodeArray.sort((a, b) => Math.max(b.in, b.out) - Math.max(a.in, a.out));\n  const start = nodeArray[0];\n  start.y = 0;\n  const left = processFrom(start, 0);\n  const right = processTo(start, 0);\n  const rest = processRest(nodeArray, maxX);\n  return Math.max(left, right, rest);\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} maxX\n * @return {number}\n */\nfunction calculateYUsingPriority(nodeArray, maxX) {\n  let maxY = 0;\n  let nextYStart = 0;\n  for (let x = 0; x <= maxX; x++) {\n    let y = nextYStart;\n    const nodes = nodeArray.filter(node => node.x === x).sort((a, b) => a.priority - b.priority);\n    nextYStart = nodes[0].to.filter(to => to.node.x > x + 1).reduce((acc, cur) => acc + cur.flow, 0) || 0;\n    for (const node of nodes) {\n      node.y = y;\n      y += Math.max(node.out, node.in);\n    }\n    maxY = Math.max(y, maxY);\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {number} padding\n * @return {number}\n */\nfunction addPadding(nodeArray, padding) {\n  let i = 1;\n  let x = 0;\n  let prev = 0;\n  let maxY = 0;\n  const rows = [];\n  nodeArray.sort(nodeByXY);\n  for (const node of nodeArray) {\n    if (node.y) {\n      if (node.x === 0) {\n        rows.push(node.y);\n      } else {\n        if (x !== node.x) {\n          x = node.x;\n          prev = 0;\n        }\n\n        for (i = prev + 1; i < rows.length; i++) {\n          if (rows[i] > node.y) {\n            break;\n          }\n        }\n        prev = i;\n      }\n      node.y += i * padding;\n      i++;\n    }\n    maxY = Math.max(maxY, node.y + Math.max(node.in, node.out));\n  }\n  return maxY;\n}\n\n/**\n * @param {Array<SankeyNode>} nodeArray\n * @param {'min' | 'max'} size\n */\nfunction sortFlows(nodeArray, size) {\n  nodeArray.forEach((node) => {\n    const nodeSize = Math[size](node.in || node.out, node.out || node.in);\n    const overlapFrom = nodeSize < node.in;\n    const overlapTo = nodeSize < node.out;\n    let addY = 0;\n    let len = node.from.length;\n    node.from.sort((a, b) => (a.node.y + a.node.out / 2) - (b.node.y + b.node.out / 2)).forEach((flow, idx) => {\n      if (overlapFrom) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n    addY = 0;\n    len = node.to.length;\n    node.to.sort((a, b) => (a.node.y + a.node.in / 2) - (b.node.y + b.node.in / 2)).forEach((flow, idx) => {\n      if (overlapTo) {\n        flow.addY = idx * (nodeSize - flow.flow) / (len - 1);\n      } else {\n        flow.addY = addY;\n        addY += flow.flow;\n      }\n    });\n  });\n}\n\n/**\n * @param {Map<string, SankeyNode>} nodes\n * @param {Array<SankeyDataPoint>} data\n * @param {boolean} priority\n * @param {'min' | 'max'} size\n * @return {{maxY: number, maxX: number}}\n */\nfunction layout(nodes, data, priority, size) {\n  const nodeArray = [...nodes.values()];\n  const maxX = calculateX(nodes, data);\n  const maxY = priority ? calculateYUsingPriority(nodeArray, maxX) : calculateY(nodeArray, maxX);\n  const padding = maxY * 0.03; // rows;\n  const maxYWithPadding = addPadding(nodeArray, padding);\n  sortFlows(nodeArray, size);\n  return {maxX, maxY: maxYWithPadding};\n}\n\n/**\n * @param {Array<SankeyDataPoint>} data Array of raw data elements\n * @return {Map<string, SankeyNode>}\n */\nfunction buildNodesFromRawData(data) {\n  const nodes = new Map();\n  for (let i = 0; i < data.length; i++) {\n    const {from, to, flow} = data[i];\n\n    if (!nodes.has(from)) {\n      nodes.set(from, {\n        key: from,\n        in: 0,\n        out: flow,\n        from: [],\n        to: [{key: to, flow: flow, index: i}],\n      });\n    } else {\n      const node = nodes.get(from);\n      node.out += flow;\n      node.to.push({key: to, flow: flow, index: i});\n    }\n    if (!nodes.has(to)) {\n      nodes.set(to, {\n        key: to,\n        in: flow,\n        out: 0,\n        from: [{key: from, flow: flow, index: i}],\n        to: [],\n      });\n    } else {\n      const node = nodes.get(to);\n      node.in += flow;\n      node.from.push({key: from, flow: flow, index: i});\n    }\n  }\n\n  const flowSort = (a, b) => b.flow - a.flow;\n\n  [...nodes.values()].forEach(node => {\n    node.from = node.from.sort(flowSort);\n    node.from.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n\n    node.to = node.to.sort(flowSort);\n    node.to.forEach(x => {\n      x.node = nodes.get(x.key);\n    });\n  });\n\n  return nodes;\n}\n\n/**\n * @param {Array<FromToElement>} arr\n * @param {string} key\n * @param {number} index\n * @return {number}\n */\nfunction getAddY(arr, key, index) {\n  for (const item of arr) {\n    if (item.key === key && item.index === index) {\n      return item.addY;\n    }\n  }\n  return 0;\n}\n\nclass SankeyController extends DatasetController {\n  /**\n   * @param {ChartMeta<Flow, Element>} meta\n   * @param {Array<SankeyDataPoint>} data Array of original data elements\n   * @param {number} start\n   * @param {number} count\n   * @return {Array<SankeyParsedData>}\n   */\n  parseObjectData(meta, data, start, count) {\n    const {from: fromKey = 'from', to: toKey = 'to', flow: flowKey = 'flow'} = this.options.parsing;\n    const sankeyData = data.map(({[fromKey]: from, [toKey]: to, [flowKey]: flow}) => ({from, to, flow}));\n    const {xScale, yScale} = meta;\n    const parsed = []; /* Array<SankeyParsedData> */\n    const nodes = this._nodes = buildNodesFromRawData(sankeyData);\n    /* getDataset() => SankeyControllerDatasetOptions */\n    const {column, priority, size} = this.getDataset();\n    if (priority) {\n      for (const node of nodes.values()) {\n        if (node.key in priority) {\n          node.priority = priority[node.key];\n        }\n      }\n    }\n    if (column) {\n      for (const node of nodes.values()) {\n        if (node.key in column) {\n          node.column = true;\n          node.x = column[node.key];\n        }\n      }\n    }\n\n    const {maxX, maxY} = layout(nodes, sankeyData, !!priority, validateSizeValue(size));\n\n    this._maxX = maxX;\n    this._maxY = maxY;\n\n    for (let i = 0, ilen = sankeyData.length; i < ilen; ++i) {\n      const dataPoint = sankeyData[i];\n      const from = nodes.get(dataPoint.from);\n      const to = nodes.get(dataPoint.to);\n      const fromY = from.y + getAddY(from.to, dataPoint.to, i);\n      const toY = to.y + getAddY(to.from, dataPoint.from, i);\n      parsed.push({\n        x: xScale.parse(from.x, i),\n        y: yScale.parse(fromY, i),\n        _custom: {\n          from,\n          to,\n          x: xScale.parse(to.x, i),\n          y: yScale.parse(toY, i),\n          height: yScale.parse(dataPoint.flow, i),\n        }\n      });\n    }\n    return parsed.slice(start, start + count);\n  }\n\n  getMinMax(scale) {\n    return {\n      min: 0,\n      max: scale === this._cachedMeta.xScale ? this._maxX : this._maxY\n    };\n  }\n\n  update(mode) {\n    const {data} = this._cachedMeta;\n\n    this.updateElements(data, 0, data.length, mode);\n  }\n\n  /**\n   * @param {Array<Flow>} elems\n   * @param {number} start\n   * @param {number} count\n   * @param {\"resize\" | \"reset\" | \"none\" | \"hide\" | \"show\" | \"normal\" | \"active\"} mode\n   */\n  updateElements(elems, start, count, mode) {\n    const {xScale, yScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(mode, elems[start], firstOpts);\n    const dataset = this.getDataset();\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1) / 2 + 0.5;\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    for (let i = start; i < start + count; i++) {\n      /* getParsed(idx: number) => SankeyParsedData */\n      const parsed = this.getParsed(i);\n      const custom = parsed._custom;\n      const y = yScale.getPixelForValue(parsed.y);\n      this.updateElement(\n        elems[i],\n        i,\n        {\n          x: xScale.getPixelForValue(parsed.x) + nodeWidth + borderWidth,\n          y,\n          x2: xScale.getPixelForValue(custom.x) - borderWidth,\n          y2: yScale.getPixelForValue(custom.y),\n          from: custom.from,\n          to: custom.to,\n          progress: mode === 'reset' ? 0 : 1,\n          height: Math.abs(yScale.getPixelForValue(parsed.y + custom.height) - y),\n          options: this.resolveDataElementOptions(i, mode)\n        },\n        mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode);\n  }\n\n  _drawLabels() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset(); /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n    const labels = dataset.labels;\n    const {xScale, yScale} = this._cachedMeta;\n\n    ctx.save();\n    const chartArea = this.chart.chartArea;\n    for (const node of nodes.values()) {\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      const label = labels && labels[node.key] || node.key;\n      let textX = x;\n      ctx.fillStyle = dataset.color || 'black';\n      ctx.textBaseline = 'middle';\n      if (x < chartArea.width / 2) {\n        ctx.textAlign = 'left';\n        textX += nodeWidth + borderWidth + 4;\n      } else {\n        ctx.textAlign = 'right';\n        textX -= borderWidth + 4;\n      }\n      this._drawLabel(label, y, height, ctx, textX);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {string} label\n   * @param {number} y\n   * @param {number} height\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {number} textX\n   * @private\n   */\n  _drawLabel(label, y, height, ctx, textX) {\n    const font = toFont(this.options.font, this.chart.options.font);\n    const lines = isNullOrUndef(label) ? [] : toTextLines(label);\n    const linesLength = lines.length;\n    const middle = y + height / 2;\n    const textHeight = font.lineHeight;\n    const padding = valueOrDefault(this.options.padding, textHeight / 2);\n\n    ctx.font = font.string;\n\n    if (linesLength > 1) {\n      const top = middle - (textHeight * linesLength / 2) + padding;\n      for (let i = 0; i < linesLength; i++) {\n        ctx.fillText(lines[i], textX, top + (i * textHeight));\n      }\n    } else {\n      ctx.fillText(label, textX, middle);\n    }\n  }\n\n  _drawNodes() {\n    const ctx = this._ctx;\n    const nodes = this._nodes || new Map();\n    const dataset = this.getDataset();  /* SankeyControllerDatasetOptions */\n    const size = validateSizeValue(dataset.size);\n    const {xScale, yScale} = this._cachedMeta;\n    const borderWidth = valueOrDefault(dataset.borderWidth, 1);\n    const nodeWidth = valueOrDefault(dataset.nodeWidth, 10);\n\n    ctx.save();\n    ctx.strokeStyle = dataset.borderColor || 'black';\n    ctx.lineWidth = borderWidth;\n\n    for (const node of nodes.values()) {\n      ctx.fillStyle = node.color;\n      const x = xScale.getPixelForValue(node.x);\n      const y = yScale.getPixelForValue(node.y);\n\n      const max = Math[size](node.in || node.out, node.out || node.in);\n      const height = Math.abs(yScale.getPixelForValue(node.y + max) - y);\n      if (borderWidth) {\n        ctx.strokeRect(x, y, nodeWidth, height);\n      }\n      ctx.fillRect(x, y, nodeWidth, height);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * That's where the drawing process happens\n   */\n  draw() {\n    const ctx = this._ctx;\n    const data = this.getMeta().data || []; /* Array<Flow> */\n\n    // Set node colors\n    const active = [];\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      const flow = data[i]; /* Flow at index i */\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n      if (flow.active) {\n        active.push(flow);\n      }\n    }\n    // Make sure nodes connected to hovered flows are using hover colors.\n    for (const flow of active) {\n      flow.from.color = flow.options.colorFrom;\n      flow.to.color = flow.options.colorTo;\n    }\n\n    /* draw SankeyNodes on the canvas */\n    this._drawNodes();\n\n    /* draw Flow elements on the canvas */\n    for (let i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(ctx);\n    }\n\n    /* draw labels (for SankeyNodes) on the canvas */\n    this._drawLabels();\n  }\n}\n\nSankeyController.id = 'sankey';\n\nSankeyController.defaults = {\n  dataElementType: 'flow',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'x2', 'y2', 'height']\n    },\n    progress: {\n      easing: 'linear',\n      duration: (ctx) => ctx.type === 'data' ? (ctx.parsed._custom.x - ctx.parsed.x) * 200 : undefined,\n      delay: (ctx) => ctx.type === 'data' ? ctx.parsed.x * 500 + ctx.dataIndex * 20 : undefined,\n    },\n    colors: {\n      type: 'color',\n      properties: ['colorFrom', 'colorTo'],\n    },\n  },\n  transitions: {\n    hide: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          to: 'transparent'\n        }\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          type: 'color',\n          properties: ['colorFrom', 'colorTo'],\n          from: 'transparent'\n        }\n      }\n    }\n  }\n};\n\nSankeyController.overrides = {\n  interaction: {\n    mode: 'nearest',\n    intersect: true\n  },\n  datasets: {\n    clip: false,\n    parsing: true\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          const item = context.dataset.data[context.dataIndex];\n          return item.from + ' -> ' + item.to + ': ' + item.flow;\n        }\n      },\n    },\n    legend: {\n      display: false,\n    },\n  },\n  scales: {\n    x: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      offset: false,\n    },\n    y: {\n      type: 'linear',\n      bounds: 'data',\n      display: false,\n      min: 0,\n      reverse: true,\n      offset: false,\n    },\n  },\n  layout: {\n    padding: {\n      top: 3,\n      left: 3,\n      right: 13,\n      bottom: 3,\n    },\n  },\n};\n\n/**\n * @typedef {{x: number, y: number}} ControlPoint\n * @typedef {{cp1: ControlPoint, cp2: ControlPoint}} ControlPoints\n *\n * @param {number} x\n * @param {number} y\n * @param {number} x2\n * @param {number} y2\n * @return {ControlPoints}\n */\nconst controlPoints = (x, y, x2, y2) => x < x2\n  ? {\n    cp1: {x: x + (x2 - x) / 3 * 2, y},\n    cp2: {x: x + (x2 - x) / 3, y: y2}\n  }\n  : {\n    cp1: {x: x - (x - x2) / 3, y: 0},\n    cp2: {x: x2 + (x - x2) / 3, y: 0}\n  };\n\n/**\n *\n * @param {ControlPoint} p1\n * @param {ControlPoint} p2\n * @param {number} t\n * @return {ControlPoint}\n */\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Flow} flow\n */\nfunction setStyle(ctx, {x, x2, options}) {\n  let fill;\n\n  if (options.colorMode === 'from') {\n    fill = color(options.colorFrom).alpha(0.5).rgbString();\n  } else if (options.colorMode === 'to') {\n    fill = color(options.colorTo).alpha(0.5).rgbString();\n  } else {\n    fill = ctx.createLinearGradient(x, 0, x2, 0);\n    fill.addColorStop(0, color(options.colorFrom).alpha(0.5).rgbString());\n    fill.addColorStop(1, color(options.colorTo).alpha(0.5).rgbString());\n  }\n\n  ctx.fillStyle = fill;\n  ctx.strokeStyle = fill;\n  ctx.lineWidth = 0.5;\n}\n\nclass Flow extends Element {\n\n  /**\n   * @param {FlowConfig} cfg\n   */\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.x2 = undefined;\n    this.y2 = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  draw(ctx) {\n    const me = this;\n    const {x, x2, y, y2, height, progress} = me;\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n\n    if (progress === 0) {\n      return;\n    }\n    ctx.save();\n    if (progress < 1) {\n      ctx.beginPath();\n      ctx.rect(x, Math.min(y, y2), (x2 - x) * progress + 1, Math.abs(y2 - y) + height + 1);\n      ctx.clip();\n    }\n\n    setStyle(ctx, me);\n\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, x2, y2);\n    ctx.lineTo(x2, y2 + height);\n    ctx.bezierCurveTo(cp2.x, cp2.y + height, cp1.x, cp1.y + height, x, y + height);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    if (mouseX < x || mouseX > x2) {\n      return false;\n    }\n    const {cp1, cp2} = controlPoints(x, y, x2, y2);\n    const t = (mouseX - x) / (x2 - x);\n    const p1 = {x, y};\n    const p2 = {x: x2, y: y2};\n    const a = pointInLine(p1, cp1, t);\n    const b = pointInLine(cp1, cp2, t);\n    const c = pointInLine(cp2, p2, t);\n    const d = pointInLine(a, b, t);\n    const e = pointInLine(b, c, t);\n    const topY = pointInLine(d, e, t).y;\n    return mouseY >= topY && mouseY <= topY + height;\n  }\n\n  /**\n   * @param {number} mouseX\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inXRange(mouseX, useFinalPosition) {\n    const {x, x2} = this.getProps(['x', 'x2'], useFinalPosition);\n    return mouseX >= x && mouseX <= x2;\n  }\n\n  /**\n   * @param {number} mouseY\n   * @param {boolean} useFinalPosition\n   * @return {boolean}\n   */\n  inYRange(mouseY, useFinalPosition) {\n    const {y, y2, height} = this.getProps(['y', 'y2', 'height'], useFinalPosition);\n    const minY = Math.min(y, y2);\n    const maxY = Math.max(y, y2) + height;\n    return mouseY >= minY && mouseY <= maxY;\n  }\n\n  /**\n   * @param {boolean} useFinalPosition\n   * @return {{x: number, y:number}}\n   */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, x2, y2, height} = this.getProps(['x', 'y', 'x2', 'y2', 'height'], useFinalPosition);\n    return {\n      x: (x + x2) / 2,\n      y: (y + y2 + height) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  /**\n   * @param {\"x\" | \"y\"} axis\n   * @return {number}\n   */\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n\nFlow.id = 'flow';\nFlow.defaults = {\n  colorFrom: 'red',\n  colorTo: 'green',\n  colorMode: 'gradient',\n  hoverColorFrom: (ctx, options) => getHoverColor(options.colorFrom),\n  hoverColorTo: (ctx, options) => getHoverColor(options.colorTo)\n};\n\nexport { Flow, SankeyController };\n","export * from '../dist/helpers.js';\n"],"names":["_chart","require","window","RocketBotWeb","parcelHelpers","_auto","_chartjsChartSankey","Chart","register","SankeyController","Flow","doSetUpByDayOfWeek","canvas","document","getElementById","dataString","textContent","data","JSON","parse","datasets","rider","riders","push","label","riderToWeekdayToCount","type","labels","doSetUpByRideCountGroup","riderToGroupToCount","chart","rideCountGroupNames","options","scales","y","ticks","format","minimumFractionDigits","logPlotCheckbox","addEventListener","checked","update","doSetUpLatestRiderCount","datum","from","substring","to","setUpByDayOfWeek","setUpByRideCountGroup","setUpLatestRiderCount","Charting","Bim","_chartJs","exportAll","exports","registerables","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","name1","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","members","prototype","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","c","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","generateTicks","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","toString","isNumberFinite","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","clone","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","_deprecated","keyResolvers","_splitKey","tmp","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","n","rounded","degrees","radians","isFiniteNumber","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","saturate","darken","colors","intlCache","num","stringify","Intl","NumberFormat","getNumberFormat","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","maximumFractionDigits","getScope","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","drawBackdrop","strokeText","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","objProps","read","parseInt","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","borderBox","paddings","borders","touches","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","rectX","getRightToLeftAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","export","b2n","b2p","index_esm","hexParse","hsl2rgb","hslString","hsv2rgb","hueParse","hwb2rgb","lim","n2b","n2p","nameParse","p2b","rgb2hsl","rgbParse","rgbString","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","hueValue","calln","hue","exec","deg","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpacked","tkeys","ok","nk","unpack","RGB_RE","modHSL","fromObject","_rgb","_valid","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","desaturate","interopDefault","__esModule","default","defineInteropFlag","dest","destName","_helpers","validateSizeValue","nextColumn","columnsNotInTo","nodeByXY","prevCountId","nodeCount","list","countId","getCountId","elem","_visited","flowByNodeCount","processFrom","flow","out","processTo","in","setOrGetY","calculateY","nodeArray","rest","leftNodes","rightNodes","leftToDo","rightToDo","centerToDo","leftY","rightY","processRest","nodes","priority","dataPoint","column","calculateX","nextYStart","calculateYUsingPriority","maxYWithPadding","rows","addPadding","nodeSize","overlapFrom","overlapTo","addY","sortFlows","getAddY","fromKey","toKey","flowKey","sankeyData","_nodes","flowSort","buildNodesFromRawData","_maxX","_maxY","fromY","toY","elems","nodeWidth","_drawLabels","textX","_drawLabel","toTextLines","linesLength","middle","textHeight","_drawNodes","colorFrom","colorTo","transitions","pointInLine","colorMode","createLinearGradient","addColorStop","topY","hoverColorFrom","hoverColorTo","_helpersJs"],"version":3,"file":"rocketbotweb.js.map"}